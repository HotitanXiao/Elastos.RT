#ifndef ___Elastos_CoreLibrary_Apache_h__
#define ___Elastos_CoreLibrary_Apache_h__

#include <Elastos.CoreLibrary.h>

EXTERN_C ELAPI _Impl_AcquireCallbackHandler(PInterface pServerObj, _ELASTOS REIID iid, PInterface *ppHandler);
EXTERN_C ELAPI _Impl_CheckClsId(PInterface pServerObj, const _ELASTOS ClassID* pClassid, PInterface *ppServerObj);

namespace Org {
namespace Apache {
namespace Harmony {
namespace Luni {
namespace Internal {
namespace Util {
CAR_INTERFACE("EF2F3B45-0752-E484-8F56-C9FC03430D15")
ITimezoneGetter : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITimezoneGetter*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimezoneGetter*)pObj->Probe(EIID_ITimezoneGetter);
    }

    static CARAPI_(ITimezoneGetter*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimezoneGetter*)pObj->Probe(EIID_ITimezoneGetter);
    }

    virtual CARAPI GetId(
        /* [out] */ _ELASTOS String * result) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Luni {
namespace Internal {
namespace Util {
CAR_INTERFACE("824A5241-0752-E484-8F56-C91C01C58BB0")
ITimezoneGetterHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITimezoneGetterHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimezoneGetterHelper*)pObj->Probe(EIID_ITimezoneGetterHelper);
    }

    static CARAPI_(ITimezoneGetterHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimezoneGetterHelper*)pObj->Probe(EIID_ITimezoneGetterHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Luni::Internal::Util::ITimezoneGetter ** result) = 0;

    virtual CARAPI SetInstance(
        /* [in] */ Org::Apache::Harmony::Luni::Internal::Util::ITimezoneGetter * getter) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
CAR_INTERFACE("529F7F25-B3D2-2419-6EC4-FD81A1868A1F")
IExpatReader : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExpatReader*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExpatReader*)pObj->Probe(EIID_IExpatReader);
    }

    static CARAPI_(IExpatReader*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExpatReader*)pObj->Probe(EIID_IExpatReader);
    }

    virtual CARAPI GetLexicalHandler(
        /* [out] */ Org::Xml::Sax::Ext::ILexicalHandler ** handler) = 0;

    virtual CARAPI SetLexicalHandler(
        /* [in] */ Org::Xml::Sax::Ext::ILexicalHandler * lexicalHandler) = 0;

    virtual CARAPI IsNamespaceProcessingEnabled(
        /* [out] */ _ELASTOS Boolean * enabled) = 0;

    virtual CARAPI SetNamespaceProcessingEnabled(
        /* [in] */ _ELASTOS Boolean processNamespaces) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
CAR_INTERFACE("782C423F-B3D2-2419-6E70-B1F103430D15")
IExpatAttributes : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExpatAttributes*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExpatAttributes*)pObj->Probe(EIID_IExpatAttributes);
    }

    static CARAPI_(IExpatAttributes*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExpatAttributes*)pObj->Probe(EIID_IExpatAttributes);
    }

    virtual CARAPI GetParserPointer(
        /* [out] */ _ELASTOS Int64 * pointer) = 0;

    virtual CARAPI GetPointer(
        /* [out] */ _ELASTOS Int64 * pointer) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("92F73308-8552-E992-259F-A804CFEF8FD5")
ILeafNodeImpl : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ILeafNodeImpl*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ILeafNodeImpl*)pObj->Probe(EIID_ILeafNodeImpl);
    }

    static CARAPI_(ILeafNodeImpl*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ILeafNodeImpl*)pObj->Probe(EIID_ILeafNodeImpl);
    }

    virtual CARAPI IsParentOf(
        /* [in] */ Org::W3c::Dom::INode * node,
        /* [out] */ _ELASTOS Boolean * isParentOf) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("74503A58-90D2-2444-5E3D-6BC008CB8B1F")
ICharacterDataImpl : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICharacterDataImpl*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICharacterDataImpl*)pObj->Probe(EIID_ICharacterDataImpl);
    }

    static CARAPI_(ICharacterDataImpl*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICharacterDataImpl*)pObj->Probe(EIID_ICharacterDataImpl);
    }

    virtual CARAPI AppendDataTo(
        /* [in] */ Elastos::Core::IStringBuilder * stringBuilder) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("CFA04F23-8312-0A06-3A28-A85CEF07861A")
ICDATASectionImpl : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDATASectionImpl*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDATASectionImpl*)pObj->Probe(EIID_ICDATASectionImpl);
    }

    static CARAPI_(ICDATASectionImpl*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDATASectionImpl*)pObj->Probe(EIID_ICDATASectionImpl);
    }

    virtual CARAPI Split() = 0;

    virtual CARAPI NeedsSplitting(
        /* [out] */ _ELASTOS Boolean * needsSplitting) = 0;

    virtual CARAPI ReplaceWithText(
        /* [out] */ Org::W3c::Dom::IText ** replaceWithText) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("B19D3836-0312-3019-DED7-FB81A1868A1F")
ICommentImpl : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICommentImpl*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICommentImpl*)pObj->Probe(EIID_ICommentImpl);
    }

    static CARAPI_(ICommentImpl*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICommentImpl*)pObj->Probe(EIID_ICommentImpl);
    }

    virtual CARAPI ContainsDashDash(
        /* [out] */ _ELASTOS Boolean * containsDashDash) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("0D6A3A5C-0352-160C-8874-C377B7339617")
IDOMConfigurationImpl : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDOMConfigurationImpl*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDOMConfigurationImpl*)pObj->Probe(EIID_IDOMConfigurationImpl);
    }

    static CARAPI_(IDOMConfigurationImpl*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDOMConfigurationImpl*)pObj->Probe(EIID_IDOMConfigurationImpl);
    }

    virtual CARAPI Normalize(
        /* [in] */ Org::W3c::Dom::INode * node) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("FCCD322F-D5D2-181F-6AA8-F8A160060913")
IParameter : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IParameter*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IParameter*)pObj->Probe(EIID_IParameter);
    }

    static CARAPI_(IParameter*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IParameter*)pObj->Probe(EIID_IParameter);
    }

    virtual CARAPI Get(
        /* [in] */ Org::Apache::Harmony::Xml::Dom::IDOMConfigurationImpl * config,
        /* [out] */ IObject ** result) = 0;

    virtual CARAPI Set(
        /* [in] */ Org::Apache::Harmony::Xml::Dom::IDOMConfigurationImpl * config,
        /* [in] */ IObject * value) = 0;

    virtual CARAPI CanSet(
        /* [in] */ Org::Apache::Harmony::Xml::Dom::IDOMConfigurationImpl * config,
        /* [in] */ IObject * value,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("7B86433E-0352-160C-E891-805F2F028A17")
IDOMImplementationImplHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDOMImplementationImplHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDOMImplementationImplHelper*)pObj->Probe(EIID_IDOMImplementationImplHelper);
    }

    static CARAPI_(IDOMImplementationImplHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDOMImplementationImplHelper*)pObj->Probe(EIID_IDOMImplementationImplHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::W3c::Dom::IDOMImplementation ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("7F903E27-ACD2-117A-50BC-9871FF07861A")
IDocumentImplHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDocumentImplHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDocumentImplHelper*)pObj->Probe(EIID_IDocumentImplHelper);
    }

    static CARAPI_(IDocumentImplHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDocumentImplHelper*)pObj->Probe(EIID_IDocumentImplHelper);
    }

    virtual CARAPI IsXMLIdentifier(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("7C77304D-0292-170E-022C-C8B8E607861A")
IASN1BitString : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1BitString*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1BitString*)pObj->Probe(EIID_IASN1BitString);
    }

    static CARAPI_(IASN1BitString*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1BitString*)pObj->Probe(EIID_IASN1BitString);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("E84F4144-0292-170E-022C-C8B826028A17")
IASN1BitStringHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1BitStringHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1BitStringHelper*)pObj->Probe(EIID_IASN1BitStringHelper);
    }

    static CARAPI_(IASN1BitStringHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1BitStringHelper*)pObj->Probe(EIID_IASN1BitStringHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1BitString ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("705C3001-C292-015D-23C7-F64DC6B7FD63")
IASN1Constants : public IInterface
{
    static const _ELASTOS Int32 CLASS_UNIVERSAL = 0;
    static const _ELASTOS Int32 CLASS_APPLICATION = 64;
    static const _ELASTOS Int32 CLASS_CONTEXTSPECIFIC = 128;
    static const _ELASTOS Int32 CLASS_PRIVATE = 192;
    static const _ELASTOS Int32 PC_PRIMITIVE = 0;
    static const _ELASTOS Int32 PC_CONSTRUCTED = 32;
    static const _ELASTOS Int32 TAG_BOOLEAN = 1;
    static const _ELASTOS Int32 TAG_INTEGER = 2;
    static const _ELASTOS Int32 TAG_BITSTRING = 3;
    static const _ELASTOS Int32 TAG_OCTETSTRING = 4;
    static const _ELASTOS Int32 TAG_NULL = 5;
    static const _ELASTOS Int32 TAG_OID = 6;
    static const _ELASTOS Int32 TAG_OBJDESCRIPTOR = 7;
    static const _ELASTOS Int32 TAG_EXTERNAL = 8;
    static const _ELASTOS Int32 TAG_INSTANCEOF = 8;
    static const _ELASTOS Int32 TAG_REAL = 9;
    static const _ELASTOS Int32 TAG_ENUM = 10;
    static const _ELASTOS Int32 TAG_EMBEDDEDPDV = 11;
    static const _ELASTOS Int32 TAG_UTF8STRING = 12;
    static const _ELASTOS Int32 TAG_RELATIVEOID = 13;
    static const _ELASTOS Int32 TAG_SEQUENCE = 16;
    static const _ELASTOS Int32 TAG_SEQUENCEOF = 16;
    static const _ELASTOS Int32 TAG_SET = 17;
    static const _ELASTOS Int32 TAG_SETOF = 17;
    static const _ELASTOS Int32 TAG_NUMERICSTRING = 18;
    static const _ELASTOS Int32 TAG_PRINTABLESTRING = 19;
    static const _ELASTOS Int32 TAG_TELETEXSTRING = 20;
    static const _ELASTOS Int32 TAG_T61STRING = 20;
    static const _ELASTOS Int32 TAG_VIDEOTEXSTRING = 21;
    static const _ELASTOS Int32 TAG_IA5STRING = 22;
    static const _ELASTOS Int32 TAG_UTCTIME = 23;
    static const _ELASTOS Int32 TAG_GENERALIZEDTIME = 24;
    static const _ELASTOS Int32 TAG_GRAPHICSTRING = 25;
    static const _ELASTOS Int32 TAG_VISIBLESTRING = 26;
    static const _ELASTOS Int32 TAG_ISO646STRING = 26;
    static const _ELASTOS Int32 TAG_GENERALSTRING = 27;
    static const _ELASTOS Int32 TAG_UNIVERSALSTRING = 28;
    static const _ELASTOS Int32 TAG_BMPSTRING = 30;
    static const _ELASTOS Int32 TAG_C_BITSTRING = 35;
    static const _ELASTOS Int32 TAG_C_OCTETSTRING = 36;
    static const _ELASTOS Int32 TAG_C_UTF8STRING = 44;
    static const _ELASTOS Int32 TAG_C_SEQUENCE = 48;
    static const _ELASTOS Int32 TAG_C_SEQUENCEOF = 48;
    static const _ELASTOS Int32 TAG_C_SET = 49;
    static const _ELASTOS Int32 TAG_C_SETOF = 49;
    static const _ELASTOS Int32 TAG_C_UTCTIME = 55;
    static const _ELASTOS Int32 TAG_C_GENERALIZEDTIME = 56;
    static const _ELASTOS Int32 TAG_ANY = 0;
    static const _ELASTOS Int32 TAG_CHOICE = 0;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Constants*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Constants*)pObj->Probe(EIID_IASN1Constants);
    }

    static CARAPI_(IASN1Constants*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Constants*)pObj->Probe(EIID_IASN1Constants);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("FB17324A-0292-170E-0260-78356DCD0F0C")
IASN1OctetString : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1OctetString*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1OctetString*)pObj->Probe(EIID_IASN1OctetString);
    }

    static CARAPI_(IASN1OctetString*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1OctetString*)pObj->Probe(EIID_IASN1OctetString);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("66F04350-0292-170E-0260-78356D4D0414")
IASN1OctetStringHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1OctetStringHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1OctetStringHelper*)pObj->Probe(EIID_IASN1OctetStringHelper);
    }

    static CARAPI_(IASN1OctetStringHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1OctetStringHelper*)pObj->Probe(EIID_IASN1OctetStringHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1OctetString ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("FAAFA518-C292-415D-C7CF-E88FD5EAAFCC")
IASN1Type : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Type*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Type*)pObj->Probe(EIID_IASN1Type);
    }

    static CARAPI_(IASN1Type*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Type*)pObj->Probe(EIID_IASN1Type);
    }

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IInterface ** object) = 0;

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 encodingLen,
        /* [out] */ IInterface ** object) = 0;

    virtual CARAPI Decode(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IInterface ** object) = 0;

    virtual CARAPI Verify(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded) = 0;

    virtual CARAPI Verify(
        /* [in] */ Elastos::IO::IInputStream * is) = 0;

    virtual CARAPI Encode(
        /* [in] */ IInterface * object,
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encode) = 0;

    virtual CARAPI Decode(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream * bis,
        /* [out] */ IInterface ** object) = 0;

    virtual CARAPI CheckTag(
        /* [in] */ _ELASTOS Int32 identifier,
        /* [out] */ _ELASTOS Boolean * checkTag) = 0;

    virtual CARAPI EncodeASN(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IBerOutputStream * bos) = 0;

    virtual CARAPI EncodeContent(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IBerOutputStream * bos) = 0;

    virtual CARAPI SetEncodingContent(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IBerOutputStream * bos) = 0;

    virtual CARAPI GetEncodedLength(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IBerOutputStream * bos,
        /* [out] */ _ELASTOS Int32 * length) = 0;

    virtual CARAPI GetId(
        /* [out] */ _ELASTOS Int32 * id) = 0;

    virtual CARAPI GetConstrId(
        /* [out] */ _ELASTOS Int32 * constrId) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("D377412F-0292-170E-02C0-5EFE03430D15")
IASN1StringType : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1StringType*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1StringType*)pObj->Probe(EIID_IASN1StringType);
    }

    static CARAPI_(IASN1StringType*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1StringType*)pObj->Probe(EIID_IASN1StringType);
    }

    virtual CARAPI GetDecodedObject(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream * bis,
        /* [out] */ IInterface ** object) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("648FA057-0292-170E-02AC-911301C58BB0")
IASN1StringTypeHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1StringTypeHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1StringTypeHelper*)pObj->Probe(EIID_IASN1StringTypeHelper);
    }

    static CARAPI_(IASN1StringTypeHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1StringTypeHelper*)pObj->Probe(EIID_IASN1StringTypeHelper);
    }

    virtual CARAPI GetBMPSTRING(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

    virtual CARAPI GetIA5STRING(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

    virtual CARAPI GetGENERALSTRING(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

    virtual CARAPI GetPRINTABLESTRING(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

    virtual CARAPI GetTELETEXSTRING(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

    virtual CARAPI GetUNIVERSALSTRING(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

    virtual CARAPI GetUTF8STRING(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("629A2B0E-C292-415D-C7C2-E88FD5EAAFCC")
IASN1Time : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Time*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Time*)pObj->Probe(EIID_IASN1Time);
    }

    static CARAPI_(IASN1Time*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Time*)pObj->Probe(EIID_IASN1Time);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("10FF2E1D-C292-815D-D731-1D0BA33F56AB")
IASN1UTCTime : public IInterface
{
    static const _ELASTOS Int32 UTC_HM = 11;
    static const _ELASTOS Int32 UTC_HMS = 13;
    static const _ELASTOS Int32 UTC_LOCAL_HM = 15;
    static const _ELASTOS Int32 UTC_LOCAL_HMS = 17;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1UTCTime*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1UTCTime*)pObj->Probe(EIID_IASN1UTCTime);
    }

    static CARAPI_(IASN1UTCTime*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1UTCTime*)pObj->Probe(EIID_IASN1UTCTime);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("7CD73F0C-C292-815D-D731-1D0BA311FACE")
IASN1UTCTimeHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1UTCTimeHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1UTCTimeHelper*)pObj->Probe(EIID_IASN1UTCTimeHelper);
    }

    static CARAPI_(IASN1UTCTimeHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1UTCTimeHelper*)pObj->Probe(EIID_IASN1UTCTimeHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1UTCTime ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("0393461A-C292-015D-B3CA-AC89FE58ADFE")
IASN1Choice : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Choice*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Choice*)pObj->Probe(EIID_IASN1Choice);
    }

    static CARAPI_(IASN1Choice*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Choice*)pObj->Probe(EIID_IASN1Choice);
    }

    virtual CARAPI GetIndex(
        /* [in] */ IInterface * object,
        /* [out] */ _ELASTOS Int32 * index) = 0;

    virtual CARAPI GetObjectToEncode(
        /* [in] */ IInterface * object,
        /* [out] */ IInterface ** obj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("30533604-C292-815D-B3CF-2F6BB2F78FD5")
IASN1Explicit : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Explicit*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Explicit*)pObj->Probe(EIID_IASN1Explicit);
    }

    static CARAPI_(IASN1Explicit*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Explicit*)pObj->Probe(EIID_IASN1Explicit);
    }

    virtual CARAPI GetType(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("CD025A47-0292-170E-02C8-29E2F2D5C41F")
IASN1TypeCollection : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1TypeCollection*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1TypeCollection*)pObj->Probe(EIID_IASN1TypeCollection);
    }

    static CARAPI_(IASN1TypeCollection*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1TypeCollection*)pObj->Probe(EIID_IASN1TypeCollection);
    }

    virtual CARAPI GetType(
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> ** value) = 0;

    virtual CARAPI GetOPTIONAL(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Boolean> ** value) = 0;

    virtual CARAPI GetDEFAULT(
        /* [out, callee] */ _ELASTOS ArrayOf<IInterface *> ** value) = 0;

    virtual CARAPI GetValues(
        /* [in] */ IInterface * object,
        /* [in] */ _ELASTOS ArrayOf<IInterface *> * values) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("75DF4D41-0292-170E-027C-0044BB88CB57")
IASN1ValueCollection : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1ValueCollection*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1ValueCollection*)pObj->Probe(EIID_IASN1ValueCollection);
    }

    static CARAPI_(IASN1ValueCollection*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1ValueCollection*)pObj->Probe(EIID_IASN1ValueCollection);
    }

    virtual CARAPI GetValues(
        /* [in] */ IInterface * object,
        /* [out] */ Elastos::Utility::ICollection ** values) = 0;

    virtual CARAPI SetType(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type) = 0;

    virtual CARAPI GetType(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** type) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("96BA2F12-C292-015D-87D2-381A9BE88FD5")
IASN1Sequence : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Sequence*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Sequence*)pObj->Probe(EIID_IASN1Sequence);
    }

    static CARAPI_(IASN1Sequence*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Sequence*)pObj->Probe(EIID_IASN1Sequence);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("47543106-C292-015D-87D2-381A9B2896FE")
IASN1SequenceOf : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1SequenceOf*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1SequenceOf*)pObj->Probe(EIID_IASN1SequenceOf);
    }

    static CARAPI_(IASN1SequenceOf*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1SequenceOf*)pObj->Probe(EIID_IASN1SequenceOf);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("B0AF2A19-C292-015D-87DE-3F56ABBF3293")
IASN1Set : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Set*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Set*)pObj->Probe(EIID_IASN1Set);
    }

    static CARAPI_(IASN1Set*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Set*)pObj->Probe(EIID_IASN1Set);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("4A602C19-C292-015D-87DE-58FA63B5FA2B")
IASN1SetOf : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1SetOf*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1SetOf*)pObj->Probe(EIID_IASN1SetOf);
    }

    static CARAPI_(IASN1SetOf*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1SetOf*)pObj->Probe(EIID_IASN1SetOf);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("BDA62A03-C292-815D-12F3-3F56ABBF3293")
IASN1Any : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Any*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Any*)pObj->Probe(EIID_IASN1Any);
    }

    static CARAPI_(IASN1Any*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Any*)pObj->Probe(EIID_IASN1Any);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("297F3B17-C292-815D-12F3-11FACE68FD63")
IASN1AnyHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1AnyHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1AnyHelper*)pObj->Probe(EIID_IASN1AnyHelper);
    }

    static CARAPI_(IASN1AnyHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1AnyHelper*)pObj->Probe(EIID_IASN1AnyHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Any ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("F2D72E1C-C292-C15D-22CB-2F4AC63F56AB")
IASN1Boolean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Boolean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Boolean*)pObj->Probe(EIID_IASN1Boolean);
    }

    static CARAPI_(IASN1Boolean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Boolean*)pObj->Probe(EIID_IASN1Boolean);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("5EB03F0B-C292-C15D-22CB-2F4AC611FACE")
IASN1BooleanHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1BooleanHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1BooleanHelper*)pObj->Probe(EIID_IASN1BooleanHelper);
    }

    static CARAPI_(IASN1BooleanHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1BooleanHelper*)pObj->Probe(EIID_IASN1BooleanHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Boolean ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("3D423106-C292-815D-13E3-305A93377AFE")
IASN1Enumerated : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Enumerated*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Enumerated*)pObj->Probe(EIID_IASN1Enumerated);
    }

    static CARAPI_(IASN1Enumerated*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Enumerated*)pObj->Probe(EIID_IASN1Enumerated);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("DFE3420B-C292-815D-13E3-305A93377A46")
IASN1EnumeratedHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1EnumeratedHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1EnumeratedHelper*)pObj->Probe(EIID_IASN1EnumeratedHelper);
    }

    static CARAPI_(IASN1EnumeratedHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1EnumeratedHelper*)pObj->Probe(EIID_IASN1EnumeratedHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Enumerated ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("36583601-C292-015D-84C6-684DBE6C8F9E")
IASN1GeneralizedTime : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1GeneralizedTime*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1GeneralizedTime*)pObj->Probe(EIID_IASN1GeneralizedTime);
    }

    static CARAPI_(IASN1GeneralizedTime*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1GeneralizedTime*)pObj->Probe(EIID_IASN1GeneralizedTime);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("A2304709-C292-015D-84C6-684DBE6C8F9E")
IASN1GeneralizedTimeHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1GeneralizedTimeHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1GeneralizedTimeHelper*)pObj->Probe(EIID_IASN1GeneralizedTimeHelper);
    }

    static CARAPI_(IASN1GeneralizedTimeHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1GeneralizedTimeHelper*)pObj->Probe(EIID_IASN1GeneralizedTimeHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1GeneralizedTime ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("97B72F0B-C292-815D-04CF-2F6BB2F78FD5")
IASN1Implicit : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Implicit*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Implicit*)pObj->Probe(EIID_IASN1Implicit);
    }

    static CARAPI_(IASN1Implicit*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Implicit*)pObj->Probe(EIID_IASN1Implicit);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("E0DB2E03-C292-815D-14DF-A88AD63F56AB")
IASN1Integer : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Integer*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Integer*)pObj->Probe(EIID_IASN1Integer);
    }

    static CARAPI_(IASN1Integer*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Integer*)pObj->Probe(EIID_IASN1Integer);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("F2B76605-C292-815D-14DF-A88AD611FACE")
IASN1IntegerHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1IntegerHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1IntegerHelper*)pObj->Probe(EIID_IASN1IntegerHelper);
    }

    static CARAPI_(IASN1IntegerHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1IntegerHelper*)pObj->Probe(EIID_IASN1IntegerHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Integer ** instance) = 0;

    virtual CARAPI ToIntValue(
        /* [in] */ IInterface * decoded,
        /* [out] */ _ELASTOS Int32 * intValue) = 0;

    virtual CARAPI ToBigIntegerValue(
        /* [in] */ IInterface * decoded,
        /* [out] */ Elastos::Math::IBigInteger ** bigInteger) = 0;

    virtual CARAPI FromIntValue(
        /* [in] */ _ELASTOS Int32 value,
        /* [out] */ IInterface ** fromIntValue) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("C4AB2A01-C292-015D-C69E-3F56ABBF3293")
IASN1Oid : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1Oid*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Oid*)pObj->Probe(EIID_IASN1Oid);
    }

    static CARAPI_(IASN1Oid*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1Oid*)pObj->Probe(EIID_IASN1Oid);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("18A14F0A-C292-015D-C69E-11FACE68FD63")
IASN1OidHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IASN1OidHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1OidHelper*)pObj->Probe(EIID_IASN1OidHelper);
    }

    static CARAPI_(IASN1OidHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IASN1OidHelper*)pObj->Probe(EIID_IASN1OidHelper);
    }

    virtual CARAPI GetInstance(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Oid ** instance) = 0;

    virtual CARAPI GetInstanceForString(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Oid ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("AAF15B5A-82D2-6B8C-7E60-A8A1E28702B0")
IBitString : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBitString*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBitString*)pObj->Probe(EIID_IBitString);
    }

    static CARAPI_(IBitString*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBitString*)pObj->Probe(EIID_IBitString);
    }

    virtual CARAPI GetBit(
        /* [in] */ _ELASTOS Int32 bit,
        /* [out] */ _ELASTOS Boolean * value) = 0;

    virtual CARAPI SetBit(
        /* [in] */ _ELASTOS Int32 bit,
        /* [in] */ _ELASTOS Boolean value) = 0;

    virtual CARAPI ToBooleanArray(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Boolean> ** array) = 0;

    virtual CARAPI GetBytes(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** bytes) = 0;

    virtual CARAPI GetUnusedBits(
        /* [out] */ _ELASTOS Int32 * unusedBits) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("8F48F83D-9912-FF1A-64A3-2001E307861A")
IBerInputStream : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBerInputStream*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBerInputStream*)pObj->Probe(EIID_IBerInputStream);
    }

    static CARAPI_(IBerInputStream*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBerInputStream*)pObj->Probe(EIID_IBerInputStream);
    }

    virtual CARAPI Reset(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded) = 0;

    virtual CARAPI Next(
        /* [out] */ _ELASTOS Int32 * next) = 0;

    virtual CARAPI ReadBitString() = 0;

    virtual CARAPI ReadEnumerated() = 0;

    virtual CARAPI ReadBoolean() = 0;

    virtual CARAPI ReadGeneralizedTime() = 0;

    virtual CARAPI ReadUTCTime() = 0;

    virtual CARAPI ReadInteger() = 0;

    virtual CARAPI ReadOctetString() = 0;

    virtual CARAPI ReadOID() = 0;

    virtual CARAPI ReadSequence(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * sequence) = 0;

    virtual CARAPI ReadSequenceOf(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1SequenceOf * sequenceOf) = 0;

    virtual CARAPI ReadSet(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Set * set) = 0;

    virtual CARAPI ReadSetOf(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1SetOf * setOf) = 0;

    virtual CARAPI ReadString(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1StringType * type) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI GetBuffer(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** buffer) = 0;

    virtual CARAPI GetLength(
        /* [out] */ _ELASTOS Int32 * length) = 0;

    virtual CARAPI GetOffset(
        /* [out] */ _ELASTOS Int32 * offset) = 0;

    virtual CARAPI GetEndOffset(
        /* [out] */ _ELASTOS Int32 * endOffset) = 0;

    virtual CARAPI GetTagOffset(
        /* [out] */ _ELASTOS Int32 * tagOffset) = 0;

    virtual CARAPI SetVerify() = 0;

    virtual CARAPI ReadContent() = 0;

    virtual CARAPI CompactBuffer() = 0;

    virtual CARAPI Put(
        /* [in] */ IInterface * key,
        /* [in] */ IInterface * entry) = 0;

    virtual CARAPI Get(
        /* [in] */ IInterface * key,
        /* [out] */ IInterface ** entry) = 0;

    virtual CARAPI GetContent(
        /* [out] */ IInterface ** content) = 0;

    virtual CARAPI GetContentOffset(
        /* [out] */ _ELASTOS Int32 * contentOffset) = 0;

    virtual CARAPI GetVerify(
        /* [out] */ _ELASTOS Boolean * isVerify) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("1807403C-9912-FF1A-64A3-200123028A17")
IBerInputStreamHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBerInputStreamHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBerInputStreamHelper*)pObj->Probe(EIID_IBerInputStreamHelper);
    }

    static CARAPI_(IBerInputStreamHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBerInputStreamHelper*)pObj->Probe(EIID_IBerInputStreamHelper);
    }

    virtual CARAPI GetLength(
        /* [in] */ const _ELASTOS ArrayOf<_ELASTOS Byte> & encoding,
        /* [out] */ _ELASTOS Int32 * length) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("B840F523-9912-521A-65A3-2001E307861A")
IBerOutputStream : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBerOutputStream*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBerOutputStream*)pObj->Probe(EIID_IBerOutputStream);
    }

    static CARAPI_(IBerOutputStream*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBerOutputStream*)pObj->Probe(EIID_IBerOutputStream);
    }

    virtual CARAPI EncodeTag(
        /* [in] */ _ELASTOS Int32 tag) = 0;

    virtual CARAPI EncodeANY() = 0;

    virtual CARAPI EncodeBitString() = 0;

    virtual CARAPI EncodeBoolean() = 0;

    virtual CARAPI EncodeChoice(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Choice * choice) = 0;

    virtual CARAPI EncodeExplicit(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Explicit * xplicit) = 0;

    virtual CARAPI EncodeGeneralizedTime() = 0;

    virtual CARAPI EncodeUTCTime() = 0;

    virtual CARAPI EncodeInteger() = 0;

    virtual CARAPI EncodeOctetString() = 0;

    virtual CARAPI EncodeOID() = 0;

    virtual CARAPI EncodeSequence(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * sequence) = 0;

    virtual CARAPI EncodeSequenceOf(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1SequenceOf * sequenceOf) = 0;

    virtual CARAPI EncodeSet(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Set * set) = 0;

    virtual CARAPI EncodeSetOf(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1SetOf * setOf) = 0;

    virtual CARAPI EncodeString() = 0;

    virtual CARAPI GetChoiceLength(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Choice * choice) = 0;

    virtual CARAPI GetExplicitLength(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Explicit * sequence) = 0;

    virtual CARAPI GetSequenceLength(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * sequence) = 0;

    virtual CARAPI GetSequenceOfLength(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1SequenceOf * sequence) = 0;

    virtual CARAPI GetSetLength(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Set * set) = 0;

    virtual CARAPI GetSetOfLength(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1SetOf * setOf) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI SetLength(
        /* [in] */ _ELASTOS Int32 length) = 0;

    virtual CARAPI GetLength(
        /* [out] */ _ELASTOS Int32 * length) = 0;

    virtual CARAPI SetContent(
        /* [in] */ IInterface * content) = 0;

    virtual CARAPI GetContent(
        /* [out] */ IInterface ** content) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("F2123128-8352-FFFB-64A3-2001E307861A")
IDerInputStream : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDerInputStream*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDerInputStream*)pObj->Probe(EIID_IDerInputStream);
    }

    static CARAPI_(IDerInputStream*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDerInputStream*)pObj->Probe(EIID_IDerInputStream);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("AFD3323D-8352-52FB-65A3-2001E307861A")
IDerOutputStream : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDerOutputStream*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDerOutputStream*)pObj->Probe(EIID_IDerOutputStream);
    }

    static CARAPI_(IDerOutputStream*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDerOutputStream*)pObj->Probe(EIID_IDerOutputStream);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("A0D24C5B-17D2-CB2B-5874-7BF603430D15")
IObjectIdentifier : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IObjectIdentifier*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IObjectIdentifier*)pObj->Probe(EIID_IObjectIdentifier);
    }

    static CARAPI_(IObjectIdentifier*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IObjectIdentifier*)pObj->Probe(EIID_IObjectIdentifier);
    }

    virtual CARAPI Equals(
        /* [in] */ PInterface o,
        /* [out] */ _ELASTOS Boolean * isEqual) = 0;

    virtual CARAPI GetHashCode(
        /* [out] */ _ELASTOS Int32 * result) = 0;

    virtual CARAPI ToString(
        /* [out] */ _ELASTOS String * result) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("D514585B-17D2-CB2B-5874-7B1601C58BB0")
IObjectIdentifierHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IObjectIdentifierHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IObjectIdentifierHelper*)pObj->Probe(EIID_IObjectIdentifierHelper);
    }

    static CARAPI_(IObjectIdentifierHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IObjectIdentifierHelper*)pObj->Probe(EIID_IObjectIdentifierHelper);
    }

    virtual CARAPI Validate(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid) = 0;

    virtual CARAPI ToString(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ _ELASTOS String * str) = 0;

    virtual CARAPI ToIntArray(
        /* [in] */ const _ELASTOS String& str,
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** intArray) = 0;

    virtual CARAPI IsOID(
        /* [in] */ const _ELASTOS String& str,
        /* [out] */ _ELASTOS Boolean * isOID) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Fortress {
CAR_INTERFACE("BFB7570E-3712-4AB3-7C66-B59CB3275AFF")
ISpiAndProvider : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISpiAndProvider*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISpiAndProvider*)pObj->Probe(EIID_ISpiAndProvider);
    }

    static CARAPI_(ISpiAndProvider*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISpiAndProvider*)pObj->Probe(EIID_ISpiAndProvider);
    }

    virtual CARAPI SetSpi(
        /* [in] */ IInterface * spi) = 0;

    virtual CARAPI GetSpi(
        /* [out] */ IInterface ** spi) = 0;

    virtual CARAPI SetProvider(
        /* [in] */ Elastos::Security::IProvider * provider) = 0;

    virtual CARAPI GetProvider(
        /* [out] */ Elastos::Security::IProvider ** provider) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Fortress {
CAR_INTERFACE("9C315915-1392-6CAB-8CFE-58ADFECA4C9A")
IEngine : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IEngine*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEngine*)pObj->Probe(EIID_IEngine);
    }

    static CARAPI_(IEngine*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEngine*)pObj->Probe(EIID_IEngine);
    }

    virtual CARAPI GetInstance(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ IInterface * param,
        /* [out] */ Org::Apache::Harmony::Security::Fortress::ISpiAndProvider ** instance) = 0;

    virtual CARAPI GetInstance(
        /* [in] */ Elastos::Security::IProviderService * service,
        /* [in] */ const _ELASTOS String& param,
        /* [out] */ Org::Apache::Harmony::Security::Fortress::ISpiAndProvider ** instance) = 0;

    virtual CARAPI GetServices(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Elastos::Utility::IArrayList ** services) = 0;

    virtual CARAPI GetInstance(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IProvider * provider,
        /* [in] */ IInterface * param,
        /* [out] */ IInterface ** instance) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Fortress {
CAR_INTERFACE("61054117-1392-6CAB-8C46-E83BA3F58FD5")
IEngineHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IEngineHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEngineHelper*)pObj->Probe(EIID_IEngineHelper);
    }

    static CARAPI_(IEngineHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEngineHelper*)pObj->Probe(EIID_IEngineHelper);
    }

    virtual CARAPI SetDoor(
        /* [in] */ Org::Apache::Harmony::Security::Fortress::ISecurityAccess * door) = 0;

    virtual CARAPI GetDoor(
        /* [out] */ Org::Apache::Harmony::Security::Fortress::ISecurityAccess ** door) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Fortress {
CAR_INTERFACE("D86C5748-0712-B014-F4CA-56E029DA0F0C")
ISecurityAccess : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISecurityAccess*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISecurityAccess*)pObj->Probe(EIID_ISecurityAccess);
    }

    static CARAPI_(ISecurityAccess*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISecurityAccess*)pObj->Probe(EIID_ISecurityAccess);
    }

    virtual CARAPI RenumProviders() = 0;

    virtual CARAPI GetAliases(
        /* [in] */ Elastos::Security::IProviderService * s,
        /* [out] */ Elastos::Utility::IList ** aliases) = 0;

    virtual CARAPI GetService(
        /* [in] */ Elastos::Security::IProvider * p,
        /* [in] */ const _ELASTOS String& type,
        /* [out] */ Elastos::Security::IProviderService ** service) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Fortress {
CAR_INTERFACE("1467B831-6652-3F1B-30D4-50F143C10C12")
IServices : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IServices*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IServices*)pObj->Probe(EIID_IServices);
    }

    static CARAPI_(IServices*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IServices*)pObj->Probe(EIID_IServices);
    }

    virtual CARAPI GetProviders(
        /* [out] */ Elastos::Utility::IArrayList ** providers) = 0;

    virtual CARAPI GetProvider(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Security::IProvider ** provider) = 0;

    virtual CARAPI InsertProviderAt(
        /* [in] */ Elastos::Security::IProvider * provider,
        /* [in] */ _ELASTOS Int32 position,
        /* [out] */ _ELASTOS Int32 * pos) = 0;

    virtual CARAPI RemoveProvider(
        /* [in] */ _ELASTOS Int32 providerNumber) = 0;

    virtual CARAPI InitServiceInfo(
        /* [in] */ Elastos::Security::IProvider * p) = 0;

    virtual CARAPI IsEmpty(
        /* [out] */ _ELASTOS Boolean * empty) = 0;

    virtual CARAPI GetServices(
        /* [in] */ const _ELASTOS String& key,
        /* [out] */ Elastos::Utility::IArrayList ** services) = 0;

    virtual CARAPI GetSecureRandomService(
        /* [out] */ Elastos::Security::IProviderService ** service) = 0;

    virtual CARAPI SetNeedRefresh() = 0;

    virtual CARAPI GetCacheVersion(
        /* [out] */ _ELASTOS Int32 * cacheVersion) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs10 {
CAR_INTERFACE("C7666351-8312-9F67-BB71-4A3317B2961F")
ICertificationRequestInfo : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificationRequestInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificationRequestInfo*)pObj->Probe(EIID_ICertificationRequestInfo);
    }

    static CARAPI_(ICertificationRequestInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificationRequestInfo*)pObj->Probe(EIID_ICertificationRequestInfo);
    }

    virtual CARAPI GetSubject(
        /* [out] */ Org::Apache::Harmony::Security::X501::IName ** name) = 0;

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI ToString(
        /* [out] */ _ELASTOS String * str) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs10 {
CAR_INTERFACE("5E494A45-8312-9F67-BB71-4A3317B29608")
ICertificationRequestInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificationRequestInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificationRequestInfoHelper*)pObj->Probe(EIID_ICertificationRequestInfoHelper);
    }

    static CARAPI_(ICertificationRequestInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificationRequestInfoHelper*)pObj->Probe(EIID_ICertificationRequestInfoHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs10 {
CAR_INTERFACE("9BD5564D-8312-9F67-BB71-4A3317F20F0C")
ICertificationRequest : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificationRequest*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificationRequest*)pObj->Probe(EIID_ICertificationRequest);
    }

    static CARAPI_(ICertificationRequest*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificationRequest*)pObj->Probe(EIID_ICertificationRequest);
    }

    virtual CARAPI GetInfo(
        /* [out] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo ** info) = 0;

    virtual CARAPI GetSignature(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** signature) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs10 {
CAR_INTERFACE("0E274648-8312-9F67-BB71-4A3317720414")
ICertificationRequestHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificationRequestHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificationRequestHelper*)pObj->Probe(EIID_ICertificationRequestHelper);
    }

    static CARAPI_(ICertificationRequestHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificationRequestHelper*)pObj->Probe(EIID_ICertificationRequestHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs7 {
CAR_INTERFACE("40105E52-1112-31CD-6E68-F981A1868A1F")
IContentInfo : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IContentInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IContentInfo*)pObj->Probe(EIID_IContentInfo);
    }

    static CARAPI_(IContentInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IContentInfo*)pObj->Probe(EIID_IContentInfo);
    }

    virtual CARAPI GetSignedData(
        /* [out] */ Org::Apache::Harmony::Security::Pkcs7::ISignedData ** signedData) = 0;

    virtual CARAPI GetContent(
        /* [out] */ IInterface ** content) = 0;

    virtual CARAPI GetContentType(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** contentType) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs7 {
CAR_INTERFACE("3C4B9841-1112-31CD-6E68-8980E245D81A")
IContentInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IContentInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IContentInfoHelper*)pObj->Probe(EIID_IContentInfoHelper);
    }

    static CARAPI_(IContentInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IContentInfoHelper*)pObj->Probe(EIID_IContentInfoHelper);
    }

    virtual CARAPI GetData(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** data) = 0;

    virtual CARAPI GetSignedData(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** signedData) = 0;

    virtual CARAPI GetEnvelopedData(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** envelopedData) = 0;

    virtual CARAPI GetSignedAndEnvelopedData(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** signedAndEnvelopedData) = 0;

    virtual CARAPI GetDigestedData(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** digestedData) = 0;

    virtual CARAPI GetEncryptedData(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** encryptedData) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs7 {
CAR_INTERFACE("BB8F5C14-C712-31AA-7A36-E44DFE58ADFE")
ISignedData : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISignedData*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISignedData*)pObj->Probe(EIID_ISignedData);
    }

    static CARAPI_(ISignedData*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISignedData*)pObj->Probe(EIID_ISignedData);
    }

    virtual CARAPI GetCertificates(
        /* [out] */ Elastos::Utility::IList ** certificate) = 0;

    virtual CARAPI GetCRLs(
        /* [out] */ Elastos::Utility::IList ** crls) = 0;

    virtual CARAPI GetSignerInfos(
        /* [out] */ Elastos::Utility::IList ** signerInfo) = 0;

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs7 {
CAR_INTERFACE("605C3B0F-C712-31AA-7A36-E44D46E83BA3")
ISignedDataHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISignedDataHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISignedDataHelper*)pObj->Probe(EIID_ISignedDataHelper);
    }

    static CARAPI_(ISignedDataHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISignedDataHelper*)pObj->Probe(EIID_ISignedDataHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs7 {
CAR_INTERFACE("8AECF70B-C712-31AA-5A4B-712AFF58ADFE")
ISignerInfo : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISignerInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISignerInfo*)pObj->Probe(EIID_ISignerInfo);
    }

    static CARAPI_(ISignerInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISignerInfo*)pObj->Probe(EIID_ISignerInfo);
    }

    virtual CARAPI GetIssuer(
        /* [out] */ Elastosx::Security::Auth::X500::IX500Principal ** issuer) = 0;

    virtual CARAPI GetSerialNumber(
        /* [out] */ Elastos::Math::IBigInteger ** serialNumber) = 0;

    virtual CARAPI GetDigestAlgorithm(
        /* [out] */ _ELASTOS String * algorithm) = 0;

    virtual CARAPI GetDigestAlgorithmName(
        /* [out] */ _ELASTOS String * algoName) = 0;

    virtual CARAPI GetDigestEncryptionAlgorithm(
        /* [out] */ _ELASTOS String * digestEncryptionAlgorithm) = 0;

    virtual CARAPI GetDigestEncryptionAlgorithmName(
        /* [out] */ _ELASTOS String * algoName) = 0;

    virtual CARAPI GetAuthenticatedAttributes(
        /* [out] */ Elastos::Utility::IList ** authenticatedAttributes) = 0;

    virtual CARAPI GetEncodedAuthenticatedAttributes(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encodedAuthenticatedAttributes) = 0;

    virtual CARAPI GetEncryptedDigest(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encryptedDigest) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs7 {
CAR_INTERFACE("9645531F-C712-31AA-5A4B-712A47E83BA3")
ISignerInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISignerInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISignerInfoHelper*)pObj->Probe(EIID_ISignerInfoHelper);
    }

    static CARAPI_(ISignerInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISignerInfoHelper*)pObj->Probe(EIID_ISignerInfoHelper);
    }

    virtual CARAPI GetIssuerAndSerialNumber(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** issuerAndSerialNumber) = 0;

    virtual CARAPI GetAsn1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs8 {
CAR_INTERFACE("4F1E7642-0652-BDBD-3553-B0A6E507861A")
IPrivateKeyInfo : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPrivateKeyInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyInfo*)pObj->Probe(EIID_IPrivateKeyInfo);
    }

    static CARAPI_(IPrivateKeyInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyInfo*)pObj->Probe(EIID_IPrivateKeyInfo);
    }

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

    virtual CARAPI GetAlgorithmIdentifier(
        /* [out] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier ** identifier) = 0;

    virtual CARAPI GetAttributes(
        /* [out] */ Elastos::Utility::IList ** attributes) = 0;

    virtual CARAPI GetPrivateKey(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** privateKey) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs8 {
CAR_INTERFACE("A35A3F43-0652-BDBD-3553-B0A625028A17")
IPrivateKeyInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPrivateKeyInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyInfoHelper*)pObj->Probe(EIID_IPrivateKeyInfoHelper);
    }

    static CARAPI_(IPrivateKeyInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyInfoHelper*)pObj->Probe(EIID_IPrivateKeyInfoHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("3FAA4701-5292-24D7-1FA1-EF8CD63F56AB")
IArrayHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IArrayHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IArrayHelper*)pObj->Probe(EIID_IArrayHelper);
    }

    static CARAPI_(IArrayHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IArrayHelper*)pObj->Probe(EIID_IArrayHelper);
    }

    virtual CARAPI GetBytesAsString(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * data,
        /* [out] */ _ELASTOS String * str) = 0;

    virtual CARAPI ToString(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * array,
        /* [in] */ const _ELASTOS String& prefix,
        /* [out] */ _ELASTOS String * str) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("5FF6544D-17D2-CB2B-5874-7BF603430D15")
IObjectIdentifier : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IObjectIdentifier*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IObjectIdentifier*)pObj->Probe(EIID_IObjectIdentifier);
    }

    static CARAPI_(IObjectIdentifier*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IObjectIdentifier*)pObj->Probe(EIID_IObjectIdentifier);
    }

    virtual CARAPI GetOid(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** oid) = 0;

    virtual CARAPI GetName(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetGroup(
        /* [out] */ IInterface ** group) = 0;

    virtual CARAPI ToOIDString(
        /* [out] */ _ELASTOS String * str) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("8F935152-17D2-CB2B-5874-7B1601C58BB0")
IObjectIdentifierHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IObjectIdentifierHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IObjectIdentifierHelper*)pObj->Probe(EIID_IObjectIdentifierHelper);
    }

    static CARAPI_(IObjectIdentifierHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IObjectIdentifierHelper*)pObj->Probe(EIID_IObjectIdentifierHelper);
    }

    virtual CARAPI ValidateOid(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid) = 0;

    virtual CARAPI HashIntArray(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * array,
        /* [out] */ _ELASTOS Int32 * hash) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("6E163B1A-44D2-DED6-CDBE-F68FD5EAAFCC")
IJarUtils : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IJarUtils*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IJarUtils*)pObj->Probe(EIID_IJarUtils);
    }

    static CARAPI_(IJarUtils*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IJarUtils*)pObj->Probe(EIID_IJarUtils);
    }

    virtual CARAPI VerifySignature(
        /* [in] */ Elastos::IO::IInputStream * signature,
        /* [in] */ Elastos::IO::IInputStream * signatureBlock,
        /* [out, callee] */ _ELASTOS ArrayOf<Elastos::Security::Cert::ICertificate *> ** sign) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("C0AA4F34-8292-2A17-82B6-9C71DFF40F0C")
IAlgNameMapperSource : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAlgNameMapperSource*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlgNameMapperSource*)pObj->Probe(EIID_IAlgNameMapperSource);
    }

    static CARAPI_(IAlgNameMapperSource*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlgNameMapperSource*)pObj->Probe(EIID_IAlgNameMapperSource);
    }

    virtual CARAPI MapNameToOid(
        /* [in] */ const _ELASTOS String& algName,
        /* [out] */ _ELASTOS String * result) = 0;

    virtual CARAPI MapOidToName(
        /* [in] */ const _ELASTOS String& oid,
        /* [out] */ _ELASTOS String * result) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("D3706638-8292-2A17-82B6-9C713F028A17")
IAlgNameMapperHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAlgNameMapperHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlgNameMapperHelper*)pObj->Probe(EIID_IAlgNameMapperHelper);
    }

    static CARAPI_(IAlgNameMapperHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlgNameMapperHelper*)pObj->Probe(EIID_IAlgNameMapperHelper);
    }

    virtual CARAPI Map2OID(
        /* [in] */ const _ELASTOS String& algName,
        /* [out] */ _ELASTOS String * oid) = 0;

    virtual CARAPI Map2AlgName(
        /* [in] */ const _ELASTOS String& oid,
        /* [out] */ _ELASTOS String * algName) = 0;

    virtual CARAPI GetStandardName(
        /* [in] */ const _ELASTOS String& algName,
        /* [out] */ _ELASTOS String * standardName) = 0;

    virtual CARAPI IsOID(
        /* [in] */ const _ELASTOS String& alias,
        /* [out] */ _ELASTOS Boolean * isOid) = 0;

    virtual CARAPI Normalize(
        /* [in] */ const _ELASTOS String& oid,
        /* [out] */ _ELASTOS String * normalString) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("6777FD38-9712-3FEF-30D4-50F143C10C12")
IAttributeValue : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAttributeValue*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAttributeValue*)pObj->Probe(EIID_IAttributeValue);
    }

    static CARAPI_(IAttributeValue*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAttributeValue*)pObj->Probe(EIID_IAttributeValue);
    }

    virtual CARAPI GetTag(
        /* [out] */ _ELASTOS Int32 * tag) = 0;

    virtual CARAPI GetHexString(
        /* [out] */ _ELASTOS String * hexString) = 0;

    virtual CARAPI GetValues(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Elastos::Utility::ICollection ** values) = 0;

    virtual CARAPI AppendQEString(
        /* [in] */ Elastos::Core::IStringBuilder * sb) = 0;

    virtual CARAPI MakeCanonical(
        /* [out] */ _ELASTOS String * cannonical) = 0;

    virtual CARAPI GetRFC2253String(
        /* [out] */ _ELASTOS String * rfcString) = 0;

    virtual CARAPI GetWasEncoded(
        /* [out] */ _ELASTOS Boolean * wasEncoded) = 0;

    virtual CARAPI SetWasEncoded(
        /* [in] */ _ELASTOS Boolean wasEncoded) = 0;

    virtual CARAPI GetEscapedString(
        /* [out] */ _ELASTOS String * escapedString) = 0;

    virtual CARAPI SetEscapedString(
        /* [in] */ const _ELASTOS String& escapedString) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI SetEncoded(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded) = 0;

    virtual CARAPI GetBytes(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** bytes) = 0;

    virtual CARAPI SetBytes(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * bytes) = 0;

    virtual CARAPI GetHasQE(
        /* [out] */ _ELASTOS Boolean * hasQE) = 0;

    virtual CARAPI SetHasQE(
        /* [in] */ _ELASTOS Boolean hasQE) = 0;

    virtual CARAPI GetRawString(
        /* [out] */ _ELASTOS String * rawString) = 0;

    virtual CARAPI SetRawString(
        /* [in] */ const _ELASTOS String& rawString) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("9D395131-9712-0AE5-629C-F8FE03430D15")
IAttributeTypeAndValue : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAttributeTypeAndValue*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAttributeTypeAndValue*)pObj->Probe(EIID_IAttributeTypeAndValue);
    }

    static CARAPI_(IAttributeTypeAndValue*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAttributeTypeAndValue*)pObj->Probe(EIID_IAttributeTypeAndValue);
    }

    virtual CARAPI AppendName(
        /* [in] */ const _ELASTOS String& attrFormat,
        /* [in] */ Elastos::Core::IStringBuilder * sb) = 0;

    virtual CARAPI GetType(
        /* [out] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier ** identifier) = 0;

    virtual CARAPI GetValue(
        /* [out] */ Org::Apache::Harmony::Security::X501::IAttributeValue ** value) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("24487D26-9712-0AE5-629C-F81E01C58B19")
IAttributeTypeAndValueHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAttributeTypeAndValueHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAttributeTypeAndValueHelper*)pObj->Probe(EIID_IAttributeTypeAndValueHelper);
    }

    static CARAPI_(IAttributeTypeAndValueHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAttributeTypeAndValueHelper*)pObj->Probe(EIID_IAttributeTypeAndValueHelper);
    }

    virtual CARAPI GetDC(
        /* [out] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier ** dc) = 0;

    virtual CARAPI GetEMAILADDRESS(
        /* [out] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier ** address) = 0;

    virtual CARAPI GetObjectIdentifier(
        /* [in] */ const _ELASTOS String& sOid,
        /* [out] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier ** objectIdentifier) = 0;

    virtual CARAPI GetAttributeValue(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** attributeValue) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("3F174814-45D2-E8C2-8FD5-EAAFCCA4B9A2")
IName : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IName*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IName*)pObj->Probe(EIID_IName);
    }

    static CARAPI_(IName*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IName*)pObj->Probe(EIID_IName);
    }

    virtual CARAPI GetX500Principal(
        /* [out] */ Elastosx::Security::Auth::X500::IX500Principal ** x500Principal) = 0;

    virtual CARAPI GetName(
        /* [in] */ const _ELASTOS String& format,
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("442F3F1C-45D2-68C2-84BE-335AFF58ADFE")
INameHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(INameHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (INameHelper*)pObj->Probe(EIID_INameHelper);
    }

    static CARAPI_(INameHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (INameHelper*)pObj->Probe(EIID_INameHelper);
    }

    virtual CARAPI GetASN1_RDN(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1SetOf ** asn1_rdn) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1SequenceOf ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("185C4354-8592-7C68-B0E8-8D71E307861A")
IMessageImprint : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IMessageImprint*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IMessageImprint*)pObj->Probe(EIID_IMessageImprint);
    }

    static CARAPI_(IMessageImprint*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IMessageImprint*)pObj->Probe(EIID_IMessageImprint);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("D3673D2E-0652-120A-A2D1-DFF703430D15")
IPKIFailureInfo : public IInterface
{
    static const _ELASTOS Int32 PKIFailureInfo_BAD_ALG = 0;
    static const _ELASTOS Int32 PKIFailureInfo_BAD_REQUEST = 2;
    static const _ELASTOS Int32 PKIFailureInfo_BAD_DATA_FORMAT = 5;
    static const _ELASTOS Int32 PKIFailureInfo_TIME_NOT_AVAILABLE = 14;
    static const _ELASTOS Int32 PKIFailureInfo_UNACCEPTED_POLICY = 15;
    static const _ELASTOS Int32 PKIFailureInfo_UNACCEPTED_EXTENSION = 16;
    static const _ELASTOS Int32 PKIFailureInfo_ADD_INFO_NOT_AVAILABLE = 17;
    static const _ELASTOS Int32 PKIFailureInfo_SYSTEM_FAILURE = 25;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPKIFailureInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIFailureInfo*)pObj->Probe(EIID_IPKIFailureInfo);
    }

    static CARAPI_(IPKIFailureInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIFailureInfo*)pObj->Probe(EIID_IPKIFailureInfo);
    }

    virtual CARAPI GetValue(
        /* [out] */ _ELASTOS Int32 * value) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("1F39512F-0652-120A-A2D1-DF1701C58B19")
IPKIFailureInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPKIFailureInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIFailureInfoHelper*)pObj->Probe(EIID_IPKIFailureInfoHelper);
    }

    static CARAPI_(IPKIFailureInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIFailureInfoHelper*)pObj->Probe(EIID_IPKIFailureInfoHelper);
    }

    virtual CARAPI GetMaxValue(
        /* [out] */ _ELASTOS Int32 * value) = 0;

    virtual CARAPI GetInstance(
        /* [in] */ _ELASTOS Int32 value,
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIFailureInfo ** instance) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("94F03912-4652-DC49-4DDE-B8FD63B5FA2B")
IPKIStatus : public IInterface
{
    static const _ELASTOS Int32 PKIStatus_GRANTED = 0;
    static const _ELASTOS Int32 PKIStatus_GRANTED_WITH_MODS = 1;
    static const _ELASTOS Int32 PKIStatus_REJECTION = 2;
    static const _ELASTOS Int32 PKIStatus_WAITING = 3;
    static const _ELASTOS Int32 PKIStatus_REVOCATION_WARNING = 4;
    static const _ELASTOS Int32 PKIStatus_REVOCATION_NOTIFICATION = 5;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPKIStatus*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIStatus*)pObj->Probe(EIID_IPKIStatus);
    }

    static CARAPI_(IPKIStatus*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIStatus*)pObj->Probe(EIID_IPKIStatus);
    }

    virtual CARAPI GetStatus(
        /* [out] */ _ELASTOS Int32 * status) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("036E4105-4652-DC49-4DDE-B81DA1EF8CD6")
IPKIStatusHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPKIStatusHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIStatusHelper*)pObj->Probe(EIID_IPKIStatusHelper);
    }

    static CARAPI_(IPKIStatusHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIStatusHelper*)pObj->Probe(EIID_IPKIStatusHelper);
    }

    virtual CARAPI GetInstance(
        /* [in] */ _ELASTOS Int32 status,
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatus ** result) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("B1F85737-0652-120A-58E3-B0B1EF07861A")
IPKIStatusInfo : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPKIStatusInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIStatusInfo*)pObj->Probe(EIID_IPKIStatusInfo);
    }

    static CARAPI_(IPKIStatusInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIStatusInfo*)pObj->Probe(EIID_IPKIStatusInfo);
    }

    virtual CARAPI GetFailInfo(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIFailureInfo ** failInfo) = 0;

    virtual CARAPI GetStatus(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatus ** status) = 0;

    virtual CARAPI GetStatusString(
        /* [out] */ Elastos::Utility::IList ** list) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("30964823-0652-120A-58E3-B0B12F028A17")
IPKIStatusInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPKIStatusInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIStatusInfoHelper*)pObj->Probe(EIID_IPKIStatusInfoHelper);
    }

    static CARAPI_(IPKIStatusInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPKIStatusInfoHelper*)pObj->Probe(EIID_IPKIStatusInfoHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("374C9C0B-C752-5275-9CCA-3F56ABBF3293")
ITSTInfo : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITSTInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITSTInfo*)pObj->Probe(EIID_ITSTInfo);
    }

    static CARAPI_(ITSTInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITSTInfo*)pObj->Probe(EIID_ITSTInfo);
    }

    virtual CARAPI GetAccuracy(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** accuracy) = 0;

    virtual CARAPI GetExtensions(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensions ** extensions) = 0;

    virtual CARAPI GetGenTime(
        /* [out] */ Elastos::Utility::IDate ** date) = 0;

    virtual CARAPI GetMessageImprint(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint ** messageImprint) = 0;

    virtual CARAPI GetNonce(
        /* [out] */ Elastos::Math::IBigInteger ** nonce) = 0;

    virtual CARAPI GetOrdering(
        /* [out] */ _ELASTOS Boolean * ordering) = 0;

    virtual CARAPI GetPolicy(
        /* [out] */ _ELASTOS String * policy) = 0;

    virtual CARAPI GetSerialNumber(
        /* [out] */ Elastos::Math::IBigInteger ** serialNumber) = 0;

    virtual CARAPI GetTsa(
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName ** tsa) = 0;

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("034A5803-C752-5275-9CCA-11FACE68FD63")
ITSTInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITSTInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITSTInfoHelper*)pObj->Probe(EIID_ITSTInfoHelper);
    }

    static CARAPI_(ITSTInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITSTInfoHelper*)pObj->Probe(EIID_ITSTInfoHelper);
    }

    virtual CARAPI GetACCURACY(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** accuracy) = 0;

    virtual CARAPI SetACCURACY(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * accuracy) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("A1858318-C752-28C2-7793-F0BCA1F48FD5")
ITimeStampReq : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITimeStampReq*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeStampReq*)pObj->Probe(EIID_ITimeStampReq);
    }

    static CARAPI_(ITimeStampReq*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeStampReq*)pObj->Probe(EIID_ITimeStampReq);
    }

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI GetCertReq(
        /* [out] */ _ELASTOS Boolean * certReq) = 0;

    virtual CARAPI GetExtensions(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensions ** extensions) = 0;

    virtual CARAPI GetMessageImprint(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint ** messageImprint) = 0;

    virtual CARAPI GetNonce(
        /* [out] */ Elastos::Math::IBigInteger ** nonce) = 0;

    virtual CARAPI GetReqPolicy(
        /* [out] */ _ELASTOS String * reqPolicy) = 0;

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("87774701-C752-28C2-7793-F0BCA17484BE")
ITimeStampReqHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITimeStampReqHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeStampReqHelper*)pObj->Probe(EIID_ITimeStampReqHelper);
    }

    static CARAPI_(ITimeStampReqHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeStampReqHelper*)pObj->Probe(EIID_ITimeStampReqHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("A65B4E0B-C752-28C2-7793-F0BCA1F6FC63")
ITimeStampResp : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITimeStampResp*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeStampResp*)pObj->Probe(EIID_ITimeStampResp);
    }

    static CARAPI_(ITimeStampResp*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeStampResp*)pObj->Probe(EIID_ITimeStampResp);
    }

    virtual CARAPI GetStatus(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo ** status) = 0;

    virtual CARAPI GetTimeStampToken(
        /* [out] */ Org::Apache::Harmony::Security::Pkcs7::IContentInfo ** timeStampToken) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("47454803-C752-28C2-7793-F0BCA1F61CA1")
ITimeStampRespHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITimeStampRespHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeStampRespHelper*)pObj->Probe(EIID_ITimeStampRespHelper);
    }

    static CARAPI_(ITimeStampRespHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeStampRespHelper*)pObj->Probe(EIID_ITimeStampRespHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("CD7E3E4E-0292-D14F-8C98-D09BF607861A")
IAccessDescription : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAccessDescription*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAccessDescription*)pObj->Probe(EIID_IAccessDescription);
    }

    static CARAPI_(IAccessDescription*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAccessDescription*)pObj->Probe(EIID_IAccessDescription);
    }

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("1B2E485D-0292-D14F-8C98-D09B36028A17")
IAccessDescriptionHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAccessDescriptionHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAccessDescriptionHelper*)pObj->Probe(EIID_IAccessDescriptionHelper);
    }

    static CARAPI_(IAccessDescriptionHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAccessDescriptionHelper*)pObj->Probe(EIID_IAccessDescriptionHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("39547256-8292-F117-F496-866165198B6E")
IAlgorithmIdentifier : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAlgorithmIdentifier*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlgorithmIdentifier*)pObj->Probe(EIID_IAlgorithmIdentifier);
    }

    static CARAPI_(IAlgorithmIdentifier*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlgorithmIdentifier*)pObj->Probe(EIID_IAlgorithmIdentifier);
    }

    virtual CARAPI GetAlgorithm(
        /* [out] */ _ELASTOS String * algorithm) = 0;

    virtual CARAPI GetAlgorithmName(
        /* [out] */ _ELASTOS String * algorithmName) = 0;

    virtual CARAPI GetParameters(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** parameters) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("AC09435B-8292-F117-F496-866165198B6E")
IAlgorithmIdentifierHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAlgorithmIdentifierHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlgorithmIdentifierHelper*)pObj->Probe(EIID_IAlgorithmIdentifierHelper);
    }

    static CARAPI_(IAlgorithmIdentifierHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlgorithmIdentifierHelper*)pObj->Probe(EIID_IAlgorithmIdentifierHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("0FE93251-8292-CE9A-1E6D-ECB2F307861A")
IAlternativeName : public IInterface
{
    static const _ELASTOS Boolean ISSUER;
    static const _ELASTOS Boolean SUBJECT;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAlternativeName*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlternativeName*)pObj->Probe(EIID_IAlternativeName);
    }

    static CARAPI_(IAlternativeName*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAlternativeName*)pObj->Probe(EIID_IAlternativeName);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("63057B58-0292-A31C-F5CA-A660CDCA3216")
IAuthorityKeyIdentifier : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthorityKeyIdentifier*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthorityKeyIdentifier*)pObj->Probe(EIID_IAuthorityKeyIdentifier);
    }

    static CARAPI_(IAuthorityKeyIdentifier*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthorityKeyIdentifier*)pObj->Probe(EIID_IAuthorityKeyIdentifier);
    }

    virtual CARAPI GetKeyIdentifier(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** keyIdentifier) = 0;

    virtual CARAPI GetAuthorityCertIssuer(
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralNames ** issuer) = 0;

    virtual CARAPI GetAuthorityCertSerialNumber(
        /* [out] */ Elastos::Math::IBigInteger ** number) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("2FB25344-0292-A31C-F5CA-A660CDCA3216")
IAuthorityKeyIdentifierHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthorityKeyIdentifierHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthorityKeyIdentifierHelper*)pObj->Probe(EIID_IAuthorityKeyIdentifierHelper);
    }

    static CARAPI_(IAuthorityKeyIdentifierHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthorityKeyIdentifierHelper*)pObj->Probe(EIID_IAuthorityKeyIdentifierHelper);
    }

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IAuthorityKeyIdentifier ** keyIdentifier) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("98274C56-82D2-0345-8940-BE2BF1868D1F")
IBasicConstraints : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicConstraints*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicConstraints*)pObj->Probe(EIID_IBasicConstraints);
    }

    static CARAPI_(IBasicConstraints*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicConstraints*)pObj->Probe(EIID_IBasicConstraints);
    }

    virtual CARAPI GetCa(
        /* [out] */ _ELASTOS Boolean * ca) = 0;

    virtual CARAPI GetPathLenConstraint(
        /* [out] */ _ELASTOS Int32 * pathLenConstraint) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("7274404C-82D2-0345-8940-BE2BF1868D08")
IBasicConstraintsHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicConstraintsHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicConstraintsHelper*)pObj->Probe(EIID_IBasicConstraintsHelper);
    }

    static CARAPI_(IBasicConstraintsHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicConstraintsHelper*)pObj->Probe(EIID_IBasicConstraintsHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B9DE3842-8312-150D-90AC-CED439830C89")
ICRLDistributionPoints : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRLDistributionPoints*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRLDistributionPoints*)pObj->Probe(EIID_ICRLDistributionPoints);
    }

    static CARAPI_(ICRLDistributionPoints*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRLDistributionPoints*)pObj->Probe(EIID_ICRLDistributionPoints);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("F682525E-8312-150D-90AC-CED439830C89")
ICRLDistributionPointsHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRLDistributionPointsHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRLDistributionPointsHelper*)pObj->Probe(EIID_ICRLDistributionPointsHelper);
    }

    static CARAPI_(ICRLDistributionPointsHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRLDistributionPointsHelper*)pObj->Probe(EIID_ICRLDistributionPointsHelper);
    }

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICRLDistributionPoints ** crlDistributionPoints) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("5CC83508-B312-1755-0E97-68FD63B5FA2B")
ICRLNumber : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRLNumber*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRLNumber*)pObj->Probe(EIID_ICRLNumber);
    }

    static CARAPI_(ICRLNumber*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRLNumber*)pObj->Probe(EIID_ICRLNumber);
    }

    virtual CARAPI GetNumber(
        /* [out] */ Elastos::Math::IBigInteger ** number) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("CC0C400C-B312-1755-0E97-681DA1EF8CD6")
ICRLNumberHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRLNumberHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRLNumberHelper*)pObj->Probe(EIID_ICRLNumberHelper);
    }

    static CARAPI_(ICRLNumberHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRLNumberHelper*)pObj->Probe(EIID_ICRLNumberHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("21185A07-8312-37D6-9BB2-2679A33F56AB")
ICertificate : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificate*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificate*)pObj->Probe(EIID_ICertificate);
    }

    static CARAPI_(ICertificate*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificate*)pObj->Probe(EIID_ICertificate);
    }

    virtual CARAPI GetTbsCertificate(
        /* [out] */ Org::Apache::Harmony::Security::X509::ITBSCertificate ** tbsCertificate) = 0;

    virtual CARAPI GetSignatureValue(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** signatureValue) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encode) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("718E3B4A-8312-9F67-BB75-D21C01C58BB0")
ICertificateHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificateHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateHelper*)pObj->Probe(EIID_ICertificateHelper);
    }

    static CARAPI_(ICertificateHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateHelper*)pObj->Probe(EIID_ICertificateHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("8AF03D4D-8312-9F67-BB75-D27C25F2B31F")
ICertificateIssuer : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificateIssuer*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateIssuer*)pObj->Probe(EIID_ICertificateIssuer);
    }

    static CARAPI_(ICertificateIssuer*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateIssuer*)pObj->Probe(EIID_ICertificateIssuer);
    }

    virtual CARAPI GetIssuer(
        /* [out] */ Elastosx::Security::Auth::X500::IX500Principal ** x500Principal) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("FB45484F-8312-9F67-BB75-D27C25F2B308")
ICertificateIssuerHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificateIssuerHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateIssuerHelper*)pObj->Probe(EIID_ICertificateIssuerHelper);
    }

    static CARAPI_(ICertificateIssuerHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateIssuerHelper*)pObj->Probe(EIID_ICertificateIssuerHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("874E5B5B-8312-9F67-BB75-D25CC1E20F0C")
ICertificateList : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificateList*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateList*)pObj->Probe(EIID_ICertificateList);
    }

    static CARAPI_(ICertificateList*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateList*)pObj->Probe(EIID_ICertificateList);
    }

    virtual CARAPI GetTbsCertList(
        /* [out] */ Org::Apache::Harmony::Security::X509::ITBSCertList ** tbsCertList) = 0;

    virtual CARAPI GetSignatureValue(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** signatureValue) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encode) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("78A84656-8312-9F67-BB75-D25CC1620414")
ICertificateListHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificateListHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateListHelper*)pObj->Probe(EIID_ICertificateListHelper);
    }

    static CARAPI_(ICertificateListHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificateListHelper*)pObj->Probe(EIID_ICertificateListHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B40F5F54-8312-9F67-BB75-D29C01EAC082")
ICertificatePolicies : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificatePolicies*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificatePolicies*)pObj->Probe(EIID_ICertificatePolicies);
    }

    static CARAPI_(ICertificatePolicies*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificatePolicies*)pObj->Probe(EIID_ICertificatePolicies);
    }

    virtual CARAPI GetPolicyInformations(
        /* [out] */ Elastos::Utility::IList ** infomations) = 0;

    virtual CARAPI AddPolicyInformation(
        /* [in] */ Org::Apache::Harmony::Security::X509::IPolicyInformation * policyInformation) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("66D6504A-8312-9F67-BB75-D29C01EAC082")
ICertificatePoliciesHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICertificatePoliciesHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificatePoliciesHelper*)pObj->Probe(EIID_ICertificatePoliciesHelper);
    }

    static CARAPI_(ICertificatePoliciesHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICertificatePoliciesHelper*)pObj->Probe(EIID_ICertificatePoliciesHelper);
    }

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificatePolicies ** policies) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("847B301C-7352-6465-6DA3-F58FD5EAAFCC")
IDNParser : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDNParser*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDNParser*)pObj->Probe(EIID_IDNParser);
    }

    static CARAPI_(IDNParser*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDNParser*)pObj->Probe(EIID_IDNParser);
    }

    virtual CARAPI Parse(
        /* [out] */ Elastos::Utility::IList ** list) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("6EE83D4D-9212-99D5-3A67-9021F1C60F0C")
IDistributionPoint : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDistributionPoint*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDistributionPoint*)pObj->Probe(EIID_IDistributionPoint);
    }

    static CARAPI_(IDistributionPoint*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDistributionPoint*)pObj->Probe(EIID_IDistributionPoint);
    }

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb,
        /* [in] */ const _ELASTOS String& prefix) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("070E4850-9212-99D5-3A67-9021F1460414")
IDistributionPointHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDistributionPointHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDistributionPointHelper*)pObj->Probe(EIID_IDistributionPointHelper);
    }

    static CARAPI_(IDistributionPointHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDistributionPointHelper*)pObj->Probe(EIID_IDistributionPointHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A82C4152-9212-99D5-3A67-9021F146979D")
IDistributionPointName : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDistributionPointName*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDistributionPointName*)pObj->Probe(EIID_IDistributionPointName);
    }

    static CARAPI_(IDistributionPointName*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDistributionPointName*)pObj->Probe(EIID_IDistributionPointName);
    }

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb,
        /* [in] */ const _ELASTOS String& prefix) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("40524C58-9212-99D5-3A67-9021F146979D")
IDistributionPointNameHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDistributionPointNameHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDistributionPointNameHelper*)pObj->Probe(EIID_IDistributionPointNameHelper);
    }

    static CARAPI_(IDistributionPointNameHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDistributionPointNameHelper*)pObj->Probe(EIID_IDistributionPointNameHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Choice ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Choice * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("962B3915-D392-1948-59DF-FC45C2E88FD5")
IEDIPartyName : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IEDIPartyName*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEDIPartyName*)pObj->Probe(EIID_IEDIPartyName);
    }

    static CARAPI_(IEDIPartyName*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEDIPartyName*)pObj->Probe(EIID_IEDIPartyName);
    }

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encode) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("78464308-D392-1948-59DF-FC45C26884BE")
IEDIPartyNameHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IEDIPartyNameHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEDIPartyNameHelper*)pObj->Probe(EIID_IEDIPartyNameHelper);
    }

    static CARAPI_(IEDIPartyNameHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEDIPartyNameHelper*)pObj->Probe(EIID_IEDIPartyNameHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("082B4653-1452-31CD-669D-A060CD836074")
IExtendedKeyUsage : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExtendedKeyUsage*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtendedKeyUsage*)pObj->Probe(EIID_IExtendedKeyUsage);
    }

    static CARAPI_(IExtendedKeyUsage*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtendedKeyUsage*)pObj->Probe(EIID_IExtendedKeyUsage);
    }

    virtual CARAPI GetExtendedKeyUsage(
        /* [out] */ Elastos::Utility::IList ** extendedKeyUsage) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("6B65474E-1452-31CD-669D-A060CD836074")
IExtendedKeyUsageHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExtendedKeyUsageHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtendedKeyUsageHelper*)pObj->Probe(EIID_IExtendedKeyUsageHelper);
    }

    static CARAPI_(IExtendedKeyUsageHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtendedKeyUsageHelper*)pObj->Probe(EIID_IExtendedKeyUsageHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("3948920D-5852-8900-B3DF-686CB372FC63")
IX509Extension : public IInterface
{
    static const _ELASTOS Boolean CRITICAL;
    static const _ELASTOS Boolean NON_CRITICAL;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IX509Extension*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IX509Extension*)pObj->Probe(EIID_IX509Extension);
    }

    static CARAPI_(IX509Extension*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IX509Extension*)pObj->Probe(EIID_IX509Extension);
    }

    virtual CARAPI GetRawExtnValue(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** rawExtnValue) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encode) = 0;

    virtual CARAPI GetDecodedExtensionValue(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue ** extensionValue) = 0;

    virtual CARAPI GetKeyUsageValue(
        /* [out] */ Org::Apache::Harmony::Security::X509::IKeyUsage ** usageValue) = 0;

    virtual CARAPI GetBasicConstraintsValue(
        /* [out] */ Org::Apache::Harmony::Security::X509::IBasicConstraints ** basicConstrainsValue) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb,
        /* [in] */ const _ELASTOS String& prefix) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A5BF4048-1452-31CD-1647-40F1226C8D1F")
IExtensionHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExtensionHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtensionHelper*)pObj->Probe(EIID_IExtensionHelper);
    }

    static CARAPI_(IExtensionHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtensionHelper*)pObj->Probe(EIID_IExtensionHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * pAsn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("47F44D3A-B3D2-281B-62C4-FFFE03430D15")
IExtensionValue : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExtensionValue*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtensionValue*)pObj->Probe(EIID_IExtensionValue);
    }

    static CARAPI_(IExtensionValue*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtensionValue*)pObj->Probe(EIID_IExtensionValue);
    }

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encode) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb,
        /* [in] */ const _ELASTOS String& prefix) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("9C63FD16-B392-68DF-6CB3-726CFF58ADFE")
IExtensions : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExtensions*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtensions*)pObj->Probe(EIID_IExtensions);
    }

    static CARAPI_(IExtensions*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtensions*)pObj->Probe(EIID_IExtensions);
    }

    virtual CARAPI GetSize(
        /* [out] */ _ELASTOS Int32 * size) = 0;

    virtual CARAPI GetCriticalExtensions(
        /* [out] */ Elastos::Utility::ISet ** extensions) = 0;

    virtual CARAPI GetNonCriticalExtensions(
        /* [out] */ Elastos::Utility::ISet ** extensions) = 0;

    virtual CARAPI HasUnsupportedCritical(
        /* [out] */ _ELASTOS Boolean * hasUnsupportedCritical) = 0;

    virtual CARAPI GetExtensionByOID(
        /* [in] */ const _ELASTOS String& oid,
        /* [out] */ Org::Apache::Harmony::Security::X509::IX509Extension ** extensionByOID) = 0;

    virtual CARAPI ValueOfKeyUsage(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Boolean> ** valueOfKeyUsage) = 0;

    virtual CARAPI ValueOfExtendedKeyUsage(
        /* [out] */ Elastos::Utility::IList ** valueOfExtendedKeyUsage) = 0;

    virtual CARAPI ValueOfBasicConstrains(
        /* [out] */ _ELASTOS Int32 * valueOfBasicConstrains) = 0;

    virtual CARAPI ValueOfSubjectAlternativeName(
        /* [out] */ Elastos::Utility::ICollection ** valueOfSubjectAlternativeName) = 0;

    virtual CARAPI ValueOfIssuerAlternativeName(
        /* [out] */ Elastos::Utility::ICollection ** valueOfIssuerAlternativeName) = 0;

    virtual CARAPI ValueOfCertificateIssuerExtension(
        /* [out] */ Elastosx::Security::Auth::X500::IX500Principal ** valueOfCertificateIssuerExtension) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb,
        /* [in] */ const _ELASTOS String& prefix) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("9859415C-1452-31CD-16DB-8880E245D81A")
IExtensionsHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExtensionsHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtensionsHelper*)pObj->Probe(EIID_IExtensionsHelper);
    }

    static CARAPI_(IExtensionsHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExtensionsHelper*)pObj->Probe(EIID_IExtensionsHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("12F07916-8412-68C6-4DBE-1709A33F56AB")
IGeneralName : public IInterface
{
    static const _ELASTOS Int32 OTHER_NAME = 0;
    static const _ELASTOS Int32 RFC822_NAME = 1;
    static const _ELASTOS Int32 DNS_NAME = 2;
    static const _ELASTOS Int32 X400_ADDR = 3;
    static const _ELASTOS Int32 DIR_NAME = 4;
    static const _ELASTOS Int32 EDIP_NAME = 5;
    static const _ELASTOS Int32 UR_ID = 6;
    static const _ELASTOS Int32 IP_ADDR = 7;
    static const _ELASTOS Int32 REG_ID = 8;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IGeneralName*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralName*)pObj->Probe(EIID_IGeneralName);
    }

    static CARAPI_(IGeneralName*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralName*)pObj->Probe(EIID_IGeneralName);
    }

    virtual CARAPI GetTag(
        /* [out] */ _ELASTOS Int32 * tag) = 0;

    virtual CARAPI GetName(
        /* [out] */ IInterface ** name) = 0;

    virtual CARAPI Equals(
        /* [in] */ IInterface * other,
        /* [out] */ _ELASTOS Boolean * equals) = 0;

    virtual CARAPI GetHashCode(
        /* [out] */ _ELASTOS Int32 * result) = 0;

    virtual CARAPI IsAcceptable(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * gname,
        /* [out] */ _ELASTOS Boolean * isAcceptable) = 0;

    virtual CARAPI GetAsList(
        /* [out] */ Elastos::Utility::IList ** list) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI GetEncodedName(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encodedName) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("2FE07657-0412-CF66-0075-D91901C58BB0")
IGeneralNameHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IGeneralNameHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralNameHelper*)pObj->Probe(EIID_IGeneralNameHelper);
    }

    static CARAPI_(IGeneralNameHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralNameHelper*)pObj->Probe(EIID_IGeneralNameHelper);
    }

    virtual CARAPI CheckDNS(
        /* [in] */ const _ELASTOS String& dns) = 0;

    virtual CARAPI CheckURI(
        /* [in] */ const _ELASTOS String& uri) = 0;

    virtual CARAPI OidStrToInts(
        /* [in] */ const _ELASTOS String& oid,
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** ints) = 0;

    virtual CARAPI IpStrToBytes(
        /* [in] */ const _ELASTOS String& ip,
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** bytes) = 0;

    virtual CARAPI IpBytesToStr(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * ip,
        /* [out] */ _ELASTOS String * str) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Choice ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Choice * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("86F15D06-8412-68C6-4DBE-1709A3F68FD5")
IGeneralNames : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IGeneralNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralNames*)pObj->Probe(EIID_IGeneralNames);
    }

    static CARAPI_(IGeneralNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralNames*)pObj->Probe(EIID_IGeneralNames);
    }

    virtual CARAPI GetNames(
        /* [out] */ Elastos::Utility::IList ** names) = 0;

    virtual CARAPI GetPairsList(
        /* [out] */ Elastos::Utility::ICollection ** pairslist) = 0;

    virtual CARAPI AddName(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * name) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb,
        /* [in] */ const _ELASTOS String& prefix) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("3D324311-8412-68C6-4DBE-1709A37684BE")
IGeneralNamesHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IGeneralNamesHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralNamesHelper*)pObj->Probe(EIID_IGeneralNamesHelper);
    }

    static CARAPI_(IGeneralNamesHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralNamesHelper*)pObj->Probe(EIID_IGeneralNamesHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("BA9C4B16-8412-68C6-4DBE-1C5EDE358AFE")
IGeneralSubtree : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IGeneralSubtree*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralSubtree*)pObj->Probe(EIID_IGeneralSubtree);
    }

    static CARAPI_(IGeneralSubtree*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralSubtree*)pObj->Probe(EIID_IGeneralSubtree);
    }

    virtual CARAPI GetBase(
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName ** base) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb,
        /* [in] */ const _ELASTOS String& prefix) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B4D3450B-8412-68C6-4DBE-1C5EDE358A46")
IGeneralSubtreeHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IGeneralSubtreeHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralSubtreeHelper*)pObj->Probe(EIID_IGeneralSubtreeHelper);
    }

    static CARAPI_(IGeneralSubtreeHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralSubtreeHelper*)pObj->Probe(EIID_IGeneralSubtreeHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("8224474D-0412-CF66-0071-C05142B5B41F")
IGeneralSubtrees : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IGeneralSubtrees*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralSubtrees*)pObj->Probe(EIID_IGeneralSubtrees);
    }

    static CARAPI_(IGeneralSubtrees*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralSubtrees*)pObj->Probe(EIID_IGeneralSubtrees);
    }

    virtual CARAPI GetSubtrees(
        /* [out] */ Elastos::Utility::IList ** subtrees) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("4EC64648-0412-CF66-0071-C05142B5B408")
IGeneralSubtreesHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IGeneralSubtreesHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralSubtreesHelper*)pObj->Probe(EIID_IGeneralSubtreesHelper);
    }

    static CARAPI_(IGeneralSubtreesHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IGeneralSubtreesHelper*)pObj->Probe(EIID_IGeneralSubtreesHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("FE943326-BED2-BA21-7F60-A8A1E2878219")
IInfoAccessSyntax : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IInfoAccessSyntax*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInfoAccessSyntax*)pObj->Probe(EIID_IInfoAccessSyntax);
    }

    static CARAPI_(IInfoAccessSyntax*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInfoAccessSyntax*)pObj->Probe(EIID_IInfoAccessSyntax);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A0D34D36-BED2-BA21-23A0-7831E3FE0F0C")
IInfoAccessSyntaxHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IInfoAccessSyntaxHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInfoAccessSyntaxHelper*)pObj->Probe(EIID_IInfoAccessSyntaxHelper);
    }

    static CARAPI_(IInfoAccessSyntaxHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInfoAccessSyntaxHelper*)pObj->Probe(EIID_IInfoAccessSyntaxHelper);
    }

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IInfoAccessSyntax ** syntax) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * pAsn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("D2C6332D-C1D2-2C15-4AB0-B8A120068FAF")
IInhibitAnyPolicy : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IInhibitAnyPolicy*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInhibitAnyPolicy*)pObj->Probe(EIID_IInhibitAnyPolicy);
    }

    static CARAPI_(IInhibitAnyPolicy*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInhibitAnyPolicy*)pObj->Probe(EIID_IInhibitAnyPolicy);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("D8E4383E-4192-3716-7864-FA81A1868A1F")
IInvalidityDate : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IInvalidityDate*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInvalidityDate*)pObj->Probe(EIID_IInvalidityDate);
    }

    static CARAPI_(IInvalidityDate*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInvalidityDate*)pObj->Probe(EIID_IInvalidityDate);
    }

    virtual CARAPI GetDate(
        /* [out] */ Elastos::Utility::IDate ** date) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("DAAA4529-4192-3716-7864-8A80E2C58CFB")
IInvalidityDateHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IInvalidityDateHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInvalidityDateHelper*)pObj->Probe(EIID_IInvalidityDateHelper);
    }

    static CARAPI_(IInvalidityDateHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IInvalidityDateHelper*)pObj->Probe(EIID_IInvalidityDateHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("3C69945B-95D2-10C8-91AC-CED439830C89")
IIssuingDistributionPoint : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IIssuingDistributionPoint*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IIssuingDistributionPoint*)pObj->Probe(EIID_IIssuingDistributionPoint);
    }

    static CARAPI_(IIssuingDistributionPoint*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IIssuingDistributionPoint*)pObj->Probe(EIID_IIssuingDistributionPoint);
    }

    virtual CARAPI SetOnlyContainsUserCerts(
        /* [in] */ _ELASTOS Boolean onlyContainsUserCerts) = 0;

    virtual CARAPI SetOnlyContainsCACerts(
        /* [in] */ _ELASTOS Boolean onlyContainsCACerts) = 0;

    virtual CARAPI SetIndirectCRL(
        /* [in] */ _ELASTOS Boolean indirectCRL) = 0;

    virtual CARAPI SetOnlyContainsAttributeCerts(
        /* [in] */ _ELASTOS Boolean onlyContainsAttributeCerts) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("8C5D554D-95D2-10C8-91AC-CED439830C89")
IIssuingDistributionPointHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IIssuingDistributionPointHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IIssuingDistributionPointHelper*)pObj->Probe(EIID_IIssuingDistributionPointHelper);
    }

    static CARAPI_(IIssuingDistributionPointHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IIssuingDistributionPointHelper*)pObj->Probe(EIID_IIssuingDistributionPointHelper);
    }

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IIssuingDistributionPoint ** object) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * pAsn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("3C5F360A-8512-9EF2-4DAA-E88FD5EAAFCC")
IKeyUsage : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IKeyUsage*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IKeyUsage*)pObj->Probe(EIID_IKeyUsage);
    }

    static CARAPI_(IKeyUsage*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IKeyUsage*)pObj->Probe(EIID_IKeyUsage);
    }

    virtual CARAPI GetKeyUsage(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Boolean> ** keyUsage) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("197D4A4F-9752-449D-20DF-9578C3C60F0C")
INameConstraints : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(INameConstraints*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (INameConstraints*)pObj->Probe(EIID_INameConstraints);
    }

    static CARAPI_(INameConstraints*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (INameConstraints*)pObj->Probe(EIID_INameConstraints);
    }

    virtual CARAPI IsAcceptable(
        /* [in] */ Elastos::Security::Cert::IX509Certificate * cert,
        /* [out] */ _ELASTOS Boolean * isAcceptable) = 0;

    virtual CARAPI IsAcceptable(
        /* [in] */ Elastos::Utility::IList * names,
        /* [out] */ _ELASTOS Boolean * isAcceptable) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("467A4C53-9752-449D-20DF-9578C3460414")
INameConstraintsHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(INameConstraintsHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (INameConstraintsHelper*)pObj->Probe(EIID_INameConstraintsHelper);
    }

    static CARAPI_(INameConstraintsHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (INameConstraintsHelper*)pObj->Probe(EIID_INameConstraintsHelper);
    }

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::INameConstraints ** object) = 0;

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("8A343624-8612-440D-7E60-A8A1E2878219")
IORAddress : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IORAddress*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IORAddress*)pObj->Probe(EIID_IORAddress);
    }

    static CARAPI_(IORAddress*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IORAddress*)pObj->Probe(EIID_IORAddress);
    }

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("D7E34038-8612-440D-22A0-7831E3FE0F0C")
IORAddressHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IORAddressHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IORAddressHelper*)pObj->Probe(EIID_IORAddressHelper);
    }

    static CARAPI_(IORAddressHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IORAddressHelper*)pObj->Probe(EIID_IORAddressHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * ppAsn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("D9A83E0D-7612-68AF-7D91-30FA63B5FA2B")
IOtherName : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IOtherName*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IOtherName*)pObj->Probe(EIID_IOtherName);
    }

    static CARAPI_(IOtherName*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IOtherName*)pObj->Probe(EIID_IOtherName);
    }

    virtual CARAPI GetValue(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** value) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B4EA4005-7612-68AF-7D91-301AA1EF8CD6")
IOtherNameHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IOtherNameHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IOtherNameHelper*)pObj->Probe(EIID_IOtherNameHelper);
    }

    static CARAPI_(IOtherNameHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IOtherNameHelper*)pObj->Probe(EIID_IOtherNameHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

    virtual CARAPI SetASN1(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence * asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A54A3443-0652-03A8-7910-817C57E20D1B")
IPolicyConstraints : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPolicyConstraints*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyConstraints*)pObj->Probe(EIID_IPolicyConstraints);
    }

    static CARAPI_(IPolicyConstraints*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyConstraints*)pObj->Probe(EIID_IPolicyConstraints);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("37214159-0652-03A8-7910-817C57E20D1B")
IPolicyConstraintsHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPolicyConstraintsHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyConstraintsHelper*)pObj->Probe(EIID_IPolicyConstraintsHelper);
    }

    static CARAPI_(IPolicyConstraintsHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyConstraintsHelper*)pObj->Probe(EIID_IPolicyConstraintsHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("65955A29-57D2-3F7D-30D4-50F143C10C12")
IPolicyInformation : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPolicyInformation*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyInformation*)pObj->Probe(EIID_IPolicyInformation);
    }

    static CARAPI_(IPolicyInformation*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyInformation*)pObj->Probe(EIID_IPolicyInformation);
    }

    virtual CARAPI GetPolicyIdentifier(
        /* [out] */ _ELASTOS String * policyIdentifier) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("45254131-57D2-117D-50BC-9871FF07861A")
IPolicyInformationHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPolicyInformationHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyInformationHelper*)pObj->Probe(EIID_IPolicyInformationHelper);
    }

    static CARAPI_(IPolicyInformationHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyInformationHelper*)pObj->Probe(EIID_IPolicyInformationHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("CAF64329-57D2-380D-48BC-609182C5FD7D")
IPolicyQualifierInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPolicyQualifierInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyQualifierInfoHelper*)pObj->Probe(EIID_IPolicyQualifierInfoHelper);
    }

    static CARAPI_(IPolicyQualifierInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPolicyQualifierInfoHelper*)pObj->Probe(EIID_IPolicyQualifierInfoHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("40945945-0652-BDBD-3553-B0E64130BA0C")
IPrivateKeyUsagePeriod : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPrivateKeyUsagePeriod*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyUsagePeriod*)pObj->Probe(EIID_IPrivateKeyUsagePeriod);
    }

    static CARAPI_(IPrivateKeyUsagePeriod*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyUsagePeriod*)pObj->Probe(EIID_IPrivateKeyUsagePeriod);
    }

    virtual CARAPI GetNotBefore(
        /* [out] */ Elastos::Utility::IDate ** notBefore) = 0;

    virtual CARAPI GetNotAfter(
        /* [out] */ Elastos::Utility::IDate ** notAfter) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("8B77455B-0652-BDBD-3553-B0E64130BA0C")
IPrivateKeyUsagePeriodHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPrivateKeyUsagePeriodHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyUsagePeriodHelper*)pObj->Probe(EIID_IPrivateKeyUsagePeriodHelper);
    }

    static CARAPI_(IPrivateKeyUsagePeriodHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyUsagePeriodHelper*)pObj->Probe(EIID_IPrivateKeyUsagePeriodHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("1EF92D05-86D2-B692-1C33-F289FE58ADFE")
IReasonCode : public IInterface
{
    static const _ELASTOS Byte UNSPECIFIED = 0;
    static const _ELASTOS Byte KEY_COMPROMISE = 1;
    static const _ELASTOS Byte CA_COMPROMISE = 2;
    static const _ELASTOS Byte AFFILIATION_CHANGED = 3;
    static const _ELASTOS Byte SUPERSEDED = 4;
    static const _ELASTOS Byte CESSATION_OF_OPERATION = 5;
    static const _ELASTOS Byte CERTIFICATE_HOLD = 6;
    static const _ELASTOS Byte REMOVE_FROM_CRL = 8;
    static const _ELASTOS Byte PRIVILEGE_WITHDRAWN = 9;
    static const _ELASTOS Byte AA_COMPROMISE = 10;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IReasonCode*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonCode*)pObj->Probe(EIID_IReasonCode);
    }

    static CARAPI_(IReasonCode*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonCode*)pObj->Probe(EIID_IReasonCode);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("F38C3A51-9A52-5245-8BCC-8A80E245D81A")
IReasonCodeHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IReasonCodeHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonCodeHelper*)pObj->Probe(EIID_IReasonCodeHelper);
    }

    static CARAPI_(IReasonCodeHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonCodeHelper*)pObj->Probe(EIID_IReasonCodeHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("CF3F371C-86D2-B692-1C3F-2FA9DA3F56AB")
IReasonFlags : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IReasonFlags*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonFlags*)pObj->Probe(EIID_IReasonFlags);
    }

    static CARAPI_(IReasonFlags*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonFlags*)pObj->Probe(EIID_IReasonFlags);
    }

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb,
        /* [in] */ const _ELASTOS String& prefix) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("828B3B19-86D2-B692-1C3F-2FA9DA11FACE")
IReasonFlagsHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IReasonFlagsHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonFlagsHelper*)pObj->Probe(EIID_IReasonFlagsHelper);
    }

    static CARAPI_(IReasonFlagsHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonFlagsHelper*)pObj->Probe(EIID_IReasonFlagsHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1BitString ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B2F54741-0712-251C-40BE-A260CDCA3216")
ISubjectKeyIdentifier : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISubjectKeyIdentifier*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISubjectKeyIdentifier*)pObj->Probe(EIID_ISubjectKeyIdentifier);
    }

    static CARAPI_(ISubjectKeyIdentifier*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISubjectKeyIdentifier*)pObj->Probe(EIID_ISubjectKeyIdentifier);
    }

    virtual CARAPI GetKeyIdentifier(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** keyIdentifier) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A9A84349-0712-251C-40BE-A260CDCA3216")
ISubjectKeyIdentifierHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISubjectKeyIdentifierHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISubjectKeyIdentifierHelper*)pObj->Probe(EIID_ISubjectKeyIdentifierHelper);
    }

    static CARAPI_(ISubjectKeyIdentifierHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISubjectKeyIdentifierHelper*)pObj->Probe(EIID_ISubjectKeyIdentifierHelper);
    }

    virtual CARAPI Decode(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ISubjectKeyIdentifier ** identifier) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("D9647604-8712-2D97-6ADE-195EBEAC49A1")
ISubjectPublicKeyInfo : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISubjectPublicKeyInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISubjectPublicKeyInfo*)pObj->Probe(EIID_ISubjectPublicKeyInfo);
    }

    static CARAPI_(ISubjectPublicKeyInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISubjectPublicKeyInfo*)pObj->Probe(EIID_ISubjectPublicKeyInfo);
    }

    virtual CARAPI GetAlgorithmIdentifier(
        /* [out] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier ** algorithmIdentifier) = 0;

    virtual CARAPI GetSubjectPublicKey(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** publicKey) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI GetPublicKey(
        /* [out] */ Elastos::Security::IPublicKey ** publicKey) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("D4A6441B-8712-2D97-6ADE-195EBEAC49A1")
ISubjectPublicKeyInfoHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISubjectPublicKeyInfoHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISubjectPublicKeyInfoHelper*)pObj->Probe(EIID_ISubjectPublicKeyInfoHelper);
    }

    static CARAPI_(ISubjectPublicKeyInfoHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISubjectPublicKeyInfoHelper*)pObj->Probe(EIID_ISubjectPublicKeyInfoHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("398B3556-1A52-2EE0-8A31-78F6B95B27CD")
IRevokedCertificate : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IRevokedCertificate*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRevokedCertificate*)pObj->Probe(EIID_IRevokedCertificate);
    }

    static CARAPI_(IRevokedCertificate*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRevokedCertificate*)pObj->Probe(EIID_IRevokedCertificate);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("0E1F4251-1A52-2EE0-8A31-78F6B95B27CD")
IRevokedCertificateHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IRevokedCertificateHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRevokedCertificateHelper*)pObj->Probe(EIID_IRevokedCertificateHelper);
    }

    static CARAPI_(IRevokedCertificateHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRevokedCertificateHelper*)pObj->Probe(EIID_IRevokedCertificateHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A736B111-B752-0C70-5ADF-156BDF3F56AB")
ITBSCertList : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITBSCertList*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITBSCertList*)pObj->Probe(EIID_ITBSCertList);
    }

    static CARAPI_(ITBSCertList*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITBSCertList*)pObj->Probe(EIID_ITBSCertList);
    }

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

    virtual CARAPI GetSignature(
        /* [out] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier ** signature) = 0;

    virtual CARAPI GetIssuer(
        /* [out] */ Org::Apache::Harmony::Security::X501::IName ** issuer) = 0;

    virtual CARAPI GetThisUpdate(
        /* [out] */ Elastos::Utility::IDate ** date) = 0;

    virtual CARAPI GetNextUpdate(
        /* [out] */ Elastos::Utility::IDate ** date) = 0;

    virtual CARAPI GetRevokedCertificates(
        /* [out] */ Elastos::Utility::IList ** certificates) = 0;

    virtual CARAPI GetCrlExtensions(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensions ** extensions) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI Equals(
        /* [in] */ IInterface * rc,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI GetHashCode(
        /* [out] */ _ELASTOS Int32 * hashCode) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("61EE3B09-B752-0C70-5ADF-156BDF11FACE")
ITBSCertListHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITBSCertListHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITBSCertListHelper*)pObj->Probe(EIID_ITBSCertListHelper);
    }

    static CARAPI_(ITBSCertListHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITBSCertListHelper*)pObj->Probe(EIID_ITBSCertListHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("254CCE0F-B752-0C70-5ADF-6CCA9AE48DFE")
ITBSCertificate : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITBSCertificate*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITBSCertificate*)pObj->Probe(EIID_ITBSCertificate);
    }

    static CARAPI_(ITBSCertificate*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITBSCertificate*)pObj->Probe(EIID_ITBSCertificate);
    }

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

    virtual CARAPI GetSerialNumber(
        /* [out] */ Elastos::Math::IBigInteger ** serialNumber) = 0;

    virtual CARAPI GetSignature(
        /* [out] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier ** signature) = 0;

    virtual CARAPI GetIssuer(
        /* [out] */ Org::Apache::Harmony::Security::X501::IName ** issuer) = 0;

    virtual CARAPI GetValidity(
        /* [out] */ Org::Apache::Harmony::Security::X509::IValidity ** validity) = 0;

    virtual CARAPI GetSubject(
        /* [out] */ Org::Apache::Harmony::Security::X501::IName ** subject) = 0;

    virtual CARAPI GetSubjectPublicKeyInfo(
        /* [out] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo ** info) = 0;

    virtual CARAPI GetIssuerUniqueID(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Boolean> ** uniqueId) = 0;

    virtual CARAPI GetSubjectUniqueID(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Boolean> ** uniqueId) = 0;

    virtual CARAPI GetExtensions(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensions ** extensions) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

    virtual CARAPI DumpValue(
        /* [in] */ Elastos::Core::IStringBuilder * sb) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("FF163E10-B752-0C70-5ADF-6CCA9AE48D46")
ITBSCertificateHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITBSCertificateHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITBSCertificateHelper*)pObj->Probe(EIID_ITBSCertificateHelper);
    }

    static CARAPI_(ITBSCertificateHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITBSCertificateHelper*)pObj->Probe(EIID_ITBSCertificateHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("FCD93409-C752-68C2-84BE-335AFF58ADFE")
ITimeHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITimeHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeHelper*)pObj->Probe(EIID_ITimeHelper);
    }

    static CARAPI_(ITimeHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITimeHelper*)pObj->Probe(EIID_ITimeHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Choice ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("0CE34C4B-1D92-3F8C-30D4-50F143015851")
IValidity : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IValidity*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IValidity*)pObj->Probe(EIID_IValidity);
    }

    static CARAPI_(IValidity*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IValidity*)pObj->Probe(EIID_IValidity);
    }

    virtual CARAPI GetNotBefore(
        /* [out] */ Elastos::Utility::IDate ** date) = 0;

    virtual CARAPI GetNotAfter(
        /* [out] */ Elastos::Utility::IDate ** date) = 0;

    virtual CARAPI GetEncoded(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** encoded) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("22FB384B-1D92-118C-50BC-085BE307861A")
IValidityHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IValidityHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IValidityHelper*)pObj->Probe(EIID_IValidityHelper);
    }

    static CARAPI_(IValidityHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IValidityHelper*)pObj->Probe(EIID_IValidityHelper);
    }

    virtual CARAPI GetASN1(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Sequence ** asn1) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("C5B63002-5852-4900-8697-2F6B5228FF63")
IX509PublicKey : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IX509PublicKey*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IX509PublicKey*)pObj->Probe(EIID_IX509PublicKey);
    }

    static CARAPI_(IX509PublicKey*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IX509PublicKey*)pObj->Probe(EIID_IX509PublicKey);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Provider {
namespace Crypto {
CAR_INTERFACE("0C1B3B13-1712-0129-23C7-F64DC6B7FD63")
ISHA1Constants : public IInterface
{
    static const _ELASTOS Int32 H0 = 0x67452301;
    static const _ELASTOS Int32 H1 = 0xefcdab89;
    static const _ELASTOS Int32 H2 = 0x98badcfe;
    static const _ELASTOS Int32 H3 = 0x10325476;
    static const _ELASTOS Int32 H4 = 0xc3d2e1f0;
    static const _ELASTOS Int32 BYTES_OFFSET = 81;
    static const _ELASTOS Int32 HASH_OFFSET = 82;
    static const _ELASTOS Int32 DIGEST_LENGTH = 20;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISHA1Constants*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISHA1Constants*)pObj->Probe(EIID_ISHA1Constants);
    }

    static CARAPI_(ISHA1Constants*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISHA1Constants*)pObj->Probe(EIID_ISHA1Constants);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Provider {
namespace Crypto {
CAR_INTERFACE("C9264712-1712-4129-B65D-90CFA1265EA3")
ISHA1PRNG_SecureRandomImpl : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISHA1PRNG_SecureRandomImpl*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISHA1PRNG_SecureRandomImpl*)pObj->Probe(EIID_ISHA1PRNG_SecureRandomImpl);
    }

    static CARAPI_(ISHA1PRNG_SecureRandomImpl*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISHA1PRNG_SecureRandomImpl*)pObj->Probe(EIID_ISHA1PRNG_SecureRandomImpl);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
CAR_INTERFACE("3C1D4359-0652-BDBD-3553-B086E5C50F0C")
IPrivateKeyImpl : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPrivateKeyImpl*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyImpl*)pObj->Probe(EIID_IPrivateKeyImpl);
    }

    static CARAPI_(IPrivateKeyImpl*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPrivateKeyImpl*)pObj->Probe(EIID_IPrivateKeyImpl);
    }

    virtual CARAPI SetAlgorithm(
        /* [in] */ const _ELASTOS String& algorithm) = 0;

    virtual CARAPI SetEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
CAR_INTERFACE("4095420F-8652-2F97-6B52-282FC1F3FB63")
IPublicKeyImpl : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPublicKeyImpl*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPublicKeyImpl*)pObj->Probe(EIID_IPublicKeyImpl);
    }

    static CARAPI_(IPublicKeyImpl*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPublicKeyImpl*)pObj->Probe(EIID_IPublicKeyImpl);
    }

    virtual CARAPI SetAlgorithm(
        /* [in] */ const _ELASTOS String& algorithm) = 0;

    virtual CARAPI SetEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
CAR_INTERFACE("633D2901-C712-37DB-0A73-A63CA33F56AB")
ISystemScope : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISystemScope*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISystemScope*)pObj->Probe(EIID_ISystemScope);
    }

    static CARAPI_(ISystemScope*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISystemScope*)pObj->Probe(EIID_ISystemScope);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("8D75324D-9112-AFA3-26A6-C131984DA37C")
IConnectionReuseStrategy : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnectionReuseStrategy*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnectionReuseStrategy*)pObj->Probe(EIID_IConnectionReuseStrategy);
    }

    static CARAPI_(IConnectionReuseStrategy*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnectionReuseStrategy*)pObj->Probe(EIID_IConnectionReuseStrategy);
    }

    virtual CARAPI KeepAlive(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("82A4352C-3752-2418-6EDC-D09FEE07861A")
IFormattedHeader : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IFormattedHeader*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IFormattedHeader*)pObj->Probe(EIID_IFormattedHeader);
    }

    static CARAPI_(IFormattedHeader*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IFormattedHeader*)pObj->Probe(EIID_IFormattedHeader);
    }

    virtual CARAPI GetBuffer(
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buffer) = 0;

    virtual CARAPI GetValuePos(
        /* [out] */ _ELASTOS Int32 * pos) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("D0AB3206-8452-2792-5AFF-58ADFECA4C9A")
IHeader : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHeader*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeader*)pObj->Probe(EIID_IHeader);
    }

    static CARAPI_(IHeader*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeader*)pObj->Probe(EIID_IHeader);
    }

    virtual CARAPI GetName(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetValue(
        /* [out] */ _ELASTOS String * value) = 0;

    virtual CARAPI GetElements(
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeaderElement *> ** elements) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("D06C6A33-3A52-2F07-50BC-FF81A1868A1F")
IHeaderElement : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHeaderElement*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderElement*)pObj->Probe(EIID_IHeaderElement);
    }

    static CARAPI_(IHeaderElement*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderElement*)pObj->Probe(EIID_IHeaderElement);
    }

    virtual CARAPI GetName(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetValue(
        /* [out] */ _ELASTOS String * value) = 0;

    virtual CARAPI GetParameters(
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Http::INameValuePair *> ** parameters) = 0;

    virtual CARAPI GetParameterByName(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::INameValuePair ** parameter) = 0;

    virtual CARAPI GetParameterCount(
        /* [out] */ _ELASTOS Int32 * count) = 0;

    virtual CARAPI GetParameter(
        /* [in] */ _ELASTOS Int32 index,
        /* [out] */ Org::Apache::Http::INameValuePair ** parameter) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("9EBD393B-3A52-2F07-50BC-9770E33E891B")
IHeaderElementIterator : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHeaderElementIterator*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderElementIterator*)pObj->Probe(EIID_IHeaderElementIterator);
    }

    static CARAPI_(IHeaderElementIterator*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderElementIterator*)pObj->Probe(EIID_IHeaderElementIterator);
    }

    virtual CARAPI HasNext(
        /* [out] */ _ELASTOS Boolean * hasNext) = 0;

    virtual CARAPI NextElement(
        /* [out] */ Org::Apache::Http::IHeaderElement ** element) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("0B9F312D-3A52-3709-EE93-B891FF07861A")
IHeaderIterator : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHeaderIterator*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderIterator*)pObj->Probe(EIID_IHeaderIterator);
    }

    static CARAPI_(IHeaderIterator*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderIterator*)pObj->Probe(EIID_IHeaderIterator);
    }

    virtual CARAPI HasNext(
        /* [out] */ _ELASTOS Boolean * hasNext) = 0;

    virtual CARAPI NextHeader(
        /* [out] */ Org::Apache::Http::IHeader ** nextHeader) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("E4A48A3F-8452-371B-66F4-61F403430D15")
IHttpClientConnection : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpClientConnection*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpClientConnection*)pObj->Probe(EIID_IHttpClientConnection);
    }

    static CARAPI_(IHttpClientConnection*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpClientConnection*)pObj->Probe(EIID_IHttpClientConnection);
    }

    virtual CARAPI IsResponseAvailable(
        /* [in] */ _ELASTOS Int32 timeout,
        /* [out] */ _ELASTOS Boolean * isAvailable) = 0;

    virtual CARAPI SendRequestHeader(
        /* [in] */ Org::Apache::Http::IHttpRequest * request) = 0;

    virtual CARAPI SendRequestEntity(
        /* [in] */ Org::Apache::Http::IHttpEntityEnclosingRequest * request) = 0;

    virtual CARAPI ReceiveResponseHeader(
        /* [out] */ Org::Apache::Http::IHttpResponse ** httpResponse) = 0;

    virtual CARAPI ReceiveResponseEntity(
        /* [in] */ Org::Apache::Http::IHttpResponse * response) = 0;

    virtual CARAPI Flush() = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("03E06439-8452-371B-6630-FA81A1868A1F")
IHttpConnection : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpConnection*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpConnection*)pObj->Probe(EIID_IHttpConnection);
    }

    static CARAPI_(IHttpConnection*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpConnection*)pObj->Probe(EIID_IHttpConnection);
    }

    virtual CARAPI Close() = 0;

    virtual CARAPI IsOpen(
        /* [out] */ _ELASTOS Boolean * isOpen) = 0;

    virtual CARAPI IsStale(
        /* [out] */ _ELASTOS Boolean * isStale) = 0;

    virtual CARAPI SetSocketTimeout(
        /* [in] */ _ELASTOS Int32 timeout) = 0;

    virtual CARAPI GetSocketTimeout(
        /* [out] */ _ELASTOS Int32 * timeout) = 0;

    virtual CARAPI Shutdown() = 0;

    virtual CARAPI GetMetrics(
        /* [out] */ Org::Apache::Http::IHttpConnectionMetrics ** metrics) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("FB0E7A37-8452-371B-6630-B280E2460D16")
IHttpConnectionMetrics : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpConnectionMetrics*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpConnectionMetrics*)pObj->Probe(EIID_IHttpConnectionMetrics);
    }

    static CARAPI_(IHttpConnectionMetrics*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpConnectionMetrics*)pObj->Probe(EIID_IHttpConnectionMetrics);
    }

    virtual CARAPI GetRequestCount(
        /* [out] */ _ELASTOS Int64 * count) = 0;

    virtual CARAPI GetResponseCount(
        /* [out] */ _ELASTOS Int64 * count) = 0;

    virtual CARAPI GetSentBytesCount(
        /* [out] */ _ELASTOS Int64 * count) = 0;

    virtual CARAPI GetReceivedBytesCount(
        /* [out] */ _ELASTOS Int64 * count) = 0;

    virtual CARAPI GetMetric(
        /* [in] */ const _ELASTOS String& metricName,
        /* [out] */ IObject ** metric) = 0;

    virtual CARAPI Reset() = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("3D338B1C-7452-B3DF-13DF-ECCDFF58ADFE")
IHttpEntity : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpEntity*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpEntity*)pObj->Probe(EIID_IHttpEntity);
    }

    static CARAPI_(IHttpEntity*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpEntity*)pObj->Probe(EIID_IHttpEntity);
    }

    virtual CARAPI IsRepeatable(
        /* [out] */ _ELASTOS Boolean * isRepeatable) = 0;

    virtual CARAPI IsChunked(
        /* [out] */ _ELASTOS Boolean * isChunked) = 0;

    virtual CARAPI GetContentLength(
        /* [out] */ _ELASTOS Int64 * length) = 0;

    virtual CARAPI GetContentType(
        /* [out] */ Org::Apache::Http::IHeader ** type) = 0;

    virtual CARAPI GetContentEncoding(
        /* [out] */ Org::Apache::Http::IHeader ** encoding) = 0;

    virtual CARAPI GetContent(
        /* [out] */ Elastos::IO::IInputStream ** inputStream) = 0;

    virtual CARAPI WriteTo(
        /* [in] */ Elastos::IO::IOutputStream * outstream) = 0;

    virtual CARAPI IsStreaming(
        /* [out] */ _ELASTOS Boolean * isStreaming) = 0;

    virtual CARAPI ConsumeContent() = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("3DFB4C51-0452-33D8-9E60-8462822663A4")
IHttpEntityEnclosingRequest : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpEntityEnclosingRequest*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpEntityEnclosingRequest*)pObj->Probe(EIID_IHttpEntityEnclosingRequest);
    }

    static CARAPI_(IHttpEntityEnclosingRequest*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpEntityEnclosingRequest*)pObj->Probe(EIID_IHttpEntityEnclosingRequest);
    }

    virtual CARAPI ExpectContinue(
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI SetEntity(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity) = 0;

    virtual CARAPI GetEntity(
        /* [out] */ Org::Apache::Http::IHttpEntity ** entity) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("3FD44A1B-7452-73DF-24DB-F78FD5EAAFCC")
IHttpHost : public IInterface
{
    static const _ELASTOS String DEFAULT_SCHEME_NAME;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpHost*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpHost*)pObj->Probe(EIID_IHttpHost);
    }

    static CARAPI_(IHttpHost*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpHost*)pObj->Probe(EIID_IHttpHost);
    }

    virtual CARAPI GetHostName(
        /* [out] */ _ELASTOS String * hostName) = 0;

    virtual CARAPI GetPort(
        /* [out] */ _ELASTOS Int32 * port) = 0;

    virtual CARAPI GetSchemeName(
        /* [out] */ _ELASTOS String * schemeName) = 0;

    virtual CARAPI ToURI(
        /* [out] */ _ELASTOS String * URI) = 0;

    virtual CARAPI ToHostString(
        /* [out] */ _ELASTOS String * hostString) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("6F1C5C26-8452-371B-661C-447183D10F0C")
IHttpInetConnection : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpInetConnection*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpInetConnection*)pObj->Probe(EIID_IHttpInetConnection);
    }

    static CARAPI_(IHttpInetConnection*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpInetConnection*)pObj->Probe(EIID_IHttpInetConnection);
    }

    virtual CARAPI GetLocalAddress(
        /* [out] */ Elastos::Net::IInetAddress ** address) = 0;

    virtual CARAPI GetLocalPort(
        /* [out] */ _ELASTOS Int32 * port) = 0;

    virtual CARAPI GetRemoteAddress(
        /* [out] */ Elastos::Net::IInetAddress ** address) = 0;

    virtual CARAPI GetRemotePort(
        /* [out] */ _ELASTOS Int32 * port) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("C181EA2A-8452-371B-66CC-FC81A1868A1F")
IHttpMessage : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpMessage*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpMessage*)pObj->Probe(EIID_IHttpMessage);
    }

    static CARAPI_(IHttpMessage*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpMessage*)pObj->Probe(EIID_IHttpMessage);
    }

    virtual CARAPI GetProtocolVersion(
        /* [out] */ Org::Apache::Http::IProtocolVersion ** ProtocolVersion) = 0;

    virtual CARAPI ContainsHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS Boolean * isContain) = 0;

    virtual CARAPI GetHeaders(
        /* [in] */ const _ELASTOS String& name,
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> ** headers) = 0;

    virtual CARAPI GetFirstHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeader ** firstHeader) = 0;

    virtual CARAPI GetLastHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeader ** lastHeader) = 0;

    virtual CARAPI GetAllHeaders(
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> ** allHeaders) = 0;

    virtual CARAPI AddHeader(
        /* [in] */ Org::Apache::Http::IHeader * header) = 0;

    virtual CARAPI AddHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value) = 0;

    virtual CARAPI SetHeader(
        /* [in] */ Org::Apache::Http::IHeader * header) = 0;

    virtual CARAPI SetHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value) = 0;

    virtual CARAPI SetHeaders(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers) = 0;

    virtual CARAPI RemoveHeader(
        /* [in] */ Org::Apache::Http::IHeader * header) = 0;

    virtual CARAPI RemoveHeaders(
        /* [in] */ const _ELASTOS String& name) = 0;

    virtual CARAPI GetHeaderIterator(
        /* [out] */ Org::Apache::Http::IHeaderIterator ** headerIterator) = 0;

    virtual CARAPI GetHeaderIterator(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeaderIterator ** headerIterator) = 0;

    virtual CARAPI GetParams(
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** httpParams) = 0;

    virtual CARAPI SetParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("A7212B3C-8452-371B-6608-FE81A1868A1F")
IHttpRequest : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequest*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequest*)pObj->Probe(EIID_IHttpRequest);
    }

    static CARAPI_(IHttpRequest*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequest*)pObj->Probe(EIID_IHttpRequest);
    }

    virtual CARAPI GetRequestLine(
        /* [out] */ Org::Apache::Http::IRequestLine ** requestLine) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("E82A4036-8452-371B-6608-86F603430D15")
IHttpRequestFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequestFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestFactory*)pObj->Probe(EIID_IHttpRequestFactory);
    }

    static CARAPI_(IHttpRequestFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestFactory*)pObj->Probe(EIID_IHttpRequestFactory);
    }

    virtual CARAPI NewHttpRequest(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Org::Apache::Http::IHttpRequest ** request) = 0;

    virtual CARAPI NewHttpRequest(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest ** request) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("DD0C2F4A-0452-33D8-D2CC-85BC253328B5")
IHttpRequestInterceptor : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequestInterceptor*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestInterceptor*)pObj->Probe(EIID_IHttpRequestInterceptor);
    }

    static CARAPI_(IHttpRequestInterceptor*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestInterceptor*)pObj->Probe(EIID_IHttpRequestInterceptor);
    }

    virtual CARAPI Process(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("89199227-8452-371B-6614-FE81A1868A1F")
IHttpResponse : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpResponse*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpResponse*)pObj->Probe(EIID_IHttpResponse);
    }

    static CARAPI_(IHttpResponse*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpResponse*)pObj->Probe(EIID_IHttpResponse);
    }

    virtual CARAPI GetStatusLine(
        /* [out] */ Org::Apache::Http::IStatusLine ** statusLine) = 0;

    virtual CARAPI SetStatusLine(
        /* [in] */ Org::Apache::Http::IStatusLine * statusLine) = 0;

    virtual CARAPI SetStatusLine(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code) = 0;

    virtual CARAPI SetStatusLine(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason) = 0;

    virtual CARAPI SetStatusCode(
        /* [in] */ _ELASTOS Int32 code) = 0;

    virtual CARAPI SetReasonPhrase(
        /* [in] */ const _ELASTOS String& reason) = 0;

    virtual CARAPI GetEntity(
        /* [out] */ Org::Apache::Http::IHttpEntity ** entity) = 0;

    virtual CARAPI SetEntity(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity) = 0;

    virtual CARAPI GetLocale(
        /* [out] */ Elastos::Utility::ILocale ** loc) = 0;

    virtual CARAPI SetLocale(
        /* [in] */ Elastos::Utility::ILocale * loc) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("AF304330-8452-371B-6614-86F603430D15")
IHttpResponseFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpResponseFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpResponseFactory*)pObj->Probe(EIID_IHttpResponseFactory);
    }

    static CARAPI_(IHttpResponseFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpResponseFactory*)pObj->Probe(EIID_IHttpResponseFactory);
    }

    virtual CARAPI NewHttpResponse(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 status,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

    virtual CARAPI NewHttpResponse(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("B0D23023-8452-371B-6614-2E78DF048A19")
IHttpResponseInterceptor : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpResponseInterceptor*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpResponseInterceptor*)pObj->Probe(EIID_IHttpResponseInterceptor);
    }

    static CARAPI_(IHttpResponseInterceptor*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpResponseInterceptor*)pObj->Probe(EIID_IHttpResponseInterceptor);
    }

    virtual CARAPI Process(
        /* [in] */ Org::Apache::Http::IHttpResponse * request,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("20E4773C-8452-371B-6660-66F403430D15")
IHttpServerConnection : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpServerConnection*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpServerConnection*)pObj->Probe(EIID_IHttpServerConnection);
    }

    static CARAPI_(IHttpServerConnection*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpServerConnection*)pObj->Probe(EIID_IHttpServerConnection);
    }

    virtual CARAPI ReceiveRequestHeader(
        /* [out] */ Org::Apache::Http::IHttpRequest ** request) = 0;

    virtual CARAPI ReceiveRequestEntity(
        /* [in] */ Org::Apache::Http::IHttpEntityEnclosingRequest * request) = 0;

    virtual CARAPI SendResponseHeader(
        /* [in] */ Org::Apache::Http::IHttpResponse * response) = 0;

    virtual CARAPI SendResponseEntity(
        /* [in] */ Org::Apache::Http::IHttpResponse * response) = 0;

    virtual CARAPI Flush() = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("23A11C0F-7452-33DF-7793-376EFF58ADFE")
IHttpStatus : public IInterface
{
    static const _ELASTOS Int32 SC_CONTINUE = 100;
    static const _ELASTOS Int32 SC_SWITCHING_PROTOCOLS = 101;
    static const _ELASTOS Int32 SC_PROCESSING = 102;
    static const _ELASTOS Int32 SC_OK = 200;
    static const _ELASTOS Int32 SC_CREATED = 201;
    static const _ELASTOS Int32 SC_ACCEPTED = 202;
    static const _ELASTOS Int32 SC_NON_AUTHORITATIVE_INFORMATION = 203;
    static const _ELASTOS Int32 SC_NO_CONTENT = 204;
    static const _ELASTOS Int32 SC_RESET_CONTENT = 205;
    static const _ELASTOS Int32 SC_PARTIAL_CONTENT = 206;
    static const _ELASTOS Int32 SC_MULTI_STATUS = 207;
    static const _ELASTOS Int32 SC_MULTIPLE_CHOICES = 300;
    static const _ELASTOS Int32 SC_MOVED_PERMANENTLY = 301;
    static const _ELASTOS Int32 SC_MOVED_TEMPORARILY = 302;
    static const _ELASTOS Int32 SC_SEE_OTHER = 303;
    static const _ELASTOS Int32 SC_NOT_MODIFIED = 304;
    static const _ELASTOS Int32 SC_USE_PROXY = 305;
    static const _ELASTOS Int32 SC_TEMPORARY_REDIRECT = 307;
    static const _ELASTOS Int32 SC_BAD_REQUEST = 400;
    static const _ELASTOS Int32 SC_UNAUTHORIZED = 401;
    static const _ELASTOS Int32 SC_PAYMENT_REQUIRED = 402;
    static const _ELASTOS Int32 SC_FORBIDDEN = 403;
    static const _ELASTOS Int32 SC_NOT_FOUND = 404;
    static const _ELASTOS Int32 SC_METHOD_NOT_ALLOWED = 405;
    static const _ELASTOS Int32 SC_NOT_ACCEPTABLE = 406;
    static const _ELASTOS Int32 SC_PROXY_AUTHENTICATION_REQUIRED = 407;
    static const _ELASTOS Int32 SC_REQUEST_TIMEOUT = 408;
    static const _ELASTOS Int32 SC_CONFLICT = 409;
    static const _ELASTOS Int32 SC_GONE = 410;
    static const _ELASTOS Int32 SC_LENGTH_REQUIRED = 411;
    static const _ELASTOS Int32 SC_PRECONDITION_FAILED = 412;
    static const _ELASTOS Int32 SC_REQUEST_TOO_LONG = 413;
    static const _ELASTOS Int32 SC_REQUEST_URI_TOO_LONG = 414;
    static const _ELASTOS Int32 SC_UNSUPPORTED_MEDIA_TYPE = 415;
    static const _ELASTOS Int32 SC_REQUESTED_RANGE_NOT_SATISFIABLE = 416;
    static const _ELASTOS Int32 SC_EXPECTATION_FAILED = 417;
    static const _ELASTOS Int32 SC_INSUFFICIENT_SPACE_ON_RESOURCE = 419;
    static const _ELASTOS Int32 SC_METHOD_FAILURE = 420;
    static const _ELASTOS Int32 SC_UNPROCESSABLE_ENTITY = 422;
    static const _ELASTOS Int32 SC_LOCKED = 423;
    static const _ELASTOS Int32 SC_FAILED_DEPENDENCY = 424;
    static const _ELASTOS Int32 SC_INTERNAL_SERVER_ERROR = 500;
    static const _ELASTOS Int32 SC_NOT_IMPLEMENTED = 501;
    static const _ELASTOS Int32 SC_BAD_GATEWAY = 502;
    static const _ELASTOS Int32 SC_SERVICE_UNAVAILABLE = 503;
    static const _ELASTOS Int32 SC_GATEWAY_TIMEOUT = 504;
    static const _ELASTOS Int32 SC_HTTP_VERSION_NOT_SUPPORTED = 505;
    static const _ELASTOS Int32 SC_INSUFFICIENT_STORAGE = 507;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpStatus*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpStatus*)pObj->Probe(EIID_IHttpStatus);
    }

    static CARAPI_(IHttpStatus*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpStatus*)pObj->Probe(EIID_IHttpStatus);
    }

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("5EF2272B-8452-371B-6680-FF81A1868A1F")
IHttpVersion : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpVersion*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpVersion*)pObj->Probe(EIID_IHttpVersion);
    }

    static CARAPI_(IHttpVersion*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpVersion*)pObj->Probe(EIID_IHttpVersion);
    }

    virtual CARAPI ForVersion(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Org::Apache::Http::IProtocolVersion ** ver) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("0DC85327-8452-371B-6680-8F80E2C58CFB")
IHttpVersionHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpVersionHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpVersionHelper*)pObj->Probe(EIID_IHttpVersionHelper);
    }

    static CARAPI_(IHttpVersionHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpVersionHelper*)pObj->Probe(EIID_IHttpVersionHelper);
    }

    virtual CARAPI GerHttpVersion09(
        /* [out] */ Org::Apache::Http::IHttpVersion ** ver) = 0;

    virtual CARAPI GerHttpVersion10(
        /* [out] */ Org::Apache::Http::IHttpVersion ** ver) = 0;

    virtual CARAPI GerHttpVersion11(
        /* [out] */ Org::Apache::Http::IHttpVersion ** ver) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("63B62E21-D052-19EF-48B0-A8F103430D15")
INameValuePair : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(INameValuePair*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (INameValuePair*)pObj->Probe(EIID_INameValuePair);
    }

    static CARAPI_(INameValuePair*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (INameValuePair*)pObj->Probe(EIID_INameValuePair);
    }

    virtual CARAPI GetName(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetValue(
        /* [out] */ _ELASTOS String * value) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("B7BD7949-0652-A8BE-5DBD-F8F06CF10F0C")
IProtocolVersion : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IProtocolVersion*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IProtocolVersion*)pObj->Probe(EIID_IProtocolVersion);
    }

    static CARAPI_(IProtocolVersion*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IProtocolVersion*)pObj->Probe(EIID_IProtocolVersion);
    }

    virtual CARAPI GetProtocol(
        /* [out] */ _ELASTOS String * protocol) = 0;

    virtual CARAPI GetMajor(
        /* [out] */ _ELASTOS Int32 * major) = 0;

    virtual CARAPI GetMinor(
        /* [out] */ _ELASTOS Int32 * minor) = 0;

    virtual CARAPI ForVersion(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Org::Apache::Http::IProtocolVersion ** ver) = 0;

    virtual CARAPI IsComparable(
        /* [in] */ Org::Apache::Http::IProtocolVersion * that,
        /* [out] */ _ELASTOS Boolean * isComparable) = 0;

    virtual CARAPI CompareToVersion(
        /* [in] */ Org::Apache::Http::IProtocolVersion * that,
        /* [out] */ _ELASTOS Int32 * ver) = 0;

    virtual CARAPI GreaterEquals(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI LessEquals(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("43902E49-9A52-5245-CBDC-1DCC80114D15")
IReasonPhraseCatalog : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IReasonPhraseCatalog*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonPhraseCatalog*)pObj->Probe(EIID_IReasonPhraseCatalog);
    }

    static CARAPI_(IReasonPhraseCatalog*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IReasonPhraseCatalog*)pObj->Probe(EIID_IReasonPhraseCatalog);
    }

    virtual CARAPI GetReason(
        /* [in] */ _ELASTOS Int32 status,
        /* [in] */ Elastos::Utility::ILocale * loc,
        /* [out] */ _ELASTOS String * reason) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("08393E25-E092-2C0A-62A0-F881A1868A1F")
IRequestLine : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IRequestLine*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRequestLine*)pObj->Probe(EIID_IRequestLine);
    }

    static CARAPI_(IRequestLine*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRequestLine*)pObj->Probe(EIID_IRequestLine);
    }

    virtual CARAPI GetMethod(
        /* [out] */ _ELASTOS String * method) = 0;

    virtual CARAPI GetProtocolVersion(
        /* [out] */ Org::Apache::Http::IProtocolVersion ** protocolVersion) = 0;

    virtual CARAPI GetUri(
        /* [out] */ _ELASTOS String * uri) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("17514A18-7712-3793-6E57-6C8CFE58ADFE")
IStatusLine : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IStatusLine*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IStatusLine*)pObj->Probe(EIID_IStatusLine);
    }

    static CARAPI_(IStatusLine*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IStatusLine*)pObj->Probe(EIID_IStatusLine);
    }

    virtual CARAPI GetProtocolVersion(
        /* [out] */ Org::Apache::Http::IProtocolVersion ** ver) = 0;

    virtual CARAPI GetStatusCode(
        /* [out] */ _ELASTOS Int32 * code) = 0;

    virtual CARAPI GetReasonPhrase(
        /* [out] */ _ELASTOS String * phrase) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("7DBD2F56-1BD2-CC17-2464-7E74F507861A")
ITokenIterator : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ITokenIterator*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITokenIterator*)pObj->Probe(EIID_ITokenIterator);
    }

    static CARAPI_(ITokenIterator*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ITokenIterator*)pObj->Probe(EIID_ITokenIterator);
    }

    virtual CARAPI HasNext(
        /* [out] */ _ELASTOS Boolean * hasNext) = 0;

    virtual CARAPI NextToken(
        /* [out] */ _ELASTOS String * element) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("698E1B03-E292-D175-8FD5-EAAFCCA4B9A2")
IAUTH : public IInterface
{
    static const _ELASTOS String WWW_AUTH;
    static const _ELASTOS String WWW_AUTH_RESP;
    static const _ELASTOS String PROXY_AUTH;
    static const _ELASTOS String PROXY_AUTH_RESP;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAUTH*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAUTH*)pObj->Probe(EIID_IAUTH);
    }

    static CARAPI_(IAUTH*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAUTH*)pObj->Probe(EIID_IAUTH);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("670D7905-8292-2BDF-67AE-288CFE58ADFE")
IAuthScheme : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthScheme*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthScheme*)pObj->Probe(EIID_IAuthScheme);
    }

    static CARAPI_(IAuthScheme*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthScheme*)pObj->Probe(EIID_IAuthScheme);
    }

    virtual CARAPI ProcessChallenge(
        /* [in] */ Org::Apache::Http::IHeader * header) = 0;

    virtual CARAPI GetSchemeName(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetParameter(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS String * param) = 0;

    virtual CARAPI GetRealm(
        /* [out] */ _ELASTOS String * realm) = 0;

    virtual CARAPI IsConnectionBased(
        /* [out] */ _ELASTOS Boolean * connectionBased) = 0;

    virtual CARAPI IsComplete(
        /* [out] */ _ELASTOS Boolean * isComplete) = 0;

    virtual CARAPI Authenticate(
        /* [in] */ Org::Apache::Http::Auth::ICredentials * credentials,
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [out] */ Org::Apache::Http::IHeader ** header) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("88793353-0292-A51C-3988-DAF980C42BAB")
IAuthSchemeFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthSchemeFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthSchemeFactory*)pObj->Probe(EIID_IAuthSchemeFactory);
    }

    static CARAPI_(IAuthSchemeFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthSchemeFactory*)pObj->Probe(EIID_IAuthSchemeFactory);
    }

    virtual CARAPI NewInstance(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Auth::IAuthScheme ** scheme) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("07BC5E5C-0292-A51C-3988-DA99061E64C0")
IAuthSchemeRegistry : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthSchemeRegistry*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthSchemeRegistry*)pObj->Probe(EIID_IAuthSchemeRegistry);
    }

    static CARAPI_(IAuthSchemeRegistry*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthSchemeRegistry*)pObj->Probe(EIID_IAuthSchemeRegistry);
    }

    virtual CARAPI Register(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Auth::IAuthSchemeFactory * factory) = 0;

    virtual CARAPI Unregister(
        /* [in] */ const _ELASTOS String& name) = 0;

    virtual CARAPI GetAuthScheme(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Auth::IAuthScheme ** scheme) = 0;

    virtual CARAPI GetSchemeNames(
        /* [out] */ Elastos::Utility::IList ** names) = 0;

    virtual CARAPI SetItems(
        /* [in] */ Elastos::Utility::IMap * map) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("682F440A-8292-2BDF-67CA-33FA63B5FA2B")
IAuthScope : public IInterface
{
    static const _ELASTOS Int32 ANY_PORT = -1;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthScope*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthScope*)pObj->Probe(EIID_IAuthScope);
    }

    static CARAPI_(IAuthScope*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthScope*)pObj->Probe(EIID_IAuthScope);
    }

    virtual CARAPI GetHost(
        /* [out] */ _ELASTOS String * host) = 0;

    virtual CARAPI GetPort(
        /* [out] */ _ELASTOS Int32 * port) = 0;

    virtual CARAPI GetRealm(
        /* [out] */ _ELASTOS String * realmName) = 0;

    virtual CARAPI GetScheme(
        /* [out] */ _ELASTOS String * scheme) = 0;

    virtual CARAPI Match(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * that,
        /* [out] */ _ELASTOS Int32 * value) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("ED66351E-8292-2BDF-67CA-331AA1EF8CD6")
IAuthScopeHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthScopeHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthScopeHelper*)pObj->Probe(EIID_IAuthScopeHelper);
    }

    static CARAPI_(IAuthScopeHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthScopeHelper*)pObj->Probe(EIID_IAuthScopeHelper);
    }

    virtual CARAPI GetDefaultScope(
        /* [out] */ Org::Apache::Http::Auth::IAuthScope ** scope) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("1B017F0C-8292-2BDF-7793-37FA63B5FA2B")
IAuthState : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthState*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthState*)pObj->Probe(EIID_IAuthState);
    }

    static CARAPI_(IAuthState*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthState*)pObj->Probe(EIID_IAuthState);
    }

    virtual CARAPI Invalidate() = 0;

    virtual CARAPI IsValid(
        /* [out] */ _ELASTOS Boolean * isValid) = 0;

    virtual CARAPI SetAuthScheme(
        /* [in] */ Org::Apache::Http::Auth::IAuthScheme * authScheme) = 0;

    virtual CARAPI GetAuthScheme(
        /* [out] */ Org::Apache::Http::Auth::IAuthScheme ** scheme) = 0;

    virtual CARAPI GetCredentials(
        /* [out] */ Org::Apache::Http::Auth::ICredentials ** credentials) = 0;

    virtual CARAPI SetCredentials(
        /* [in] */ Org::Apache::Http::Auth::ICredentials * credentials) = 0;

    virtual CARAPI GetAuthScope(
        /* [out] */ Org::Apache::Http::Auth::IAuthScope ** authScope) = 0;

    virtual CARAPI SetAuthScope(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authScope) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("54AC292C-1892-19ED-6AB0-886182C50C12")
IBasicUserPrincipal : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicUserPrincipal*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicUserPrincipal*)pObj->Probe(EIID_IBasicUserPrincipal);
    }

    static CARAPI_(IBasicUserPrincipal*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicUserPrincipal*)pObj->Probe(EIID_IBasicUserPrincipal);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("5D7C3D13-5312-27A3-1ADF-2CF9DA3F56AB")
ICredentials : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICredentials*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICredentials*)pObj->Probe(EIID_ICredentials);
    }

    static CARAPI_(ICredentials*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICredentials*)pObj->Probe(EIID_ICredentials);
    }

    virtual CARAPI GetUserPrincipal(
        /* [out] */ Elastos::Security::IPrincipal ** principal) = 0;

    virtual CARAPI GetPassword(
        /* [out] */ _ELASTOS String * password) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("ED9D4615-D5D2-3531-7AA2-F1CD92AFFD63")
INTCredentials : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(INTCredentials*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (INTCredentials*)pObj->Probe(EIID_INTCredentials);
    }

    static CARAPI_(INTCredentials*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (INTCredentials*)pObj->Probe(EIID_INTCredentials);
    }

    virtual CARAPI GetUserName(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetDomain(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetWorkstation(
        /* [out] */ _ELASTOS String * name) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("5A283A14-D5D2-3679-5A67-351B9BEC4CBE")
INTUserPrincipal : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(INTUserPrincipal*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (INTUserPrincipal*)pObj->Probe(EIID_INTUserPrincipal);
    }

    static CARAPI_(INTUserPrincipal*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (INTUserPrincipal*)pObj->Probe(EIID_INTUserPrincipal);
    }

    virtual CARAPI GetDomain(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetUserName(
        /* [out] */ _ELASTOS String * name) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("69713D0B-6792-75A3-4CC2-6846DAB62ED7")
IUsernamePasswordCredentials : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IUsernamePasswordCredentials*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IUsernamePasswordCredentials*)pObj->Probe(EIID_IUsernamePasswordCredentials);
    }

    static CARAPI_(IUsernamePasswordCredentials*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IUsernamePasswordCredentials*)pObj->Probe(EIID_IUsernamePasswordCredentials);
    }

    virtual CARAPI GetUserName(
        /* [out] */ _ELASTOS String * name) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
namespace Params {
CAR_INTERFACE("C0DE3F0B-8292-6BDF-46D6-24BCA064FC63")
IAuthParamBean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthParamBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthParamBean*)pObj->Probe(EIID_IAuthParamBean);
    }

    static CARAPI_(IAuthParamBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthParamBean*)pObj->Probe(EIID_IAuthParamBean);
    }

    virtual CARAPI SetCredentialCharset(
        /* [in] */ const _ELASTOS String& charset) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
namespace Params {
CAR_INTERFACE("3C7A5017-8292-6BDF-46D6-246CFF58ADFE")
IAuthParams : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthParams*)pObj->Probe(EIID_IAuthParams);
    }

    static CARAPI_(IAuthParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthParams*)pObj->Probe(EIID_IAuthParams);
    }

    virtual CARAPI GetCredentialCharset(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS String * charset) = 0;

    virtual CARAPI SetCredentialCharset(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ const _ELASTOS String& charset) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
namespace Params {
CAR_INTERFACE("01BB281E-8292-6BDF-7691-306AFF58ADFE")
IAuthPNames : public IInterface
{
    static const _ELASTOS String CREDENTIAL_CHARSET;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthPNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthPNames*)pObj->Probe(EIID_IAuthPNames);
    }

    static CARAPI_(IAuthPNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthPNames*)pObj->Probe(EIID_IAuthPNames);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("20A96042-0292-A11C-636C-761441D08994")
IAuthenticationHandler : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthenticationHandler*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthenticationHandler*)pObj->Probe(EIID_IAuthenticationHandler);
    }

    static CARAPI_(IAuthenticationHandler*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthenticationHandler*)pObj->Probe(EIID_IAuthenticationHandler);
    }

    virtual CARAPI IsAuthenticationRequested(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI GetChallenges(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Elastos::Utility::IMap ** callenges) = 0;

    virtual CARAPI SelectScheme(
        /* [in] */ Elastos::Utility::IMap * challenges,
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::Auth::IAuthScheme ** scheme) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("A2524814-2312-2ECB-8B72-B75CA33F56AB")
ICookieStore : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookieStore*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieStore*)pObj->Probe(EIID_ICookieStore);
    }

    static CARAPI_(ICookieStore*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieStore*)pObj->Probe(EIID_ICookieStore);
    }

    virtual CARAPI AddCookie(
        /* [in] */ Org::Apache::Http::Cookie::ICookie * cookie) = 0;

    virtual CARAPI GetCookies(
        /* [out] */ Elastos::Utility::IList ** cookies) = 0;

    virtual CARAPI ClearExpired(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ _ELASTOS Boolean * purged) = 0;

    virtual CARAPI Clear() = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("10704D5C-0312-B3BC-627C-06642303DFDF")
ICredentialsProvider : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICredentialsProvider*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICredentialsProvider*)pObj->Probe(EIID_ICredentialsProvider);
    }

    static CARAPI_(ICredentialsProvider*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICredentialsProvider*)pObj->Probe(EIID_ICredentialsProvider);
    }

    virtual CARAPI SetCredentials(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authscope,
        /* [in] */ Org::Apache::Http::Auth::ICredentials * credentials) = 0;

    virtual CARAPI GetCredentials(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authscope,
        /* [out] */ Org::Apache::Http::Auth::ICredentials ** credentials) = 0;

    virtual CARAPI Clear() = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("AE82781D-7452-33DF-F3B2-687CFF58ADFE")
IHttpClient : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpClient*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpClient*)pObj->Probe(EIID_IHttpClient);
    }

    static CARAPI_(IHttpClient*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpClient*)pObj->Probe(EIID_IHttpClient);
    }

    virtual CARAPI GetParams(
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** params) = 0;

    virtual CARAPI GetConnectionManager(
        /* [out] */ Org::Apache::Http::Conn::IClientConnectionManager ** manager) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::Client::Methods::IHttpUriRequest * request,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::Client::Methods::IHttpUriRequest * request,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::Client::Methods::IHttpUriRequest * request,
        /* [in] */ Org::Apache::Http::Client::IResponseHandler * responseHandler,
        /* [out] */ IInterface ** response) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::Client::Methods::IHttpUriRequest * request,
        /* [in] */ Org::Apache::Http::Client::IResponseHandler * responseHandler,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ IInterface ** response) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::Client::IResponseHandler * responseHandler,
        /* [out] */ IInterface ** response) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::Client::IResponseHandler * responseHandler,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ IInterface ** response) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("A34F3C37-8452-371B-6608-4E7CEE07861A")
IHttpRequestRetryHandler : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequestRetryHandler*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestRetryHandler*)pObj->Probe(EIID_IHttpRequestRetryHandler);
    }

    static CARAPI_(IHttpRequestRetryHandler*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestRetryHandler*)pObj->Probe(EIID_IHttpRequestRetryHandler);
    }

    virtual CARAPI RetryRequest(
        /* [in] */ _ELASTOS ECode exception,
        /* [in] */ _ELASTOS Int32 executionCount,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ _ELASTOS Boolean * retried) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("EF81492F-06D2-2CFD-6AA0-3071E3DC0F0C")
IRedirectHandler : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IRedirectHandler*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRedirectHandler*)pObj->Probe(EIID_IRedirectHandler);
    }

    static CARAPI_(IRedirectHandler*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRedirectHandler*)pObj->Probe(EIID_IRedirectHandler);
    }

    virtual CARAPI IsRedirectRequested(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ _ELASTOS Boolean * redirected) = 0;

    virtual CARAPI GetLocationURI(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Elastos::Net::IURI ** uri) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("D8832F30-6092-2859-4CDC-C8FF03430D15")
IRequestDirector : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IRequestDirector*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRequestDirector*)pObj->Probe(EIID_IRequestDirector);
    }

    static CARAPI_(IRequestDirector*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRequestDirector*)pObj->Probe(EIID_IRequestDirector);
    }

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("CDDB3626-E152-3F73-30D4-50F143C10C12")
IResponseHandler : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IResponseHandler*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IResponseHandler*)pObj->Probe(EIID_IResponseHandler);
    }

    static CARAPI_(IResponseHandler*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IResponseHandler*)pObj->Probe(EIID_IResponseHandler);
    }

    virtual CARAPI HandleResponse(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [out] */ IInterface ** value) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
CAR_INTERFACE("CD663539-7692-2EE3-50C4-38F703430D15")
IUserTokenHandler : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IUserTokenHandler*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IUserTokenHandler*)pObj->Probe(EIID_IUserTokenHandler);
    }

    static CARAPI_(IUserTokenHandler*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IUserTokenHandler*)pObj->Probe(EIID_IUserTokenHandler);
    }

    virtual CARAPI GetUserToken(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ IInterface ** token) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("EC5F5F3D-1012-2512-5EA0-8870E3C60CC1")
IAbortableHttpRequest : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAbortableHttpRequest*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAbortableHttpRequest*)pObj->Probe(EIID_IAbortableHttpRequest);
    }

    static CARAPI_(IAbortableHttpRequest*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAbortableHttpRequest*)pObj->Probe(EIID_IAbortableHttpRequest);
    }

    virtual CARAPI SetConnectionRequest(
        /* [in] */ Org::Apache::Http::Conn::IClientConnectionRequest * connRequest) = 0;

    virtual CARAPI SetReleaseTrigger(
        /* [in] */ Org::Apache::Http::Conn::IConnectionReleaseTrigger * releaseTrigger) = 0;

    virtual CARAPI Abort() = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("10512B09-7452-73DF-83BE-E88DFE58ADFE")
IHttpDelete : public IInterface
{
    static const _ELASTOS String METHOD_NAME;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpDelete*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpDelete*)pObj->Probe(EIID_IHttpDelete);
    }

    static CARAPI_(IHttpDelete*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpDelete*)pObj->Probe(EIID_IHttpDelete);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("078E280F-7452-33DF-84DE-3F56ABBF3293")
IHttpGet : public IInterface
{
    static const _ELASTOS String METHOD_NAME;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpGet*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpGet*)pObj->Probe(EIID_IHttpGet);
    }

    static CARAPI_(IHttpGet*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpGet*)pObj->Probe(EIID_IHttpGet);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("8BB72915-7452-73DF-8492-E78FD5EAAFCC")
IHttpHead : public IInterface
{
    static const _ELASTOS String METHOD_NAME;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpHead*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpHead*)pObj->Probe(EIID_IHttpHead);
    }

    static CARAPI_(IHttpHead*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpHead*)pObj->Probe(EIID_IHttpHead);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("887C3D0D-7452-33DF-36DF-AC1CDB3F56AB")
IHttpOptions : public IInterface
{
    static const _ELASTOS String METHOD_NAME;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpOptions*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpOptions*)pObj->Probe(EIID_IHttpOptions);
    }

    static CARAPI_(IHttpOptions*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpOptions*)pObj->Probe(EIID_IHttpOptions);
    }

    virtual CARAPI GetAllowedMethods(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [out] */ Elastos::Utility::ISet ** methods) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("719D291F-7452-73DF-26DB-F78FD5EAAFCC")
IHttpPost : public IInterface
{
    static const _ELASTOS String METHOD_NAME;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpPost*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpPost*)pObj->Probe(EIID_IHttpPost);
    }

    static CARAPI_(IHttpPost*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpPost*)pObj->Probe(EIID_IHttpPost);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("FE7D2809-7452-73DF-86DF-3F56ABBF3293")
IHttpPut : public IInterface
{
    static const _ELASTOS String METHOD_NAME;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpPut*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpPut*)pObj->Probe(EIID_IHttpPut);
    }

    static CARAPI_(IHttpPut*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpPut*)pObj->Probe(EIID_IHttpPut);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("A81D2A14-7452-73DF-5793-26FA63B5FA2B")
IHttpTrace : public IInterface
{
    static const _ELASTOS String METHOD_NAME;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpTrace*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpTrace*)pObj->Probe(EIID_IHttpTrace);
    }

    static CARAPI_(IHttpTrace*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpTrace*)pObj->Probe(EIID_IHttpTrace);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("BDCA4C37-8452-371B-6678-A8C142F00F0C")
IHttpUriRequest : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpUriRequest*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpUriRequest*)pObj->Probe(EIID_IHttpUriRequest);
    }

    static CARAPI_(IHttpUriRequest*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpUriRequest*)pObj->Probe(EIID_IHttpUriRequest);
    }

    virtual CARAPI GetMethod(
        /* [out] */ _ELASTOS String * method) = 0;

    virtual CARAPI GetURI(
        /* [out] */ Elastos::Net::IURI ** URI) = 0;

    virtual CARAPI Abort() = 0;

    virtual CARAPI IsAborted(
        /* [out] */ _ELASTOS Boolean * isAborted) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
CAR_INTERFACE("59AD2F26-92D2-193E-82DA-F881A1868A1F")
IAllClientPNames : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAllClientPNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAllClientPNames*)pObj->Probe(EIID_IAllClientPNames);
    }

    static CARAPI_(IAllClientPNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAllClientPNames*)pObj->Probe(EIID_IAllClientPNames);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
CAR_INTERFACE("90322A17-8292-6BDF-26BF-ACC9FF58ADFE")
IAuthPolicy : public IInterface
{
    static const _ELASTOS String NTLM;
    static const _ELASTOS String DIGEST;
    static const _ELASTOS String BASIC;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAuthPolicy*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthPolicy*)pObj->Probe(EIID_IAuthPolicy);
    }

    static CARAPI_(IAuthPolicy*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAuthPolicy*)pObj->Probe(EIID_IAuthPolicy);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
CAR_INTERFACE("B2F6F536-1F52-64AC-48C4-F881A1868A1F")
IClientParamBean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientParamBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientParamBean*)pObj->Probe(EIID_IClientParamBean);
    }

    static CARAPI_(IClientParamBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientParamBean*)pObj->Probe(EIID_IClientParamBean);
    }

    virtual CARAPI SetConnectionManagerFactoryClassName(
        /* [in] */ const _ELASTOS String& factory) = 0;

    virtual CARAPI SetConnectionManagerFactory(
        /* [in] */ Org::Apache::Http::Conn::IClientConnectionManagerFactory * factory) = 0;

    virtual CARAPI SetHandleRedirects(
        /* [in] */ _ELASTOS Boolean handle) = 0;

    virtual CARAPI SetRejectRelativeRedirect(
        /* [in] */ _ELASTOS Boolean reject) = 0;

    virtual CARAPI SetMaxRedirects(
        /* [in] */ _ELASTOS Int32 maxRedirects) = 0;

    virtual CARAPI SetAllowCircularRedirects(
        /* [in] */ _ELASTOS Boolean allow) = 0;

    virtual CARAPI SetHandleAuthentication(
        /* [in] */ _ELASTOS Boolean handle) = 0;

    virtual CARAPI SetCookiePolicy(
        /* [in] */ const _ELASTOS String& policy) = 0;

    virtual CARAPI SetVirtualHost(
        /* [in] */ Org::Apache::Http::IHttpHost * host) = 0;

    virtual CARAPI SetDefaultHeaders(
        /* [in] */ Elastos::Utility::ICollection * headers) = 0;

    virtual CARAPI SetDefaultHost(
        /* [in] */ Org::Apache::Http::IHttpHost * host) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
CAR_INTERFACE("33ED2C26-9F52-410C-6DFC-C05043C50F05")
IClientPNames : public IInterface
{
    static const _ELASTOS String CONNECTION_MANAGER_FACTORY_CLASS_NAME;
    static const _ELASTOS String CONNECTION_MANAGER_FACTORY;
    static const _ELASTOS String HANDLE_REDIRECTS;
    static const _ELASTOS String REJECT_RELATIVE_REDIRECT;
    static const _ELASTOS String MAX_REDIRECTS;
    static const _ELASTOS String ALLOW_CIRCULAR_REDIRECTS;
    static const _ELASTOS String HANDLE_AUTHENTICATION;
    static const _ELASTOS String COOKIE_POLICY;
    static const _ELASTOS String VIRTUAL_HOST;
    static const _ELASTOS String DEFAULT_HEADERS;
    static const _ELASTOS String DEFAULT_HOST;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientPNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientPNames*)pObj->Probe(EIID_IClientPNames);
    }

    static CARAPI_(IClientPNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientPNames*)pObj->Probe(EIID_IClientPNames);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
CAR_INTERFACE("29D02C07-2312-2ECB-8B66-F2CB9AFC8FD5")
ICookiePolicy : public IInterface
{
    static const _ELASTOS String BROWSER_COMPATIBILITY;
    static const _ELASTOS String NETSCAPE;
    static const _ELASTOS String RFC_2109;
    static const _ELASTOS String RFC_2965;
    static const _ELASTOS String BEST_MATCH;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookiePolicy*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookiePolicy*)pObj->Probe(EIID_ICookiePolicy);
    }

    static CARAPI_(ICookiePolicy*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookiePolicy*)pObj->Probe(EIID_ICookiePolicy);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
CAR_INTERFACE("2A118A28-8452-371B-66F4-C16AE307861A")
IHttpClientParams : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpClientParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpClientParams*)pObj->Probe(EIID_IHttpClientParams);
    }

    static CARAPI_(IHttpClientParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpClientParams*)pObj->Probe(EIID_IHttpClientParams);
    }

    virtual CARAPI IsRedirecting(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Boolean * isRedirecting) = 0;

    virtual CARAPI SetRedirecting(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Boolean value) = 0;

    virtual CARAPI IsAuthenticating(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Boolean * isAuthenticating) = 0;

    virtual CARAPI SetAuthenticating(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Boolean value) = 0;

    virtual CARAPI GetCookiePolicy(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS String * cookiePolicy) = 0;

    virtual CARAPI SetCookiePolicy(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ const _ELASTOS String& cookiePolicy) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
CAR_INTERFACE("553B2F45-0312-CB96-8868-DE71E307861A")
IClientContext : public IInterface
{
    static const _ELASTOS String COOKIESPEC_REGISTRY;
    static const _ELASTOS String AUTHSCHEME_REGISTRY;
    static const _ELASTOS String COOKIE_STORE;
    static const _ELASTOS String COOKIE_SPEC;
    static const _ELASTOS String COOKIE_ORIGIN;
    static const _ELASTOS String CREDS_PROVIDER;
    static const _ELASTOS String TARGET_AUTH_STATE;
    static const _ELASTOS String PROXY_AUTH_STATE;
    static const _ELASTOS String AUTH_SCHEME_PREF;
    static const _ELASTOS String USER_TOKEN;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientContext*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientContext*)pObj->Probe(EIID_IClientContext);
    }

    static CARAPI_(IClientContext*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientContext*)pObj->Probe(EIID_IClientContext);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
CAR_INTERFACE("D98A985C-0312-CB96-8868-DE718348377C")
IClientContextConfigurer : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientContextConfigurer*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientContextConfigurer*)pObj->Probe(EIID_IClientContextConfigurer);
    }

    static CARAPI_(IClientContextConfigurer*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientContextConfigurer*)pObj->Probe(EIID_IClientContextConfigurer);
    }

    virtual CARAPI SetCookieSpecRegistry(
        /* [in] */ Org::Apache::Http::Cookie::ICookieSpecRegistry * registry) = 0;

    virtual CARAPI SetAuthSchemeRegistry(
        /* [in] */ Org::Apache::Http::Auth::IAuthSchemeRegistry * registry) = 0;

    virtual CARAPI SetCookieStore(
        /* [in] */ Org::Apache::Http::Client::ICookieStore * store) = 0;

    virtual CARAPI SetCredentialsProvider(
        /* [in] */ Org::Apache::Http::Client::ICredentialsProvider * provider) = 0;

    virtual CARAPI SetAuthSchemePref(
        /* [in] */ Elastos::Utility::IList * list) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("FCA09427-1F52-2B46-7F60-A8A1E2878219")
IClientConnectionManager : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientConnectionManager*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientConnectionManager*)pObj->Probe(EIID_IClientConnectionManager);
    }

    static CARAPI_(IClientConnectionManager*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientConnectionManager*)pObj->Probe(EIID_IClientConnectionManager);
    }

    virtual CARAPI GetSchemeRegistry(
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISchemeRegistry ** schemeRegistry) = 0;

    virtual CARAPI RequestConnection(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [in] */ IObject * state,
        /* [out] */ Org::Apache::Http::Conn::IClientConnectionRequest ** request) = 0;

    virtual CARAPI ReleaseConnection(
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Int64 validDuration,
        /* [in] */ Elastos::Utility::Concurrent::ITimeUnit * timeUnit) = 0;

    virtual CARAPI CloseIdleConnections(
        /* [in] */ _ELASTOS Int64 validDuration,
        /* [in] */ Elastos::Utility::Concurrent::ITimeUnit * timeUnit) = 0;

    virtual CARAPI CloseExpiredConnections() = 0;

    virtual CARAPI Shutdown() = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("BDFF403C-1F52-2B46-A1FD-C05043C50F05")
IClientConnectionManagerFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientConnectionManagerFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientConnectionManagerFactory*)pObj->Probe(EIID_IClientConnectionManagerFactory);
    }

    static CARAPI_(IClientConnectionManagerFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientConnectionManagerFactory*)pObj->Probe(EIID_IClientConnectionManagerFactory);
    }

    virtual CARAPI NewInstance(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ Org::Apache::Http::Conn::Scheme::ISchemeRegistry * schemeRegistry,
        /* [out] */ Org::Apache::Http::Conn::IClientConnectionManager ** manager) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("096C6322-1F52-5146-F3FF-C05043C50F05")
IClientConnectionOperator : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientConnectionOperator*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientConnectionOperator*)pObj->Probe(EIID_IClientConnectionOperator);
    }

    static CARAPI_(IClientConnectionOperator*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientConnectionOperator*)pObj->Probe(EIID_IClientConnectionOperator);
    }

    virtual CARAPI CreateConnection(
        /* [out] */ Org::Apache::Http::Conn::IOperatedClientConnection ** connection) = 0;

    virtual CARAPI OpenConnection(
        /* [in] */ Org::Apache::Http::Conn::IOperatedClientConnection * conn,
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * loc,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

    virtual CARAPI UpdateSecureConnection(
        /* [in] */ Org::Apache::Http::Conn::IOperatedClientConnection * conn,
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("4E64473F-1F52-8246-7F60-A8A1E2878219")
IClientConnectionRequest : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientConnectionRequest*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientConnectionRequest*)pObj->Probe(EIID_IClientConnectionRequest);
    }

    static CARAPI_(IClientConnectionRequest*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientConnectionRequest*)pObj->Probe(EIID_IClientConnectionRequest);
    }

    virtual CARAPI GetConnection(
        /* [in] */ _ELASTOS Int64 timeout,
        /* [in] */ Elastos::Utility::Concurrent::ITimeUnit * tunit,
        /* [out] */ Org::Apache::Http::Conn::IManagedClientConnection ** connection) = 0;

    virtual CARAPI AbortRequest() = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("04634635-2312-280A-50CC-50229BC40D14")
IConnectionKeepAliveStrategy : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnectionKeepAliveStrategy*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnectionKeepAliveStrategy*)pObj->Probe(EIID_IConnectionKeepAliveStrategy);
    }

    static CARAPI_(IConnectionKeepAliveStrategy*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnectionKeepAliveStrategy*)pObj->Probe(EIID_IConnectionKeepAliveStrategy);
    }

    virtual CARAPI GetKeepAliveDuration(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ _ELASTOS Int64 * duration) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("92084F39-A312-1DBD-6AB0-50A1E2FE0F0C")
IConnectionReleaseTrigger : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnectionReleaseTrigger*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnectionReleaseTrigger*)pObj->Probe(EIID_IConnectionReleaseTrigger);
    }

    static CARAPI_(IConnectionReleaseTrigger*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnectionReleaseTrigger*)pObj->Probe(EIID_IConnectionReleaseTrigger);
    }

    virtual CARAPI ReleaseConnection() = 0;

    virtual CARAPI AbortConnection() = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("792C5427-0392-2919-38A0-886123FF3FD9")
IEofSensorInputStream : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IEofSensorInputStream*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEofSensorInputStream*)pObj->Probe(EIID_IEofSensorInputStream);
    }

    static CARAPI_(IEofSensorInputStream*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEofSensorInputStream*)pObj->Probe(EIID_IEofSensorInputStream);
    }

    virtual CARAPI IsReadAllowed(
        /* [out] */ _ELASTOS Boolean * isReadAllowed) = 0;

    virtual CARAPI CheckEOF(
        /* [in] */ _ELASTOS Int32 eof) = 0;

    virtual CARAPI CheckClose() = 0;

    virtual CARAPI CheckAbort() = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("A2B04913-2392-1CA7-1ADB-720D92B7B9A2")
IEofSensorWatcher : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IEofSensorWatcher*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEofSensorWatcher*)pObj->Probe(EIID_IEofSensorWatcher);
    }

    static CARAPI_(IEofSensorWatcher*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IEofSensorWatcher*)pObj->Probe(EIID_IEofSensorWatcher);
    }

    virtual CARAPI EofDetected(
        /* [in] */ Elastos::IO::IInputStream * wrapped,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI StreamClosed(
        /* [in] */ Elastos::IO::IInputStream * wrapped,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI StreamAbort(
        /* [in] */ Elastos::IO::IInputStream * wrapped,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("460DBC3D-0592-3112-48A8-D0DF87D10F0C")
IManagedClientConnection : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IManagedClientConnection*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IManagedClientConnection*)pObj->Probe(EIID_IManagedClientConnection);
    }

    static CARAPI_(IManagedClientConnection*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IManagedClientConnection*)pObj->Probe(EIID_IManagedClientConnection);
    }

    virtual CARAPI IsSecure(
        /* [out] */ _ELASTOS Boolean * isSecure) = 0;

    virtual CARAPI GetRoute(
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute ** route) = 0;

    virtual CARAPI GetSSLSession(
        /* [out] */ Elastosx::Net::Ssl::ISSLSession ** session) = 0;

    virtual CARAPI Open(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

    virtual CARAPI TunnelTarget(
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

    virtual CARAPI TunnelProxy(
        /* [in] */ Org::Apache::Http::IHttpHost * next,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

    virtual CARAPI LayerProtocol(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

    virtual CARAPI MarkReusable() = 0;

    virtual CARAPI UnmarkReusable() = 0;

    virtual CARAPI IsMarkedReusable(
        /* [out] */ _ELASTOS Boolean * isMarked) = 0;

    virtual CARAPI SetState(
        /* [in] */ IObject * state) = 0;

    virtual CARAPI GetState(
        /* [out] */ IObject ** state) = 0;

    virtual CARAPI SetIdleDuration(
        /* [in] */ _ELASTOS Int64 duration,
        /* [in] */ Elastos::Utility::Concurrent::ITimeUnit * unit) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("CD6D3247-8592-9FDC-FFED-CC6052220719")
IMultihomePlainSocketFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IMultihomePlainSocketFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IMultihomePlainSocketFactory*)pObj->Probe(EIID_IMultihomePlainSocketFactory);
    }

    static CARAPI_(IMultihomePlainSocketFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IMultihomePlainSocketFactory*)pObj->Probe(EIID_IMultihomePlainSocketFactory);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("71004852-8592-9FDC-FFED-CC6052220719")
IMultihomePlainSocketFactoryHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IMultihomePlainSocketFactoryHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IMultihomePlainSocketFactoryHelper*)pObj->Probe(EIID_IMultihomePlainSocketFactoryHelper);
    }

    static CARAPI_(IMultihomePlainSocketFactoryHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IMultihomePlainSocketFactoryHelper*)pObj->Probe(EIID_IMultihomePlainSocketFactoryHelper);
    }

    virtual CARAPI GetSocketFactory(
        /* [out] */ Org::Apache::Http::Conn::IMultihomePlainSocketFactory ** factory) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("E8506725-5452-7DFD-18FD-C05043C50F05")
IOperatedClientConnection : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IOperatedClientConnection*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IOperatedClientConnection*)pObj->Probe(EIID_IOperatedClientConnection);
    }

    static CARAPI_(IOperatedClientConnection*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IOperatedClientConnection*)pObj->Probe(EIID_IOperatedClientConnection);
    }

    virtual CARAPI GetTargetHost(
        /* [out] */ Org::Apache::Http::IHttpHost ** host) = 0;

    virtual CARAPI IsSecure(
        /* [out] */ _ELASTOS Boolean * isSecure) = 0;

    virtual CARAPI GetSocket(
        /* [out] */ Elastos::Net::ISocket ** socket) = 0;

    virtual CARAPI Opening(
        /* [in] */ Elastos::Net::ISocket * sock,
        /* [in] */ Org::Apache::Http::IHttpHost * target) = 0;

    virtual CARAPI OpenCompleted(
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

    virtual CARAPI Update(
        /* [in] */ Elastos::Net::ISocket * sock,
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("D5A64C3F-0312-3119-6230-C24A86448C1F")
IConnConnectionParamBean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnConnectionParamBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnConnectionParamBean*)pObj->Probe(EIID_IConnConnectionParamBean);
    }

    static CARAPI_(IConnConnectionParamBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnConnectionParamBean*)pObj->Probe(EIID_IConnConnectionParamBean);
    }

    virtual CARAPI SetMaxStatusLineGarbage(
        /* [in] */ _ELASTOS Int32 maxStatusLineGarbage) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("0AA6323F-0312-3119-6230-CA10D4C60F0C")
IConnConnectionPNames : public IInterface
{
    static const _ELASTOS String MAX_STATUS_LINE_GARBAGE;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnConnectionPNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnConnectionPNames*)pObj->Probe(EIID_IConnConnectionPNames);
    }

    static CARAPI_(IConnConnectionPNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnConnectionPNames*)pObj->Probe(EIID_IConnConnectionPNames);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("44B7683B-0312-3119-62AC-C44A86448C1F")
IConnManagerParamBean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnManagerParamBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnManagerParamBean*)pObj->Probe(EIID_IConnManagerParamBean);
    }

    static CARAPI_(IConnManagerParamBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnManagerParamBean*)pObj->Probe(EIID_IConnManagerParamBean);
    }

    virtual CARAPI SetTimeout(
        /* [in] */ _ELASTOS Int64 timeout) = 0;

    virtual CARAPI SetMaxTotalConnections(
        /* [in] */ _ELASTOS Int32 maxConnections) = 0;

    virtual CARAPI SetConnectionsPerRoute(
        /* [in] */ Org::Apache::Http::Conn::Params::IConnPerRouteBean * connPerRoute) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("20CEA121-0312-3119-62AC-C46AE307861A")
IConnManagerParams : public IInterface
{
    static const _ELASTOS Int32 DEFAULT_MAX_TOTAL_CONNECTIONS = 20;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnManagerParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnManagerParams*)pObj->Probe(EIID_IConnManagerParams);
    }

    static CARAPI_(IConnManagerParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnManagerParams*)pObj->Probe(EIID_IConnManagerParams);
    }

    virtual CARAPI GetTimeout(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Int64 * timeout) = 0;

    virtual CARAPI SetTimeout(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Int64 timeout) = 0;

    virtual CARAPI SetMaxConnectionsPerRoute(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ Org::Apache::Http::Conn::Params::IConnPerRoute * connPerRoute) = 0;

    virtual CARAPI GetMaxConnectionsPerRoute(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Conn::Params::IConnPerRoute ** route) = 0;

    virtual CARAPI SetMaxTotalConnections(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Int32 maxTotalConnections) = 0;

    virtual CARAPI GetMaxTotalConnections(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Int32 * number) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("6F972F26-0312-3119-62AC-CC10D4C60F0C")
IConnManagerPNames : public IInterface
{
    static const _ELASTOS String TIMEOUT;
    static const _ELASTOS String MAX_CONNECTIONS_PER_ROUTE;
    static const _ELASTOS String MAX_TOTAL_CONNECTIONS;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnManagerPNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnManagerPNames*)pObj->Probe(EIID_IConnManagerPNames);
    }

    static CARAPI_(IConnManagerPNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnManagerPNames*)pObj->Probe(EIID_IConnManagerPNames);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("AEA13810-2312-71C7-86D6-9B8CDFE88FD5")
IConnPerRoute : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnPerRoute*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnPerRoute*)pObj->Probe(EIID_IConnPerRoute);
    }

    static CARAPI_(IConnPerRoute*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnPerRoute*)pObj->Probe(EIID_IConnPerRoute);
    }

    virtual CARAPI GetMaxForRoute(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ _ELASTOS Int32 * number) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("21456D45-9112-1918-9E6D-E0AA7901B01F")
IConnPerRouteBean : public IInterface
{
    static const _ELASTOS Int32 DEFAULT_MAX_CONNECTIONS_PER_ROUTE = 2;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnPerRouteBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnPerRouteBean*)pObj->Probe(EIID_IConnPerRouteBean);
    }

    static CARAPI_(IConnPerRouteBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnPerRouteBean*)pObj->Probe(EIID_IConnPerRouteBean);
    }

    virtual CARAPI GetDefaultMax(
        /* [out] */ _ELASTOS Int32 * max) = 0;

    virtual CARAPI SetDefaultMaxPerRoute(
        /* [in] */ _ELASTOS Int32 max) = 0;

    virtual CARAPI SetMaxForRoute(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [in] */ _ELASTOS Int32 max) = 0;

    virtual CARAPI SetMaxForRoutes(
        /* [in] */ Elastos::Utility::IMap * map) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("DC235C07-2312-F1C7-26E3-379A9135092F")
IConnRouteParamBean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnRouteParamBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnRouteParamBean*)pObj->Probe(EIID_IConnRouteParamBean);
    }

    static CARAPI_(IConnRouteParamBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnRouteParamBean*)pObj->Probe(EIID_IConnRouteParamBean);
    }

    virtual CARAPI SetDefaultProxy(
        /* [in] */ Org::Apache::Http::IHttpHost * defaultProxy) = 0;

    virtual CARAPI SetLocalAddress(
        /* [in] */ Elastos::Net::IInetAddress * address) = 0;

    virtual CARAPI SetForcedRoute(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("72B79805-2312-F1C7-26E3-379A913509DB")
IConnRouteParams : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnRouteParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnRouteParams*)pObj->Probe(EIID_IConnRouteParams);
    }

    static CARAPI_(IConnRouteParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnRouteParams*)pObj->Probe(EIID_IConnRouteParams);
    }

    virtual CARAPI GetDefaultProxy(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::IHttpHost ** proxy) = 0;

    virtual CARAPI SetDefaultProxy(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy) = 0;

    virtual CARAPI GetForcedRoute(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute ** route) = 0;

    virtual CARAPI SetForcedRoute(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route) = 0;

    virtual CARAPI GetLocalAddress(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Net::IInetAddress ** loc) = 0;

    virtual CARAPI SetLocalAddress(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ Elastos::Net::IInetAddress * loc) = 0;

    virtual CARAPI GetNoHost(
        /* [out] */ Org::Apache::Http::IHttpHost ** host) = 0;

    virtual CARAPI GetNoRoute(
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute ** route) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("D7DB2D47-9112-1B18-B86A-CED065A78D1F")
IConnRoutePNames : public IInterface
{
    static const _ELASTOS String DEFAULT_PROXY;
    static const _ELASTOS String LOCAL_ADDRESS;
    static const _ELASTOS String FORCED_ROUTE;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IConnRoutePNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnRoutePNames*)pObj->Probe(EIID_IConnRoutePNames);
    }

    static CARAPI_(IConnRoutePNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IConnRoutePNames*)pObj->Probe(EIID_IConnRoutePNames);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("5C674F5E-82D2-0345-3770-D59C84D8D51F")
IBasicRouteDirector : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicRouteDirector*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicRouteDirector*)pObj->Probe(EIID_IBasicRouteDirector);
    }

    static CARAPI_(IBasicRouteDirector*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicRouteDirector*)pObj->Probe(EIID_IBasicRouteDirector);
    }

    virtual CARAPI FirstStep(
        /* [in] */ Org::Apache::Http::Conn::Routing::IRouteInfo * plan,
        /* [out] */ _ELASTOS Int32 * step) = 0;

    virtual CARAPI DirectStep(
        /* [in] */ Org::Apache::Http::Conn::Routing::IRouteInfo * plan,
        /* [in] */ Org::Apache::Http::Conn::Routing::IRouteInfo * fact,
        /* [out] */ _ELASTOS Int32 * step) = 0;

    virtual CARAPI ProxiedStep(
        /* [in] */ Org::Apache::Http::Conn::Routing::IRouteInfo * plan,
        /* [in] */ Org::Apache::Http::Conn::Routing::IRouteInfo * fact,
        /* [out] */ _ELASTOS Int32 * step) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("DF832805-7452-F3DF-26E3-37FA63B5FA2B")
IHttpRoute : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRoute*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRoute*)pObj->Probe(EIID_IHttpRoute);
    }

    static CARAPI_(IHttpRoute*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRoute*)pObj->Probe(EIID_IHttpRoute);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("6B7A3846-0452-33D8-3670-D59C84D8D51F")
IHttpRouteDirector : public IInterface
{
    static const _ELASTOS Int32 UNREACHABLE = -1;
    static const _ELASTOS Int32 COMPLETE = 0;
    static const _ELASTOS Int32 CONNECT_TARGET = 1;
    static const _ELASTOS Int32 CONNECT_PROXY = 2;
    static const _ELASTOS Int32 TUNNEL_TARGET = 3;
    static const _ELASTOS Int32 TUNNEL_PROXY = 4;
    static const _ELASTOS Int32 LAYER_PROTOCOL = 5;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRouteDirector*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRouteDirector*)pObj->Probe(EIID_IHttpRouteDirector);
    }

    static CARAPI_(IHttpRouteDirector*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRouteDirector*)pObj->Probe(EIID_IHttpRouteDirector);
    }

    virtual CARAPI NextStep(
        /* [in] */ Org::Apache::Http::Conn::Routing::IRouteInfo * plan,
        /* [in] */ Org::Apache::Http::Conn::Routing::IRouteInfo * fact,
        /* [out] */ _ELASTOS Int32 * step) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("28B63D01-7452-F3DF-26E3-379ABD641CA3")
IHttpRoutePlanner : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRoutePlanner*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRoutePlanner*)pObj->Probe(EIID_IHttpRoutePlanner);
    }

    static CARAPI_(IHttpRoutePlanner*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRoutePlanner*)pObj->Probe(EIID_IHttpRoutePlanner);
    }

    virtual CARAPI DetermineRoute(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute ** route) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("BBB69C0D-26D2-37E3-2AC5-A9FC63B5FA2B")
IRouteInfo : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IRouteInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRouteInfo*)pObj->Probe(EIID_IRouteInfo);
    }

    static CARAPI_(IRouteInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRouteInfo*)pObj->Probe(EIID_IRouteInfo);
    }

    virtual CARAPI GetTargetHost(
        /* [out] */ Org::Apache::Http::IHttpHost ** host) = 0;

    virtual CARAPI GetLocalAddress(
        /* [out] */ Elastos::Net::IInetAddress ** addr) = 0;

    virtual CARAPI GetHopCount(
        /* [out] */ _ELASTOS Int32 * count) = 0;

    virtual CARAPI GetHopTarget(
        /* [in] */ _ELASTOS Int32 hop,
        /* [out] */ Org::Apache::Http::IHttpHost ** target) = 0;

    virtual CARAPI GetProxyHost(
        /* [out] */ Org::Apache::Http::IHttpHost ** proxy) = 0;

    virtual CARAPI GetTunnelType(
        /* [out] */ Org::Apache::Http::Conn::Routing::TunnelType * type) = 0;

    virtual CARAPI IsTunnelled(
        /* [out] */ _ELASTOS Boolean * isTunnelled) = 0;

    virtual CARAPI GetLayerType(
        /* [out] */ Org::Apache::Http::Conn::Routing::LayerType * type) = 0;

    virtual CARAPI IsLayered(
        /* [out] */ _ELASTOS Boolean * isLayered) = 0;

    virtual CARAPI IsSecure(
        /* [out] */ _ELASTOS Boolean * isSecure) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("977C7A02-26D2-37E3-DAD5-A4E9A2F58FD5")
IRouteTracker : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IRouteTracker*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRouteTracker*)pObj->Probe(EIID_IRouteTracker);
    }

    static CARAPI_(IRouteTracker*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRouteTracker*)pObj->Probe(EIID_IRouteTracker);
    }

    virtual CARAPI ConnectTarget(
        /* [in] */ _ELASTOS Boolean secure) = 0;

    virtual CARAPI ConnectProxy(
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure) = 0;

    virtual CARAPI TunnelTarget(
        /* [in] */ _ELASTOS Boolean secure) = 0;

    virtual CARAPI TunnelProxy(
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure) = 0;

    virtual CARAPI LayerProtocol(
        /* [in] */ _ELASTOS Boolean secure) = 0;

    virtual CARAPI IsConnected(
        /* [out] */ _ELASTOS Boolean * isConnected) = 0;

    virtual CARAPI ToRoute(
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute ** route) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("1639355B-0452-5DAC-76A6-79FCC2778D1F")
IHostNameResolver : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHostNameResolver*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHostNameResolver*)pObj->Probe(EIID_IHostNameResolver);
    }

    static CARAPI_(IHostNameResolver*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHostNameResolver*)pObj->Probe(EIID_IHostNameResolver);
    }

    virtual CARAPI Resolve(
        /* [in] */ const _ELASTOS String& hostname,
        /* [out] */ Elastos::Net::IInetAddress ** addr) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("19BF3E3C-0552-3C12-EEEB-2F0DED07861A")
ILayeredSocketFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ILayeredSocketFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ILayeredSocketFactory*)pObj->Probe(EIID_ILayeredSocketFactory);
    }

    static CARAPI_(ILayeredSocketFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ILayeredSocketFactory*)pObj->Probe(EIID_ILayeredSocketFactory);
    }

    virtual CARAPI CreateSocket(
        /* [in] */ Elastos::Net::ISocket * sock,
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ _ELASTOS Boolean autoClose,
        /* [out] */ Elastos::Net::ISocket ** socket) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("1E4F3025-8652-2417-58C4-280DED07861A")
IPlainSocketFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPlainSocketFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPlainSocketFactory*)pObj->Probe(EIID_IPlainSocketFactory);
    }

    static CARAPI_(IPlainSocketFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPlainSocketFactory*)pObj->Probe(EIID_IPlainSocketFactory);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("EFB3462B-8652-2417-58C4-280D2D028A17")
IPlainSocketFactoryHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPlainSocketFactoryHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPlainSocketFactoryHelper*)pObj->Probe(EIID_IPlainSocketFactoryHelper);
    }

    static CARAPI_(IPlainSocketFactoryHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPlainSocketFactoryHelper*)pObj->Probe(EIID_IPlainSocketFactoryHelper);
    }

    virtual CARAPI GetSocketFactory(
        /* [out] */ Org::Apache::Http::Conn::Scheme::IPlainSocketFactory ** socketFactory) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("31775D15-6712-28AE-8CFE-58ADFECA4C9A")
IScheme : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IScheme*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IScheme*)pObj->Probe(EIID_IScheme);
    }

    static CARAPI_(IScheme*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IScheme*)pObj->Probe(EIID_IScheme);
    }

    virtual CARAPI GetDefaultPort(
        /* [out] */ _ELASTOS Int32 * port) = 0;

    virtual CARAPI GetSocketFactory(
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory ** socketFactory) = 0;

    virtual CARAPI GetName(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI IsLayered(
        /* [out] */ _ELASTOS Boolean * isLayered) = 0;

    virtual CARAPI ResolvePort(
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ _ELASTOS Int32 * resolvedPort) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("C7086947-0712-3B51-D3C0-830CF807861A")
ISchemeRegistry : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISchemeRegistry*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISchemeRegistry*)pObj->Probe(EIID_ISchemeRegistry);
    }

    static CARAPI_(ISchemeRegistry*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISchemeRegistry*)pObj->Probe(EIID_ISchemeRegistry);
    }

    virtual CARAPI GetScheme(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::Conn::Scheme::IScheme ** scheme) = 0;

    virtual CARAPI GetScheme(
        /* [in] */ Org::Apache::Http::IHttpHost * host,
        /* [out] */ Org::Apache::Http::Conn::Scheme::IScheme ** scheme) = 0;

    virtual CARAPI Get(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::Conn::Scheme::IScheme ** scheme) = 0;

    virtual CARAPI Register(
        /* [in] */ Org::Apache::Http::Conn::Scheme::IScheme * sch,
        /* [out] */ Org::Apache::Http::Conn::Scheme::IScheme ** scheme) = 0;

    virtual CARAPI Unregister(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::Conn::Scheme::IScheme ** scheme) = 0;

    virtual CARAPI GetSchemeNames(
        /* [out] */ Elastos::Utility::IList ** names) = 0;

    virtual CARAPI SetItems(
        /* [in] */ Elastos::Utility::IMap * map) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("A69C4C36-6952-3F68-30D4-50F143C10C12")
ISocketFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISocketFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISocketFactory*)pObj->Probe(EIID_ISocketFactory);
    }

    static CARAPI_(ISocketFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISocketFactory*)pObj->Probe(EIID_ISocketFactory);
    }

    virtual CARAPI CreateSocket(
        /* [out] */ Elastos::Net::ISocket ** socket) = 0;

    virtual CARAPI ConnectSocket(
        /* [in] */ Elastos::Net::ISocket * sock,
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ Elastos::Net::IInetAddress * localAddress,
        /* [in] */ _ELASTOS Int32 localPort,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Net::ISocket ** socket) = 0;

    virtual CARAPI IsSecure(
        /* [in] */ Elastos::Net::ISocket * sock,
        /* [out] */ _ELASTOS Boolean * isSecure) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("C7583142-8292-9012-EFBE-FAF08C45B767")
IAbstractVerifier : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAbstractVerifier*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAbstractVerifier*)pObj->Probe(EIID_IAbstractVerifier);
    }

    static CARAPI_(IAbstractVerifier*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAbstractVerifier*)pObj->Probe(EIID_IAbstractVerifier);
    }

    virtual CARAPI Verify(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS String> * cns,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS String> * subjectAlts,
        /* [in] */ _ELASTOS Boolean strictWithSubDomains) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("374C5128-0712-150E-4A43-FB81A1868A1F")
ISSLSocketFactory : public IInterface
{
    static const _ELASTOS String TLS;
    static const _ELASTOS String SSL;
    static const _ELASTOS String SSLV2;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISSLSocketFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISSLSocketFactory*)pObj->Probe(EIID_ISSLSocketFactory);
    }

    static CARAPI_(ISSLSocketFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISSLSocketFactory*)pObj->Probe(EIID_ISSLSocketFactory);
    }

    virtual CARAPI SetHostnameVerifier(
        /* [in] */ Org::Apache::Http::Conn::SSL::IX509HostnameVerifier * hostnameVerifier) = 0;

    virtual CARAPI GetHostnameVerifier(
        /* [out] */ Org::Apache::Http::Conn::SSL::IX509HostnameVerifier ** hostnameVerifier) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("ADF3993D-0712-150E-4A43-8B80E2C58CFB")
ISSLSocketFactoryHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISSLSocketFactoryHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISSLSocketFactoryHelper*)pObj->Probe(EIID_ISSLSocketFactoryHelper);
    }

    static CARAPI_(ISSLSocketFactoryHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISSLSocketFactoryHelper*)pObj->Probe(EIID_ISSLSocketFactoryHelper);
    }

    virtual CARAPI GetAllowAllHostnameVerifier(
        /* [out] */ Org::Apache::Http::Conn::SSL::IX509HostnameVerifier ** verifier) = 0;

    virtual CARAPI GetBrowserCompatibleHostnameVerifier(
        /* [out] */ Org::Apache::Http::Conn::SSL::IX509HostnameVerifier ** verifier) = 0;

    virtual CARAPI GetStrictHostnameVerifier(
        /* [out] */ Org::Apache::Http::Conn::SSL::IX509HostnameVerifier ** verifier) = 0;

    virtual CARAPI GetSocketFactory(
        /* [out] */ Org::Apache::Http::Conn::SSL::ISSLSocketFactory ** factory) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("D35B4108-5852-4900-24DB-774CC2E887D6")
IX509HostnameVerifier : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IX509HostnameVerifier*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IX509HostnameVerifier*)pObj->Probe(EIID_IX509HostnameVerifier);
    }

    static CARAPI_(IX509HostnameVerifier*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IX509HostnameVerifier*)pObj->Probe(EIID_IX509HostnameVerifier);
    }

    virtual CARAPI Verify(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ Elastosx::Net::Ssl::ISSLSocket * ssl) = 0;

    virtual CARAPI Verify(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ Elastos::Security::Cert::IX509Certificate * cert) = 0;

    virtual CARAPI Verify(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS String> * cns,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS String> * subjectAlts) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("9F324217-F312-68B2-7C33-B2ECB2E88FD5")
IClientCookie : public IInterface
{
    static const _ELASTOS String VERSION_ATTR;
    static const _ELASTOS String PATH_ATTR;
    static const _ELASTOS String DOMAIN_ATTR;
    static const _ELASTOS String MAX_AGE_ATTR;
    static const _ELASTOS String SECURE_ATTR;
    static const _ELASTOS String COMMENT_ATTR;
    static const _ELASTOS String EXPIRES_ATTR;
    static const _ELASTOS String PORT_ATTR;
    static const _ELASTOS String COMMENTURL_ATTR;
    static const _ELASTOS String DISCARD_ATTR;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IClientCookie*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientCookie*)pObj->Probe(EIID_IClientCookie);
    }

    static CARAPI_(IClientCookie*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IClientCookie*)pObj->Probe(EIID_IClientCookie);
    }

    virtual CARAPI GetAttribute(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS String * attr) = 0;

    virtual CARAPI ContainsAttribute(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("7CA69107-2312-2ECB-8BFE-58ADFECA4C9A")
ICookie : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookie*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookie*)pObj->Probe(EIID_ICookie);
    }

    static CARAPI_(ICookie*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookie*)pObj->Probe(EIID_ICookie);
    }

    virtual CARAPI GetName(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetValue(
        /* [out] */ _ELASTOS String * value) = 0;

    virtual CARAPI GetComment(
        /* [out] */ _ELASTOS String * comment) = 0;

    virtual CARAPI GetCommentURL(
        /* [out] */ _ELASTOS String * commentURL) = 0;

    virtual CARAPI GetExpiryDate(
        /* [out] */ Elastos::Utility::IDate ** date) = 0;

    virtual CARAPI IsPersistent(
        /* [out] */ _ELASTOS Boolean * isPersistent) = 0;

    virtual CARAPI GetDomain(
        /* [out] */ _ELASTOS String * domainAttr) = 0;

    virtual CARAPI GetPath(
        /* [out] */ _ELASTOS String * path) = 0;

    virtual CARAPI GetPorts(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Int32> ** ports) = 0;

    virtual CARAPI IsSecure(
        /* [out] */ _ELASTOS Boolean * isSecure) = 0;

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

    virtual CARAPI IsExpired(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ _ELASTOS Boolean * isExpired) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("A3D0413D-0312-3219-5CB0-40C1E5DC0F0C")
ICookieAttributeHandler : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookieAttributeHandler*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieAttributeHandler*)pObj->Probe(EIID_ICookieAttributeHandler);
    }

    static CARAPI_(ICookieAttributeHandler*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieAttributeHandler*)pObj->Probe(EIID_ICookieAttributeHandler);
    }

    virtual CARAPI Parse(
        /* [in] */ Org::Apache::Http::Cookie::ISetCookie * cookie,
        /* [in] */ const _ELASTOS String& value) = 0;

    virtual CARAPI Validate(
        /* [in] */ Org::Apache::Http::Cookie::ICookie * cookie,
        /* [in] */ Org::Apache::Http::Cookie::ICookieOrigin * origin) = 0;

    virtual CARAPI Match(
        /* [in] */ Org::Apache::Http::Cookie::ICookie * cookie,
        /* [in] */ Org::Apache::Http::Cookie::ICookieOrigin * origin,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("70CC420A-2312-2ECB-8B62-35ABB2F18FD5")
ICookieOrigin : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookieOrigin*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieOrigin*)pObj->Probe(EIID_ICookieOrigin);
    }

    static CARAPI_(ICookieOrigin*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieOrigin*)pObj->Probe(EIID_ICookieOrigin);
    }

    virtual CARAPI GetHost(
        /* [out] */ _ELASTOS String * host) = 0;

    virtual CARAPI GetPath(
        /* [out] */ _ELASTOS String * path) = 0;

    virtual CARAPI GetPort(
        /* [out] */ _ELASTOS Int32 * port) = 0;

    virtual CARAPI IsSecure(
        /* [out] */ _ELASTOS Boolean * isSecure) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("883D5C16-2312-2ECB-8B72-336AFE58ADFE")
ICookieSpec : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookieSpec*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpec*)pObj->Probe(EIID_ICookieSpec);
    }

    static CARAPI_(ICookieSpec*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpec*)pObj->Probe(EIID_ICookieSpec);
    }

    virtual CARAPI GetVersion(
        /* [out] */ _ELASTOS Int32 * ver) = 0;

    virtual CARAPI Parse(
        /* [in] */ Org::Apache::Http::IHeader * header,
        /* [in] */ Org::Apache::Http::Cookie::ICookieOrigin * origin,
        /* [out] */ Elastos::Utility::IList ** cookies) = 0;

    virtual CARAPI Validate(
        /* [in] */ Org::Apache::Http::Cookie::ICookie * cookie,
        /* [in] */ Org::Apache::Http::Cookie::ICookieOrigin * origin) = 0;

    virtual CARAPI Match(
        /* [in] */ Org::Apache::Http::Cookie::ICookie * cookie,
        /* [in] */ Org::Apache::Http::Cookie::ICookieOrigin * origin,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI FormatCookies(
        /* [in] */ Elastos::Utility::IList * cookies,
        /* [out] */ Elastos::Utility::IList ** headers) = 0;

    virtual CARAPI GetVersionHeader(
        /* [out] */ Org::Apache::Http::IHeader ** header) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("2C0F350E-2312-2ECB-8B72-336A3EA479CB")
ICookieSpecFactory : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookieSpecFactory*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpecFactory*)pObj->Probe(EIID_ICookieSpecFactory);
    }

    static CARAPI_(ICookieSpecFactory*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpecFactory*)pObj->Probe(EIID_ICookieSpecFactory);
    }

    virtual CARAPI NewInstance(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Cookie::ICookieSpec ** spec) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("3F806B4B-1152-2E19-0C72-086B220D3CC8")
ICookieSpecRegistry : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookieSpecRegistry*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpecRegistry*)pObj->Probe(EIID_ICookieSpecRegistry);
    }

    static CARAPI_(ICookieSpecRegistry*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpecRegistry*)pObj->Probe(EIID_ICookieSpecRegistry);
    }

    virtual CARAPI Register(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Cookie::ICookieSpecFactory * factory) = 0;

    virtual CARAPI Unregister(
        /* [in] */ const _ELASTOS String& id) = 0;

    virtual CARAPI GetCookieSpec(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Cookie::ICookieSpec ** spec) = 0;

    virtual CARAPI GetCookieSpec(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::Cookie::ICookieSpec ** spec) = 0;

    virtual CARAPI GetSpecNames(
        /* [out] */ Elastos::Utility::IList ** names) = 0;

    virtual CARAPI SetItems(
        /* [in] */ Elastos::Utility::IMap * map) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("D4B4641F-8712-8CDE-2CBB-2CFA63B5FA2B")
ISetCookie : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISetCookie*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISetCookie*)pObj->Probe(EIID_ISetCookie);
    }

    static CARAPI_(ISetCookie*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISetCookie*)pObj->Probe(EIID_ISetCookie);
    }

    virtual CARAPI SetValue(
        /* [in] */ const _ELASTOS String& value) = 0;

    virtual CARAPI SetComment(
        /* [in] */ const _ELASTOS String& comment) = 0;

    virtual CARAPI SetExpiryDate(
        /* [in] */ Elastos::Utility::IDate * expiryDate) = 0;

    virtual CARAPI SetDomain(
        /* [in] */ const _ELASTOS String& domainAttr) = 0;

    virtual CARAPI SetPath(
        /* [in] */ const _ELASTOS String& path) = 0;

    virtual CARAPI SetSecure(
        /* [in] */ _ELASTOS Boolean secure) = 0;

    virtual CARAPI SetVersion(
        /* [in] */ _ELASTOS Int32 ver) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("90ED4208-8712-8CDE-2CBB-2C2AFC58ADFE")
ISetCookie2 : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISetCookie2*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISetCookie2*)pObj->Probe(EIID_ISetCookie2);
    }

    static CARAPI_(ISetCookie2*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISetCookie2*)pObj->Probe(EIID_ISetCookie2);
    }

    virtual CARAPI SetCommentURL(
        /* [in] */ const _ELASTOS String& commentURL) = 0;

    virtual CARAPI SetPorts(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * ports) = 0;

    virtual CARAPI SetDiscard(
        /* [in] */ _ELASTOS Boolean discard) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("49781B0F-6712-58FD-ADFE-CA4C9A2BFA47")
ISM : public IInterface
{
    static const _ELASTOS String COOKIE;
    static const _ELASTOS String COOKIE2;
    static const _ELASTOS String SET_COOKIE;
    static const _ELASTOS String SET_COOKIE2;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISM*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISM*)pObj->Probe(EIID_ISM);
    }

    static CARAPI_(ISM*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISM*)pObj->Probe(EIID_ISM);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
namespace Params {
CAR_INTERFACE("7329511E-2312-2ECB-8B72-336A66644DC2")
ICookieSpecParamBean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookieSpecParamBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpecParamBean*)pObj->Probe(EIID_ICookieSpecParamBean);
    }

    static CARAPI_(ICookieSpecParamBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpecParamBean*)pObj->Probe(EIID_ICookieSpecParamBean);
    }

    virtual CARAPI SetDatePatterns(
        /* [in] */ Elastos::Utility::ICollection * patterns) = 0;

    virtual CARAPI SetSingleHeader(
        /* [in] */ _ELASTOS Boolean singleHeader) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
namespace Params {
CAR_INTERFACE("801E300E-2312-2ECB-8B72-336A661709A3")
ICookieSpecPNames : public IInterface
{
    static const _ELASTOS String DATE_PATTERNS;
    static const _ELASTOS String SINGLE_COOKIE_HEADER;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICookieSpecPNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpecPNames*)pObj->Probe(EIID_ICookieSpecPNames);
    }

    static CARAPI_(ICookieSpecPNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICookieSpecPNames*)pObj->Probe(EIID_ICookieSpecPNames);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("F4387549-8292-9012-EFBE-8A007BC6138C")
IAbstractHttpEntity : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IAbstractHttpEntity*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAbstractHttpEntity*)pObj->Probe(EIID_IAbstractHttpEntity);
    }

    static CARAPI_(IAbstractHttpEntity*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IAbstractHttpEntity*)pObj->Probe(EIID_IAbstractHttpEntity);
    }

    virtual CARAPI SetContentType(
        /* [in] */ Org::Apache::Http::IHeader * contentType) = 0;

    virtual CARAPI SetContentType(
        /* [in] */ const _ELASTOS String& ctString) = 0;

    virtual CARAPI SetContentEncoding(
        /* [in] */ Org::Apache::Http::IHeader * contentEncoding) = 0;

    virtual CARAPI SetContentEncoding(
        /* [in] */ const _ELASTOS String& ceString) = 0;

    virtual CARAPI SetChunked(
        /* [in] */ _ELASTOS Boolean b) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("67584251-82D2-0345-23C0-9EF104E30F0C")
IBasicHttpEntity : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicHttpEntity*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHttpEntity*)pObj->Probe(EIID_IBasicHttpEntity);
    }

    static CARAPI_(IBasicHttpEntity*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHttpEntity*)pObj->Probe(EIID_IBasicHttpEntity);
    }

    virtual CARAPI SetContentLength(
        /* [in] */ _ELASTOS Int64 len) = 0;

    virtual CARAPI SetContent(
        /* [in] */ Elastos::IO::IInputStream * instream) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("1A873D5F-1112-31CD-6E54-50569A4DA37C")
IContentLengthStrategy : public IInterface
{
    static const _ELASTOS Int32 IDENTITY = -1;
    static const _ELASTOS Int32 CHUNKED = -2;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IContentLengthStrategy*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IContentLengthStrategy*)pObj->Probe(EIID_IContentLengthStrategy);
    }

    static CARAPI_(IContentLengthStrategy*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IContentLengthStrategy*)pObj->Probe(EIID_IContentLengthStrategy);
    }

    virtual CARAPI DetermineLength(
        /* [in] */ Org::Apache::Http::IHttpMessage * message,
        /* [out] */ _ELASTOS Int64 * length) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("EB5D2F4D-1112-31CD-6E64-E0EB0B548D1F")
IContentProducer : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IContentProducer*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IContentProducer*)pObj->Probe(EIID_IContentProducer);
    }

    static CARAPI_(IContentProducer*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IContentProducer*)pObj->Probe(EIID_IContentProducer);
    }

    virtual CARAPI WriteTo(
        /* [in] */ Elastos::IO::IOutputStream * outstream) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Impl {
namespace Auth {
CAR_INTERFACE("4D2F4602-D5D2-9655-13AB-6C8CFE58ADFE")
INTLMEngine : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(INTLMEngine*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (INTLMEngine*)pObj->Probe(EIID_INTLMEngine);
    }

    static CARAPI_(INTLMEngine*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (INTLMEngine*)pObj->Probe(EIID_INTLMEngine);
    }

    virtual CARAPI GenerateType1Msg(
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& workstation,
        /* [out] */ _ELASTOS String * msg) = 0;

    virtual CARAPI GenerateType3Msg(
        /* [in] */ const _ELASTOS String& username,
        /* [in] */ const _ELASTOS String& password,
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& workstation,
        /* [in] */ const _ELASTOS String& challenge,
        /* [out] */ _ELASTOS String * msg) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Impl {
namespace Conn {
namespace Tsccm {
CAR_INTERFACE("E596403B-06D2-2914-34E0-408103C5B91F")
IRefQueueHandler : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IRefQueueHandler*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRefQueueHandler*)pObj->Probe(EIID_IRefQueueHandler);
    }

    static CARAPI_(IRefQueueHandler*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IRefQueueHandler*)pObj->Probe(EIID_IRefQueueHandler);
    }

    virtual CARAPI HandleReference(
        /* [in] */ IInterface * ref) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Impl {
namespace Conn {
namespace Tsccm {
CAR_INTERFACE("3FB14A2F-5852-8262-7F60-A8A1E2878219")
IPoolEntryRequest : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IPoolEntryRequest*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPoolEntryRequest*)pObj->Probe(EIID_IPoolEntryRequest);
    }

    static CARAPI_(IPoolEntryRequest*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IPoolEntryRequest*)pObj->Probe(EIID_IPoolEntryRequest);
    }

    virtual CARAPI GetPoolEntry(
        /* [in] */ _ELASTOS Int64 timeout,
        /* [in] */ Elastos::Utility::Concurrent::ITimeUnit * tunit,
        /* [out] */ IInterface ** basicPoolEntry) = 0;

    virtual CARAPI AbortRequest() = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace IO {
CAR_INTERFACE("ED622B38-8452-371B-66CC-CC40A2868DFB")
IHttpMessageParser : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpMessageParser*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpMessageParser*)pObj->Probe(EIID_IHttpMessageParser);
    }

    static CARAPI_(IHttpMessageParser*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpMessageParser*)pObj->Probe(EIID_IHttpMessageParser);
    }

    virtual CARAPI Parse(
        /* [out] */ Org::Apache::Http::IHttpMessage ** message) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace IO {
CAR_INTERFACE("C9662B2E-8452-371B-66CC-34FF03430D15")
IHttpMessageWriter : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpMessageWriter*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpMessageWriter*)pObj->Probe(EIID_IHttpMessageWriter);
    }

    static CARAPI_(IHttpMessageWriter*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpMessageWriter*)pObj->Probe(EIID_IHttpMessageWriter);
    }

    virtual CARAPI Write(
        /* [in] */ Org::Apache::Http::IHttpMessage * message) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace IO {
CAR_INTERFACE("78AD414E-0452-33D8-E208-B271D6AF8569")
IHttpTransportMetrics : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpTransportMetrics*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpTransportMetrics*)pObj->Probe(EIID_IHttpTransportMetrics);
    }

    static CARAPI_(IHttpTransportMetrics*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpTransportMetrics*)pObj->Probe(EIID_IHttpTransportMetrics);
    }

    virtual CARAPI GetBytesTransferred(
        /* [out] */ _ELASTOS Int64 * number) = 0;

    virtual CARAPI Reset() = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace IO {
CAR_INTERFACE("563C5C23-0712-F1FC-FFA9-F981A1868A1F")
ISessionInputBuffer : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISessionInputBuffer*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISessionInputBuffer*)pObj->Probe(EIID_ISessionInputBuffer);
    }

    static CARAPI_(ISessionInputBuffer*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISessionInputBuffer*)pObj->Probe(EIID_ISessionInputBuffer);
    }

    virtual CARAPI Read(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len,
        /* [out] */ _ELASTOS Int32 * count) = 0;

    virtual CARAPI Read(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ _ELASTOS Int32 * count) = 0;

    virtual CARAPI Read(
        /* [out] */ _ELASTOS Int32 * count) = 0;

    virtual CARAPI ReadLine(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ _ELASTOS Int32 * count) = 0;

    virtual CARAPI ReadLine(
        /* [out] */ _ELASTOS String * line) = 0;

    virtual CARAPI IsDataAvailable(
        /* [in] */ _ELASTOS Int32 timeout,
        /* [out] */ _ELASTOS Boolean * isAvailable) = 0;

    virtual CARAPI GetMetrics(
        /* [out] */ Org::Apache::Http::IO::IHttpTransportMetrics ** metrics) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace IO {
CAR_INTERFACE("B9425835-0712-F1FC-A5AA-F981A1868A1F")
ISessionOutputBuffer : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ISessionOutputBuffer*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISessionOutputBuffer*)pObj->Probe(EIID_ISessionOutputBuffer);
    }

    static CARAPI_(ISessionOutputBuffer*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ISessionOutputBuffer*)pObj->Probe(EIID_ISessionOutputBuffer);
    }

    virtual CARAPI Write(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI Write(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b) = 0;

    virtual CARAPI Write(
        /* [in] */ _ELASTOS Int32 b) = 0;

    virtual CARAPI WriteLine(
        /* [in] */ const _ELASTOS String& s) = 0;

    virtual CARAPI WriteLine(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer) = 0;

    virtual CARAPI Flush() = 0;

    virtual CARAPI GetMetrics(
        /* [out] */ Org::Apache::Http::IO::IHttpTransportMetrics ** metrics) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("6C374139-9892-1274-6EDC-277123FF0F0C")
IBasicHeaderIterator : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicHeaderIterator*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHeaderIterator*)pObj->Probe(EIID_IBasicHeaderIterator);
    }

    static CARAPI_(IBasicHeaderIterator*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHeaderIterator*)pObj->Probe(EIID_IBasicHeaderIterator);
    }

    virtual CARAPI FindNext(
        /* [in] */ _ELASTOS Int32 from,
        /* [out] */ _ELASTOS Int32 * index) = 0;

    virtual CARAPI FilterHeader(
        /* [in] */ _ELASTOS Int32 index,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("86DCAB26-9892-DF74-BBC1-2071E3C6FD1F")
IBasicHeaderValueFormatter : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicHeaderValueFormatter*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHeaderValueFormatter*)pObj->Probe(EIID_IBasicHeaderValueFormatter);
    }

    static CARAPI_(IBasicHeaderValueFormatter*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHeaderValueFormatter*)pObj->Probe(EIID_IBasicHeaderValueFormatter);
    }

    virtual CARAPI EstimateElementsLen(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeaderElement *> * elems,
        /* [out] */ _ELASTOS Int32 * length) = 0;

    virtual CARAPI EstimateHeaderElementLen(
        /* [in] */ Org::Apache::Http::IHeaderElement * elem,
        /* [out] */ _ELASTOS Int32 * length) = 0;

    virtual CARAPI EstimateParametersLen(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::INameValuePair *> * nvps,
        /* [out] */ _ELASTOS Int32 * length) = 0;

    virtual CARAPI EstimateNameValuePairLen(
        /* [in] */ Org::Apache::Http::INameValuePair * nvp,
        /* [out] */ _ELASTOS Int32 * length) = 0;

    virtual CARAPI DoFormatValue(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ _ELASTOS Boolean quote) = 0;

    virtual CARAPI IsSeparator(
        /* [in] */ _ELASTOS Char32 ch,
        /* [out] */ _ELASTOS Boolean * isSeparator) = 0;

    virtual CARAPI IsUnsafe(
        /* [in] */ _ELASTOS Char32 ch,
        /* [out] */ _ELASTOS Boolean * isUnsafe) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("3643683F-9892-DF74-3390-A861E3FE0F0C")
IBasicHeaderValueParser : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicHeaderValueParser*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHeaderValueParser*)pObj->Probe(EIID_IBasicHeaderValueParser);
    }

    static CARAPI_(IBasicHeaderValueParser*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHeaderValueParser*)pObj->Probe(EIID_IBasicHeaderValueParser);
    }

    virtual CARAPI CreateHeaderElement(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::INameValuePair *> * params,
        /* [out] */ Org::Apache::Http::IHeaderElement ** element) = 0;

    virtual CARAPI ParseNameValuePair(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Char32> * delimiters,
        /* [out] */ Org::Apache::Http::INameValuePair ** pair) = 0;

    virtual CARAPI CreateNameValuePair(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Org::Apache::Http::INameValuePair ** pair) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("F999342A-9892-3708-6ECC-28FC03430D15")
IBasicHttpResponse : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicHttpResponse*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHttpResponse*)pObj->Probe(EIID_IBasicHttpResponse);
    }

    static CARAPI_(IBasicHttpResponse*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHttpResponse*)pObj->Probe(EIID_IBasicHttpResponse);
    }

    virtual CARAPI GetReason(
        /* [in] */ _ELASTOS Int32 code,
        /* [out] */ _ELASTOS String * reason) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("8291835D-82D2-0345-2B3C-7C703527EC67")
IBasicLineFormatter : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicLineFormatter*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicLineFormatter*)pObj->Probe(EIID_IBasicLineFormatter);
    }

    static CARAPI_(IBasicLineFormatter*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicLineFormatter*)pObj->Probe(EIID_IBasicLineFormatter);
    }

    virtual CARAPI InitBuffer(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

    virtual CARAPI EstimateProtocolVersionLen(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ _ELASTOS Int32 * len) = 0;

    virtual CARAPI DoFormatRequestLine(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::IRequestLine * reqline) = 0;

    virtual CARAPI DoFormatStatusLine(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::IStatusLine * statline) = 0;

    virtual CARAPI DoFormatHeader(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::IHeader * header) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("B7F16D43-82D2-0345-2B3C-CC9068708D1F")
IBasicLineParser : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicLineParser*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicLineParser*)pObj->Probe(EIID_IBasicLineParser);
    }

    static CARAPI_(IBasicLineParser*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicLineParser*)pObj->Probe(EIID_IBasicLineParser);
    }

    virtual CARAPI CreateProtocolVersion(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Org::Apache::Http::IProtocolVersion ** ver) = 0;

    virtual CARAPI CreateRequestLine(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Org::Apache::Http::IRequestLine ** requestLine) = 0;

    virtual CARAPI CreateStatusLine(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 status,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ Org::Apache::Http::IStatusLine ** statusLine) = 0;

    virtual CARAPI SkipWhitespace(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("8E774537-1892-E98D-24DC-B84FE246FE1F")
IBasicListHeaderIterator : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicListHeaderIterator*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicListHeaderIterator*)pObj->Probe(EIID_IBasicListHeaderIterator);
    }

    static CARAPI_(IBasicListHeaderIterator*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicListHeaderIterator*)pObj->Probe(EIID_IBasicListHeaderIterator);
    }

    virtual CARAPI FindNext(
        /* [in] */ _ELASTOS Int32 from,
        /* [out] */ _ELASTOS Int32 * index) = 0;

    virtual CARAPI FilterHeader(
        /* [in] */ _ELASTOS Int32 index,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("2BD82C28-9892-DFA0-3390-6051E307861A")
IBasicNameValuePair : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicNameValuePair*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicNameValuePair*)pObj->Probe(EIID_IBasicNameValuePair);
    }

    static CARAPI_(IBasicNameValuePair*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicNameValuePair*)pObj->Probe(EIID_IBasicNameValuePair);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("DC67A15E-82D2-0345-DFB8-602621F3A3AB")
IBasicTokenIterator : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicTokenIterator*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicTokenIterator*)pObj->Probe(EIID_IBasicTokenIterator);
    }

    static CARAPI_(IBasicTokenIterator*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicTokenIterator*)pObj->Probe(EIID_IBasicTokenIterator);
    }

    virtual CARAPI FindNext(
        /* [in] */ _ELASTOS Int32 from,
        /* [out] */ _ELASTOS Int32 * pos) = 0;

    virtual CARAPI CreateToken(
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ _ELASTOS Int32 start,
        /* [in] */ _ELASTOS Int32 end,
        /* [out] */ _ELASTOS String * str) = 0;

    virtual CARAPI FindTokenStart(
        /* [in] */ _ELASTOS Int32 from,
        /* [out] */ _ELASTOS Int32 * pos) = 0;

    virtual CARAPI FindTokenSeparator(
        /* [in] */ _ELASTOS Int32 from,
        /* [out] */ _ELASTOS Int32 * pos) = 0;

    virtual CARAPI FindTokenEnd(
        /* [in] */ _ELASTOS Int32 from,
        /* [out] */ _ELASTOS Int32 * pos) = 0;

    virtual CARAPI IsTokenSeparator(
        /* [in] */ _ELASTOS Char32 ch,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI IsWhitespace(
        /* [in] */ _ELASTOS Char32 ch,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI IsTokenChar(
        /* [in] */ _ELASTOS Char32 ch,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI IsHttpSeparator(
        /* [in] */ _ELASTOS Char32 ch,
        /* [out] */ _ELASTOS Boolean * result) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("FCACC115-8452-2792-5A43-B58CCF3F56AB")
IHeaderGroup : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHeaderGroup*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderGroup*)pObj->Probe(EIID_IHeaderGroup);
    }

    static CARAPI_(IHeaderGroup*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderGroup*)pObj->Probe(EIID_IHeaderGroup);
    }

    virtual CARAPI Clear() = 0;

    virtual CARAPI AddHeader(
        /* [in] */ Org::Apache::Http::IHeader * header) = 0;

    virtual CARAPI RemoveHeader(
        /* [in] */ Org::Apache::Http::IHeader * header) = 0;

    virtual CARAPI UpdateHeader(
        /* [in] */ Org::Apache::Http::IHeader * header) = 0;

    virtual CARAPI SetHeaders(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers) = 0;

    virtual CARAPI GetCondensedHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeader ** condensedHeader) = 0;

    virtual CARAPI GetHeaders(
        /* [in] */ const _ELASTOS String& name,
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> ** headers) = 0;

    virtual CARAPI GetFirstHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeader ** firstHeader) = 0;

    virtual CARAPI GetLastHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeader ** lastHeader) = 0;

    virtual CARAPI GetAllHeaders(
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> ** allHeaders) = 0;

    virtual CARAPI ContainsHeader(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS Boolean * containsHeader) = 0;

    virtual CARAPI GetIterator(
        /* [out] */ Org::Apache::Http::IHeaderIterator ** headerIterator) = 0;

    virtual CARAPI GetIterator(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeaderIterator ** headerIterator) = 0;

    virtual CARAPI Copy(
        /* [out] */ Org::Apache::Http::Message::IHeaderGroup ** headerGroup) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("C8FE7227-BA52-DDEF-6090-B871E3FE0F0C")
IHeaderValueFormatter : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHeaderValueFormatter*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderValueFormatter*)pObj->Probe(EIID_IHeaderValueFormatter);
    }

    static CARAPI_(IHeaderValueFormatter*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderValueFormatter*)pObj->Probe(EIID_IHeaderValueFormatter);
    }

    virtual CARAPI FormatElements(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeaderElement *> * elems,
        /* [in] */ _ELASTOS Boolean quote,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

    virtual CARAPI FormatHeaderElement(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::IHeaderElement * elem,
        /* [in] */ _ELASTOS Boolean quote,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

    virtual CARAPI FormatParameters(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::INameValuePair *> * nvps,
        /* [in] */ _ELASTOS Boolean quote,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

    virtual CARAPI FormatNameValuePair(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::INameValuePair * nvp,
        /* [in] */ _ELASTOS Boolean quote,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("FBCD6B28-BA52-19EF-48D4-B071FF07861A")
IHeaderValueParser : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHeaderValueParser*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderValueParser*)pObj->Probe(EIID_IHeaderValueParser);
    }

    static CARAPI_(IHeaderValueParser*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHeaderValueParser*)pObj->Probe(EIID_IHeaderValueParser);
    }

    virtual CARAPI ParseElements(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeaderElement *> ** elements) = 0;

    virtual CARAPI ParseHeaderElement(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [out] */ Org::Apache::Http::IHeaderElement ** element) = 0;

    virtual CARAPI ParseParameters(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [out, callee] */ _ELASTOS ArrayOf<Org::Apache::Http::INameValuePair *> ** items) = 0;

    virtual CARAPI ParseNameValuePair(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [out] */ Org::Apache::Http::INameValuePair ** pair) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("9376695A-8552-0F87-AEE6-84FDEC07861A")
ILineFormatter : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ILineFormatter*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ILineFormatter*)pObj->Probe(EIID_ILineFormatter);
    }

    static CARAPI_(ILineFormatter*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ILineFormatter*)pObj->Probe(EIID_ILineFormatter);
    }

    virtual CARAPI AppendProtocolVersion(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

    virtual CARAPI FormatRequestLine(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::IRequestLine * reqline,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

    virtual CARAPI FormatStatusLine(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::IStatusLine * statline,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

    virtual CARAPI FormatHeader(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::IHeader * header,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer ** buf) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("A4FA7401-C552-68C6-46D6-365AFF58ADFE")
ILineParser : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ILineParser*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ILineParser*)pObj->Probe(EIID_ILineParser);
    }

    static CARAPI_(ILineParser*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ILineParser*)pObj->Probe(EIID_ILineParser);
    }

    virtual CARAPI ParseProtocolVersion(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [out] */ Org::Apache::Http::IProtocolVersion ** ver) = 0;

    virtual CARAPI HasProtocolVersion(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI ParseRequestLine(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [out] */ Org::Apache::Http::IRequestLine ** requestLine) = 0;

    virtual CARAPI ParseStatusLine(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [in] */ Org::Apache::Http::Message::IParserCursor * cursor,
        /* [out] */ Org::Apache::Http::IStatusLine ** statusLine) = 0;

    virtual CARAPI ParseHeader(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ Org::Apache::Http::IHeader ** header) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("6C90541C-4652-36D6-5A33-786DCBF58FD5")
IParserCursor : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IParserCursor*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IParserCursor*)pObj->Probe(EIID_IParserCursor);
    }

    static CARAPI_(IParserCursor*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IParserCursor*)pObj->Probe(EIID_IParserCursor);
    }

    virtual CARAPI GetLowerBound(
        /* [out] */ _ELASTOS Int32 * bound) = 0;

    virtual CARAPI GetUpperBound(
        /* [out] */ _ELASTOS Int32 * bound) = 0;

    virtual CARAPI GetPos(
        /* [out] */ _ELASTOS Int32 * pos) = 0;

    virtual CARAPI UpdatePos(
        /* [in] */ _ELASTOS Int32 pos) = 0;

    virtual CARAPI AtEnd(
        /* [out] */ _ELASTOS Boolean * atEnd) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("D5756729-9892-3708-6ECC-C06AE307861A")
IBasicHttpParams : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicHttpParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHttpParams*)pObj->Probe(EIID_IBasicHttpParams);
    }

    static CARAPI_(IBasicHttpParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHttpParams*)pObj->Probe(EIID_IBasicHttpParams);
    }

    virtual CARAPI SetParameters(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS String> * names,
        /* [in] */ IInterface * value) = 0;

    virtual CARAPI IsParameterSet(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI IsParameterSetLocally(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI Clear() = 0;

    virtual CARAPI CopyParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * target) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("DE942D3C-24D2-1946-82DA-F881A1868A1F")
ICoreConnectionPNames : public IInterface
{
    static const _ELASTOS String SO_TIMEOUT;
    static const _ELASTOS String TCP_NODELAY;
    static const _ELASTOS String SOCKET_BUFFER_SIZE;
    static const _ELASTOS String SO_LINGER_HTTP;
    static const _ELASTOS String CONNECTION_TIMEOUT;
    static const _ELASTOS String STALE_CONNECTION_CHECK;
    static const _ELASTOS String MAX_LINE_LENGTH;
    static const _ELASTOS String MAX_HEADER_COUNT;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICoreConnectionPNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICoreConnectionPNames*)pObj->Probe(EIID_ICoreConnectionPNames);
    }

    static CARAPI_(ICoreConnectionPNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICoreConnectionPNames*)pObj->Probe(EIID_ICoreConnectionPNames);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("3AF72B44-1152-19BC-F8A2-76F52243979D")
ICoreProtocolPNames : public IInterface
{
    static const _ELASTOS String PROTOCOL_VERSION;
    static const _ELASTOS String HTTP_ELEMENT_CHARSET;
    static const _ELASTOS String HTTP_CONTENT_CHARSET;
    static const _ELASTOS String USER_AGENT;
    static const _ELASTOS String ORIGIN_SERVER;
    static const _ELASTOS String STRICT_TRANSFER_ENCODING;
    static const _ELASTOS String USE_EXPECT_CONTINUE;
    static const _ELASTOS String WAIT_FOR_CONTINUE;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICoreProtocolPNames*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICoreProtocolPNames*)pObj->Probe(EIID_ICoreProtocolPNames);
    }

    static CARAPI_(ICoreProtocolPNames*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICoreProtocolPNames*)pObj->Probe(EIID_ICoreProtocolPNames);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("4B17372F-28D2-11FD-6EDC-9881D5C60F0C")
IDefaultedHttpParams : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDefaultedHttpParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDefaultedHttpParams*)pObj->Probe(EIID_IDefaultedHttpParams);
    }

    static CARAPI_(IDefaultedHttpParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDefaultedHttpParams*)pObj->Probe(EIID_IDefaultedHttpParams);
    }

    virtual CARAPI GetDefaults(
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** defaults) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("D0479022-8452-371B-6630-C24A86448C1F")
IHttpConnectionParamBean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpConnectionParamBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpConnectionParamBean*)pObj->Probe(EIID_IHttpConnectionParamBean);
    }

    static CARAPI_(IHttpConnectionParamBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpConnectionParamBean*)pObj->Probe(EIID_IHttpConnectionParamBean);
    }

    virtual CARAPI SetSoTimeout(
        /* [in] */ _ELASTOS Int32 soTimeout) = 0;

    virtual CARAPI SetTcpNoDelay(
        /* [in] */ _ELASTOS Boolean tcpNoDelay) = 0;

    virtual CARAPI SetSocketBufferSize(
        /* [in] */ _ELASTOS Int32 socketBufferSize) = 0;

    virtual CARAPI SetLinger(
        /* [in] */ _ELASTOS Int32 linger) = 0;

    virtual CARAPI SetConnectionTimeout(
        /* [in] */ _ELASTOS Int32 connectionTimeout) = 0;

    virtual CARAPI SetStaleCheckingEnabled(
        /* [in] */ _ELASTOS Boolean staleCheckingEnabled) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("E9BEEC2B-8452-371B-6630-C26AE307861A")
IHttpConnectionParams : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpConnectionParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpConnectionParams*)pObj->Probe(EIID_IHttpConnectionParams);
    }

    static CARAPI_(IHttpConnectionParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpConnectionParams*)pObj->Probe(EIID_IHttpConnectionParams);
    }

    virtual CARAPI GetSoTimeout(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Int32 * timeout) = 0;

    virtual CARAPI SetSoTimeout(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Int32 timeout) = 0;

    virtual CARAPI GetTcpNoDelay(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI SetTcpNoDelay(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Boolean value) = 0;

    virtual CARAPI GetSocketBufferSize(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Int32 * size) = 0;

    virtual CARAPI SetSocketBufferSize(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Int32 size) = 0;

    virtual CARAPI GetLinger(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Int32 * linger) = 0;

    virtual CARAPI SetLinger(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Int32 value) = 0;

    virtual CARAPI GetConnectionTimeout(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Int32 * timeout) = 0;

    virtual CARAPI SetConnectionTimeout(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Int32 timeout) = 0;

    virtual CARAPI IsStaleCheckingEnabled(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI SetStaleCheckingEnabled(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Boolean value) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("3E88FB07-7452-73DF-46D6-246CFF58ADFE")
IHttpParams : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpParams*)pObj->Probe(EIID_IHttpParams);
    }

    static CARAPI_(IHttpParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpParams*)pObj->Probe(EIID_IHttpParams);
    }

    virtual CARAPI GetParameter(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** parameter) = 0;

    virtual CARAPI SetParameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ IInterface * value,
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** httpParams) = 0;

    virtual CARAPI Copy(
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** httpParams) = 0;

    virtual CARAPI RemoveParameter(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS Boolean * remove) = 0;

    virtual CARAPI GetInt64Parameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ _ELASTOS Int64 defaultValue,
        /* [out] */ _ELASTOS Int64 * int64Parameter) = 0;

    virtual CARAPI SetInt64Parameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ _ELASTOS Int64 value,
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** httpParams) = 0;

    virtual CARAPI GetInt32Parameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ _ELASTOS Int32 defaultValue,
        /* [out] */ _ELASTOS Int32 * int32Parameter) = 0;

    virtual CARAPI SetInt32Parameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ _ELASTOS Int32 value,
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** httpParams) = 0;

    virtual CARAPI GetDoubleParameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ _ELASTOS Double defaultValue,
        /* [out] */ _ELASTOS Double * doubleParameter) = 0;

    virtual CARAPI SetDoubleParameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ _ELASTOS Double value,
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** httpParams) = 0;

    virtual CARAPI GetBooleanParameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ _ELASTOS Boolean defaultValue,
        /* [out] */ _ELASTOS Boolean * booleanParameter) = 0;

    virtual CARAPI SetBooleanParameter(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ _ELASTOS Boolean value,
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** httpParams) = 0;

    virtual CARAPI IsParameterTrue(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS Boolean * isParameterTrue) = 0;

    virtual CARAPI IsParameterFalse(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ _ELASTOS Boolean * isParameterFalse) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("735F7E08-7452-73DF-56CB-B76CCA6F46D6")
IHttpProtocolParamBean : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpProtocolParamBean*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpProtocolParamBean*)pObj->Probe(EIID_IHttpProtocolParamBean);
    }

    static CARAPI_(IHttpProtocolParamBean*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpProtocolParamBean*)pObj->Probe(EIID_IHttpProtocolParamBean);
    }

    virtual CARAPI SetHttpElementCharset(
        /* [in] */ const _ELASTOS String& httpElementCharset) = 0;

    virtual CARAPI SetContentCharset(
        /* [in] */ const _ELASTOS String& contentCharset) = 0;

    virtual CARAPI SetVersion(
        /* [in] */ Org::Apache::Http::IHttpVersion * ver) = 0;

    virtual CARAPI SetUserAgent(
        /* [in] */ const _ELASTOS String& userAgent) = 0;

    virtual CARAPI SetUseExpectContinue(
        /* [in] */ _ELASTOS Boolean useExpectContinue) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("24EBC80A-7452-73DF-56CB-B76CCA6F46D6")
IHttpProtocolParams : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpProtocolParams*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpProtocolParams*)pObj->Probe(EIID_IHttpProtocolParams);
    }

    static CARAPI_(IHttpProtocolParams*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpProtocolParams*)pObj->Probe(EIID_IHttpProtocolParams);
    }

    virtual CARAPI GetHttpElementCharset(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS String * charset) = 0;

    virtual CARAPI SetHttpElementCharset(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ const _ELASTOS String& charset) = 0;

    virtual CARAPI GetContentCharset(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS String * charset) = 0;

    virtual CARAPI SetContentCharset(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ const _ELASTOS String& charset) = 0;

    virtual CARAPI GetVersion(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::IProtocolVersion ** ver) = 0;

    virtual CARAPI SetVersion(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver) = 0;

    virtual CARAPI GetUserAgent(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS String * agent) = 0;

    virtual CARAPI SetUserAgent(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ const _ELASTOS String& useragent) = 0;

    virtual CARAPI UseExpectContinue(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI SetUseExpectContinue(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [in] */ _ELASTOS Boolean b) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("1D007A3F-9892-3708-6ECC-409BFF07861A")
IBasicHttpProcessor : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IBasicHttpProcessor*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHttpProcessor*)pObj->Probe(EIID_IBasicHttpProcessor);
    }

    static CARAPI_(IBasicHttpProcessor*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IBasicHttpProcessor*)pObj->Probe(EIID_IBasicHttpProcessor);
    }

    virtual CARAPI AddInterceptor(
        /* [in] */ Org::Apache::Http::IHttpRequestInterceptor * interceptor) = 0;

    virtual CARAPI AddInterceptor(
        /* [in] */ Org::Apache::Http::IHttpRequestInterceptor * interceptor,
        /* [in] */ _ELASTOS Int32 index) = 0;

    virtual CARAPI AddInterceptor(
        /* [in] */ Org::Apache::Http::IHttpResponseInterceptor * interceptor) = 0;

    virtual CARAPI AddInterceptor(
        /* [in] */ Org::Apache::Http::IHttpResponseInterceptor * interceptor,
        /* [in] */ _ELASTOS Int32 index) = 0;

    virtual CARAPI ClearInterceptors() = 0;

    virtual CARAPI Copy(
        /* [out] */ Org::Apache::Http::Protocol::IBasicHttpProcessor ** processor) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("B9383A44-11D2-B96C-359F-88007B0611CD")
IDefaultedHttpContext : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IDefaultedHttpContext*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDefaultedHttpContext*)pObj->Probe(EIID_IDefaultedHttpContext);
    }

    static CARAPI_(IDefaultedHttpContext*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IDefaultedHttpContext*)pObj->Probe(EIID_IDefaultedHttpContext);
    }

    virtual CARAPI GetDefaults(
        /* [out] */ Org::Apache::Http::Protocol::IHttpContext ** defaults) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("D1F72B43-1452-B014-3A13-D1BCE3C60F0C")
IExecutionContext : public IInterface
{
    static const _ELASTOS String HTTP_CONNECTION;
    static const _ELASTOS String HTTP_REQUEST;
    static const _ELASTOS String HTTP_RESPONSE;
    static const _ELASTOS String HTTP_TARGET_HOST;
    static const _ELASTOS String HTTP_PROXY_HOST;
    static const _ELASTOS String HTTP_REQ_SENT;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IExecutionContext*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExecutionContext*)pObj->Probe(EIID_IExecutionContext);
    }

    static CARAPI_(IExecutionContext*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IExecutionContext*)pObj->Probe(EIID_IExecutionContext);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("104A2B15-D452-D975-8FD5-EAAFCCA4B9A2")
IHTTP : public IInterface
{
    static const _ELASTOS Int32 CR = 13;
    static const _ELASTOS Int32 LF = 10;
    static const _ELASTOS Int32 SP = 32;
    static const _ELASTOS Int32 HT = 9;
    static const _ELASTOS String TRANSFER_ENCODING;
    static const _ELASTOS String CONTENT_LEN;
    static const _ELASTOS String CONTENT_TYPE;
    static const _ELASTOS String CONTENT_ENCODING;
    static const _ELASTOS String EXPECT_DIRECTIVE;
    static const _ELASTOS String CONN_DIRECTIVE;
    static const _ELASTOS String TARGET_HOST;
    static const _ELASTOS String USER_AGENT;
    static const _ELASTOS String DATE_HEADER;
    static const _ELASTOS String SERVER_HEADER;
    static const _ELASTOS String EXPECT_CONTINUE;
    static const _ELASTOS String CONN_CLOSE;
    static const _ELASTOS String CONN_KEEP_ALIVE;
    static const _ELASTOS String CHUNK_CODING;
    static const _ELASTOS String IDENTITY_CODING;
    static const _ELASTOS String UTF_8;
    static const _ELASTOS String UTF_16;
    static const _ELASTOS String US_ASCII;
    static const _ELASTOS String ASCII;
    static const _ELASTOS String ISO_8859_1;
    static const _ELASTOS String DEFAULT_CONTENT_CHARSET;
    static const _ELASTOS String DEFAULT_PROTOCOL_CHARSET;
    static const _ELASTOS String OCTET_STREAM_TYPE;
    static const _ELASTOS String PLAIN_TEXT_TYPE;
    static const _ELASTOS String CHARSET_PARAM;
    static const _ELASTOS String DEFAULT_CONTENT_TYPE;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHTTP*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHTTP*)pObj->Probe(EIID_IHTTP);
    }

    static CARAPI_(IHTTP*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHTTP*)pObj->Probe(EIID_IHTTP);
    }

    virtual CARAPI IsWhitespace(
        /* [in] */ _ELASTOS Char32 ch,
        /* [out] */ _ELASTOS Boolean * isWhitespace) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("F9004D1E-7452-33DF-23C7-37BADF3F56AB")
IHttpContext : public IInterface
{
    static const _ELASTOS String RESERVED_PREFIX;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpContext*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpContext*)pObj->Probe(EIID_IHttpContext);
    }

    static CARAPI_(IHttpContext*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpContext*)pObj->Probe(EIID_IHttpContext);
    }

    virtual CARAPI GetAttribute(
        /* [in] */ const _ELASTOS String& id,
        /* [out] */ IInterface ** attr) = 0;

    virtual CARAPI SetAttribute(
        /* [in] */ const _ELASTOS String& id,
        /* [in] */ IInterface * obj) = 0;

    virtual CARAPI RemoveAttribute(
        /* [in] */ const _ELASTOS String& id,
        /* [out] */ IInterface ** attrs) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("1CFA3A5E-0452-33D8-1A34-82C0ECD9A3AB")
IHttpDateGenerator : public IInterface
{
    static const _ELASTOS String PATTERN_RFC1123;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpDateGenerator*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpDateGenerator*)pObj->Probe(EIID_IHttpDateGenerator);
    }

    static CARAPI_(IHttpDateGenerator*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpDateGenerator*)pObj->Probe(EIID_IHttpDateGenerator);
    }

    virtual CARAPI GetCurrentDate(
        /* [out] */ _ELASTOS String * date) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("8FA13849-0452-33D8-1A34-82C0ECD9A3AB")
IHttpDateGeneratorHelper : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpDateGeneratorHelper*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpDateGeneratorHelper*)pObj->Probe(EIID_IHttpDateGeneratorHelper);
    }

    static CARAPI_(IHttpDateGeneratorHelper*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpDateGeneratorHelper*)pObj->Probe(EIID_IHttpDateGeneratorHelper);
    }

    virtual CARAPI GetGMT(
        /* [out] */ Elastos::Utility::ITimeZone ** timeZone) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("5B2D384C-0452-33D8-A284-7DE5E8C33316")
IHttpExpectationVerifier : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpExpectationVerifier*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpExpectationVerifier*)pObj->Probe(EIID_IHttpExpectationVerifier);
    }

    static CARAPI_(IHttpExpectationVerifier*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpExpectationVerifier*)pObj->Probe(EIID_IHttpExpectationVerifier);
    }

    virtual CARAPI Verify(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("956E2824-8452-371B-66A0-CDFF03430D15")
IHttpProcessor : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpProcessor*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpProcessor*)pObj->Probe(EIID_IHttpProcessor);
    }

    static CARAPI_(IHttpProcessor*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpProcessor*)pObj->Probe(EIID_IHttpProcessor);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("A6087B59-0452-33D8-D2CC-851C0505ACD3")
IHttpRequestExecutor : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequestExecutor*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestExecutor*)pObj->Probe(EIID_IHttpRequestExecutor);
    }

    static CARAPI_(IHttpRequestExecutor*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestExecutor*)pObj->Probe(EIID_IHttpRequestExecutor);
    }

    virtual CARAPI CanResponseHaveBody(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [out] */ _ELASTOS Boolean * result) = 0;

    virtual CARAPI Execute(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::IHttpClientConnection * conn,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

    virtual CARAPI PreProcess(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context) = 0;

    virtual CARAPI DoSendRequest(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::IHttpClientConnection * conn,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

    virtual CARAPI DoReceiveResponse(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::IHttpClientConnection * conn,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::IHttpResponse ** response) = 0;

    virtual CARAPI PostProcess(
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("4785332C-8452-371B-6608-3EF703430D15")
IHttpRequestHandler : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequestHandler*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestHandler*)pObj->Probe(EIID_IHttpRequestHandler);
    }

    static CARAPI_(IHttpRequestHandler*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestHandler*)pObj->Probe(EIID_IHttpRequestHandler);
    }

    virtual CARAPI Handle(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("C4376837-8452-371B-6608-3EB701850A16")
IHttpRequestHandlerRegistry : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequestHandlerRegistry*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestHandlerRegistry*)pObj->Probe(EIID_IHttpRequestHandlerRegistry);
    }

    static CARAPI_(IHttpRequestHandlerRegistry*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestHandlerRegistry*)pObj->Probe(EIID_IHttpRequestHandlerRegistry);
    }

    virtual CARAPI Register(
        /* [in] */ const _ELASTOS String& pattern,
        /* [in] */ Org::Apache::Http::Protocol::IHttpRequestHandler * handler) = 0;

    virtual CARAPI Unregister(
        /* [in] */ const _ELASTOS String& pattern) = 0;

    virtual CARAPI SetHandlers(
        /* [in] */ Elastos::Utility::IMap * map) = 0;

    virtual CARAPI MatchUriRequestPattern(
        /* [in] */ const _ELASTOS String& pattern,
        /* [in] */ const _ELASTOS String& requestUri,
        /* [out] */ _ELASTOS Boolean * isMatch) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("96B23B29-8452-371B-6608-3EB701BF8C17")
IHttpRequestHandlerResolver : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequestHandlerResolver*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestHandlerResolver*)pObj->Probe(EIID_IHttpRequestHandlerResolver);
    }

    static CARAPI_(IHttpRequestHandlerResolver*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestHandlerResolver*)pObj->Probe(EIID_IHttpRequestHandlerResolver);
    }

    virtual CARAPI Lookup(
        /* [in] */ const _ELASTOS String& requestURI,
        /* [out] */ Org::Apache::Http::Protocol::IHttpRequestHandler ** handler) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("098ED44A-0452-33D8-D2CC-85BC253328B5")
IHttpRequestInterceptorList : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpRequestInterceptorList*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestInterceptorList*)pObj->Probe(EIID_IHttpRequestInterceptorList);
    }

    static CARAPI_(IHttpRequestInterceptorList*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpRequestInterceptorList*)pObj->Probe(EIID_IHttpRequestInterceptorList);
    }

    virtual CARAPI AddRequestInterceptor(
        /* [in] */ Org::Apache::Http::IHttpRequestInterceptor * itcp) = 0;

    virtual CARAPI AddRequestInterceptor(
        /* [in] */ Org::Apache::Http::IHttpRequestInterceptor * itcp,
        /* [in] */ _ELASTOS Int32 index) = 0;

    virtual CARAPI GetRequestInterceptorCount(
        /* [out] */ _ELASTOS Int32 * count) = 0;

    virtual CARAPI GetRequestInterceptor(
        /* [in] */ _ELASTOS Int32 index,
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor ** interceptor) = 0;

    virtual CARAPI ClearRequestInterceptors() = 0;

    virtual CARAPI RemoveRequestInterceptorByClass(
        /* [in] */ IInterface * clazz) = 0;

    virtual CARAPI SetInterceptors(
        /* [in] */ Elastos::Utility::IList * itcps) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("AC1EDB24-8452-371B-6614-2E78DF048A19")
IHttpResponseInterceptorList : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpResponseInterceptorList*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpResponseInterceptorList*)pObj->Probe(EIID_IHttpResponseInterceptorList);
    }

    static CARAPI_(IHttpResponseInterceptorList*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpResponseInterceptorList*)pObj->Probe(EIID_IHttpResponseInterceptorList);
    }

    virtual CARAPI AddResponseInterceptor(
        /* [in] */ Org::Apache::Http::IHttpResponseInterceptor * itcp) = 0;

    virtual CARAPI AddResponseInterceptor(
        /* [in] */ Org::Apache::Http::IHttpResponseInterceptor * itcp,
        /* [in] */ _ELASTOS Int32 index) = 0;

    virtual CARAPI GetResponseInterceptorCount(
        /* [out] */ _ELASTOS Int32 * count) = 0;

    virtual CARAPI GetResponseInterceptor(
        /* [in] */ _ELASTOS Int32 index,
        /* [out] */ Org::Apache::Http::IHttpResponseInterceptor ** interceptor) = 0;

    virtual CARAPI ClearResponseInterceptors() = 0;

    virtual CARAPI RemoveResponseInterceptorByClass(
        /* [in] */ IInterface * clazz) = 0;

    virtual CARAPI SetInterceptors(
        /* [in] */ Elastos::Utility::IList * itcps) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("F4E2BB21-8452-371B-6664-FE81A1868A1F")
IHttpService : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IHttpService*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpService*)pObj->Probe(EIID_IHttpService);
    }

    static CARAPI_(IHttpService*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IHttpService*)pObj->Probe(EIID_IHttpService);
    }

    virtual CARAPI SetHttpProcessor(
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor) = 0;

    virtual CARAPI SetConnReuseStrategy(
        /* [in] */ Org::Apache::Http::IConnectionReuseStrategy * connStrategy) = 0;

    virtual CARAPI SetResponseFactory(
        /* [in] */ Org::Apache::Http::IHttpResponseFactory * responseFactory) = 0;

    virtual CARAPI SetHandlerResolver(
        /* [in] */ Org::Apache::Http::Protocol::IHttpRequestHandlerResolver * handlerResolver) = 0;

    virtual CARAPI SetExpectationVerifier(
        /* [in] */ Org::Apache::Http::Protocol::IHttpExpectationVerifier * expectationVerifier) = 0;

    virtual CARAPI GetParams(
        /* [out] */ Org::Apache::Http::Params::IHttpParams ** params) = 0;

    virtual CARAPI SetParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params) = 0;

    virtual CARAPI HandleRequest(
        /* [in] */ Org::Apache::Http::IHttpServerConnection * conn,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context) = 0;

    virtual CARAPI HandleException(
        /* [in] */ _ELASTOS ECode ex,
        /* [in] */ Org::Apache::Http::IHttpResponse * response) = 0;

    virtual CARAPI DoService(
        /* [in] */ Org::Apache::Http::IHttpRequest * request,
        /* [in] */ Org::Apache::Http::IHttpResponse * response,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("C38D654E-0792-19BD-1E61-B6F048548D1F")
IUriPatternMatcher : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IUriPatternMatcher*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IUriPatternMatcher*)pObj->Probe(EIID_IUriPatternMatcher);
    }

    static CARAPI_(IUriPatternMatcher*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IUriPatternMatcher*)pObj->Probe(EIID_IUriPatternMatcher);
    }

    virtual CARAPI Register(
        /* [in] */ const _ELASTOS String& pattern,
        /* [in] */ IInterface * handler) = 0;

    virtual CARAPI Unregister(
        /* [in] */ const _ELASTOS String& pattern) = 0;

    virtual CARAPI SetHandlers(
        /* [in] */ Elastos::Utility::IMap * map) = 0;

    virtual CARAPI Lookup(
        /* [in] */ const _ELASTOS String& requestURI,
        /* [out] */ IInterface ** value) = 0;

    virtual CARAPI MatchUriRequestPattern(
        /* [in] */ const _ELASTOS String& pattern,
        /* [in] */ const _ELASTOS String& requestUri,
        /* [out] */ _ELASTOS Boolean * isMatch) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Utility {
CAR_INTERFACE("3F978A30-9B52-281B-B0A8-F981A1868A1F")
IByteArrayBuffer : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IByteArrayBuffer*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IByteArrayBuffer*)pObj->Probe(EIID_IByteArrayBuffer);
    }

    static CARAPI_(IByteArrayBuffer*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IByteArrayBuffer*)pObj->Probe(EIID_IByteArrayBuffer);
    }

    virtual CARAPI Append(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI Append(
        /* [in] */ _ELASTOS Int32 b) = 0;

    virtual CARAPI Append(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Char32> * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI Append(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI Clear() = 0;

    virtual CARAPI ToByteArray(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** byteArray) = 0;

    virtual CARAPI ByteAt(
        /* [in] */ _ELASTOS Int32 i,
        /* [out] */ _ELASTOS Int32 * byteAt) = 0;

    virtual CARAPI GetCapacity(
        /* [out] */ _ELASTOS Int32 * capacity) = 0;

    virtual CARAPI GetLength(
        /* [out] */ _ELASTOS Int32 * capacity) = 0;

    virtual CARAPI GetBuffer(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Byte> ** byteArray) = 0;

    virtual CARAPI SetLength(
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI IsEmpty(
        /* [out] */ _ELASTOS Boolean * isEmpty) = 0;

    virtual CARAPI IsFull(
        /* [out] */ _ELASTOS Boolean * isFull) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Utility {
CAR_INTERFACE("EE5DD723-8312-2415-6A60-51F303430D15")
ICharArrayBuffer : public IInterface
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICharArrayBuffer*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICharArrayBuffer*)pObj->Probe(EIID_ICharArrayBuffer);
    }

    static CARAPI_(ICharArrayBuffer*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICharArrayBuffer*)pObj->Probe(EIID_ICharArrayBuffer);
    }

    virtual CARAPI Append(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Char32> * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI Append(
        /* [in] */ const _ELASTOS String& str) = 0;

    virtual CARAPI Append(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI Append(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * b) = 0;

    virtual CARAPI Append(
        /* [in] */ _ELASTOS Char32 ch) = 0;

    virtual CARAPI Append(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI Append(
        /* [in] */ Org::Apache::Http::Utility::IByteArrayBuffer * b,
        /* [in] */ _ELASTOS Int32 off,
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI Append(
        /* [in] */ IInterface * obj) = 0;

    virtual CARAPI Clear() = 0;

    virtual CARAPI ToCharArray(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Char32> ** charArray) = 0;

    virtual CARAPI CharAt(
        /* [in] */ _ELASTOS Int32 i,
        /* [out] */ _ELASTOS Char32 * charAt) = 0;

    virtual CARAPI GetBuffer(
        /* [out, callee] */ _ELASTOS ArrayOf<_ELASTOS Char32> ** buffer) = 0;

    virtual CARAPI GetCapacity(
        /* [out] */ _ELASTOS Int32 * capacity) = 0;

    virtual CARAPI GetLength(
        /* [out] */ _ELASTOS Int32 * length) = 0;

    virtual CARAPI EnsureCapacity(
        /* [in] */ _ELASTOS Int32 required) = 0;

    virtual CARAPI SetLength(
        /* [in] */ _ELASTOS Int32 len) = 0;

    virtual CARAPI IsEmpty(
        /* [out] */ _ELASTOS Boolean * isEmpty) = 0;

    virtual CARAPI IsFull(
        /* [out] */ _ELASTOS Boolean * isFull) = 0;

    virtual CARAPI IndexOf(
        /* [in] */ _ELASTOS Int32 ch,
        /* [in] */ _ELASTOS Int32 beginIndex,
        /* [in] */ _ELASTOS Int32 endIndex,
        /* [out] */ _ELASTOS Int32 * index) = 0;

    virtual CARAPI IndexOf(
        /* [in] */ _ELASTOS Int32 ch,
        /* [out] */ _ELASTOS Int32 * index) = 0;

    virtual CARAPI Substring(
        /* [in] */ _ELASTOS Int32 beginIndex,
        /* [in] */ _ELASTOS Int32 endIndex,
        /* [out] */ _ELASTOS String * string) = 0;

    virtual CARAPI SubstringTrimmed(
        /* [in] */ _ELASTOS Int32 beginIndex,
        /* [in] */ _ELASTOS Int32 endIndex,
        /* [out] */ _ELASTOS String * string) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Utility {
CAR_INTERFACE("FAAC5C3A-F812-3F7D-30D4-50F143C10C12")
IVersionInfo : public IInterface
{
    static const _ELASTOS String UNAVAILABLE;
    static const _ELASTOS String VERSION_PROPERTY_FILE;
    static const _ELASTOS String PROPERTY_MODULE;
    static const _ELASTOS String PROPERTY_RELEASE;
    static const _ELASTOS String PROPERTY_TIMESTAMP;
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(IVersionInfo*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (IVersionInfo*)pObj->Probe(EIID_IVersionInfo);
    }

    static CARAPI_(IVersionInfo*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (IVersionInfo*)pObj->Probe(EIID_IVersionInfo);
    }

    virtual CARAPI GetPackage(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetModule(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetRelease(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetTimestamp(
        /* [out] */ _ELASTOS String * name) = 0;

    virtual CARAPI GetClassloader(
        /* [out] */ _ELASTOS String * name) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Luni {
namespace Internal {
namespace Util {
CAR_INTERFACE("A7438857-8312-080E-C91F-AD9239028A17")
ICTimezoneGetterHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTimezoneGetterHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimezoneGetterHelperClassObject*)pObj->Probe(EIID_ICTimezoneGetterHelperClassObject);
    }

    static CARAPI_(ICTimezoneGetterHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimezoneGetterHelperClassObject*)pObj->Probe(EIID_ICTimezoneGetterHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Crypto {
namespace Internal {
CAR_INTERFACE("B5107E1C-7312-EFE1-CBB0-F38AD6DCCC32")
ICNullCipherSpiClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICNullCipherSpiClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNullCipherSpiClassObject*)pObj->Probe(EIID_ICNullCipherSpiClassObject);
    }

    static CARAPI_(ICNullCipherSpiClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNullCipherSpiClassObject*)pObj->Probe(EIID_ICNullCipherSpiClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
CAR_INTERFACE("CE847032-8312-3367-48DC-88ABC7E80F0C")
ICExpatReaderClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICExpatReaderClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExpatReaderClassObject*)pObj->Probe(EIID_ICExpatReaderClassObject);
    }

    static CARAPI_(ICExpatReaderClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExpatReaderClassObject*)pObj->Probe(EIID_ICExpatReaderClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Parsers {
CAR_INTERFACE("804A7711-C312-6129-46D6-365A4BF0FC32")
ICSAXParserImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSAXParserImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSAXParserImplClassObject*)pObj->Probe(EIID_ICSAXParserImplClassObject);
    }

    static CARAPI_(ICSAXParserImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSAXParserImplClassObject*)pObj->Probe(EIID_ICSAXParserImplClassObject);
    }

    virtual CARAPI CreateObjectWithFeatures(
        /* [in] */ Elastos::Utility::IMap * features,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Parsers {
CAR_INTERFACE("0BC58124-0312-0A0E-4264-2051C3C67D68")
ICSAXParserFactoryImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSAXParserFactoryImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSAXParserFactoryImplClassObject*)pObj->Probe(EIID_ICSAXParserFactoryImplClassObject);
    }

    static CARAPI_(ICSAXParserFactoryImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSAXParserFactoryImplClassObject*)pObj->Probe(EIID_ICSAXParserFactoryImplClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Parsers {
CAR_INTERFACE("6FB18729-8312-6C59-EE43-ABA7C7E80F0C")
ICDocumentBuilderFactoryImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDocumentBuilderFactoryImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentBuilderFactoryImplClassObject*)pObj->Probe(EIID_ICDocumentBuilderFactoryImplClassObject);
    }

    static CARAPI_(ICDocumentBuilderFactoryImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentBuilderFactoryImplClassObject*)pObj->Probe(EIID_ICDocumentBuilderFactoryImplClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("3D61A33C-0312-372F-6AD4-D363F407861A")
ICAttrImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAttrImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAttrImplClassObject*)pObj->Probe(EIID_ICAttrImplClassObject);
    }

    static CARAPI_(ICAttrImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAttrImplClassObject*)pObj->Probe(EIID_ICAttrImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentNamespaceURIQualifiedName(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDocumentName(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("D85E7A2E-0312-0D06-1474-5050B99E1EA3")
ICCDATASectionImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCDATASectionImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCDATASectionImplClassObject*)pObj->Probe(EIID_ICCDATASectionImplClassObject);
    }

    static CARAPI_(ICCDATASectionImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCDATASectionImplClassObject*)pObj->Probe(EIID_ICCDATASectionImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentData(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("B4E27523-0312-3206-60BC-AFA7C7E80F0C")
ICCommentImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCommentImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCommentImplClassObject*)pObj->Probe(EIID_ICCommentImplClassObject);
    }

    static CARAPI_(ICCommentImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCommentImplClassObject*)pObj->Probe(EIID_ICCommentImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentData(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("46297A34-8312-0F59-6A90-50F1BE9E1EA3")
ICDocumentFragmentImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDocumentFragmentImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentFragmentImplClassObject*)pObj->Probe(EIID_ICDocumentFragmentImplClassObject);
    }

    static CARAPI_(ICDocumentFragmentImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentFragmentImplClassObject*)pObj->Probe(EIID_ICDocumentFragmentImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocument(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("CAD79B37-8312-F559-F418-FD81A1868A1F")
ICDocumentImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDocumentImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentImplClassObject*)pObj->Probe(EIID_ICDocumentImplClassObject);
    }

    static CARAPI_(ICDocumentImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentImplClassObject*)pObj->Probe(EIID_ICDocumentImplClassObject);
    }

    virtual CARAPI CreateObjectWithImplNamespaceURIQualifiedNameDoctypeInputEncoding(
        /* [in] */ Org::W3c::Dom::IDOMImplementation * impl,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ Org::W3c::Dom::IDocumentType * doctype,
        /* [in] */ const _ELASTOS String& inputEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("EB397B23-8312-F559-22A0-7831E3BE1EA3")
ICDocumentImplHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDocumentImplHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentImplHelperClassObject*)pObj->Probe(EIID_ICDocumentImplHelperClassObject);
    }

    static CARAPI_(ICDocumentImplHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentImplHelperClassObject*)pObj->Probe(EIID_ICDocumentImplHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("D8B27D50-8312-1806-2C10-E986EF6E672C")
ICDOMConfigurationImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDOMConfigurationImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDOMConfigurationImplClassObject*)pObj->Probe(EIID_ICDOMConfigurationImplClassObject);
    }

    static CARAPI_(ICDOMConfigurationImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDOMConfigurationImplClassObject*)pObj->Probe(EIID_ICDOMConfigurationImplClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("4CEF763B-8312-1806-2C2C-ABA7C7E80F0C")
ICDOMErrorImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDOMErrorImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDOMErrorImplClassObject*)pObj->Probe(EIID_ICDOMErrorImplClassObject);
    }

    static CARAPI_(ICDOMErrorImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDOMErrorImplClassObject*)pObj->Probe(EIID_ICDOMErrorImplClassObject);
    }

    virtual CARAPI CreateObjectWithSeverityType(
        /* [in] */ _ELASTOS Int16 severity,
        /* [in] */ const _ELASTOS String& type,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("3DDF7E3F-8312-1806-2CD0-2301BF9E1EA3")
ICDOMImplementationImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDOMImplementationImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDOMImplementationImplClassObject*)pObj->Probe(EIID_ICDOMImplementationImplClassObject);
    }

    static CARAPI_(ICDOMImplementationImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDOMImplementationImplClassObject*)pObj->Probe(EIID_ICDOMImplementationImplClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("2397843B-8312-1806-2CD0-2301BF5E0414")
ICDOMImplementationImplHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDOMImplementationImplHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDOMImplementationImplHelperClassObject*)pObj->Probe(EIID_ICDOMImplementationImplHelperClassObject);
    }

    static CARAPI_(ICDOMImplementationImplHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDOMImplementationImplHelperClassObject*)pObj->Probe(EIID_ICDOMImplementationImplHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("3272932B-8312-CB59-EBE9-31FA03430D15")
ICDocumentTypeImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDocumentTypeImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentTypeImplClassObject*)pObj->Probe(EIID_ICDocumentTypeImplClassObject);
    }

    static CARAPI_(ICDocumentTypeImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDocumentTypeImplClassObject*)pObj->Probe(EIID_ICDocumentTypeImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentQualifiedNamePublicIdSystemId(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ const _ELASTOS String& publicId,
        /* [in] */ const _ELASTOS String& systemId,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("610DA624-0312-2F07-50BC-AFA7C7E80F0C")
ICElementImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICElementImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICElementImplClassObject*)pObj->Probe(EIID_ICElementImplClassObject);
    }

    static CARAPI_(ICElementImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICElementImplClassObject*)pObj->Probe(EIID_ICElementImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentNamespaceURIQualifiedName(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDocumentName(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("8F8D7C50-0312-2907-7506-79DD65E7092F")
ICElementAttrNamedNodeMapImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICElementAttrNamedNodeMapImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICElementAttrNamedNodeMapImplClassObject*)pObj->Probe(EIID_ICElementAttrNamedNodeMapImplClassObject);
    }

    static CARAPI_(ICElementAttrNamedNodeMapImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICElementAttrNamedNodeMapImplClassObject*)pObj->Probe(EIID_ICElementAttrNamedNodeMapImplClassObject);
    }

    virtual CARAPI CreateObjectWithEle(
        /* [in] */ Org::W3c::Dom::IElement * ele,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("296A8C22-0312-3107-6EB0-B8C1A39E1EA3")
ICEntityImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICEntityImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEntityImplClassObject*)pObj->Probe(EIID_ICEntityImplClassObject);
    }

    static CARAPI_(ICEntityImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEntityImplClassObject*)pObj->Probe(EIID_ICEntityImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentNotationNamePublicIDSystemID(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("173D7D5D-8312-1827-D364-C31B03149617")
ICEntityReferenceImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICEntityReferenceImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEntityReferenceImplClassObject*)pObj->Probe(EIID_ICEntityReferenceImplClassObject);
    }

    static CARAPI_(ICEntityReferenceImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEntityReferenceImplClassObject*)pObj->Probe(EIID_ICEntityReferenceImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentName(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("1A9F8938-8312-320B-4EA0-D0584F8FD11F")
ICNodeListImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICNodeListImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNodeListImplClassObject*)pObj->Probe(EIID_ICNodeListImplClassObject);
    }

    static CARAPI_(ICNodeListImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNodeListImplClassObject*)pObj->Probe(EIID_ICNodeListImplClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithList(
        /* [in] */ Elastos::Utility::IList * list,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("D1F18E27-8312-320B-6E90-805F4F8FD11F")
ICNotationImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICNotationImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNotationImplClassObject*)pObj->Probe(EIID_ICNotationImplClassObject);
    }

    static CARAPI_(ICNotationImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNotationImplClassObject*)pObj->Probe(EIID_ICNotationImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentNotationNamePublicIDSystemID(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("6CCF8928-0312-F5B4-0FDA-B851038709F8")
ICProcessingInstructionImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICProcessingInstructionImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICProcessingInstructionImplClassObject*)pObj->Probe(EIID_ICProcessingInstructionImplClassObject);
    }

    static CARAPI_(ICProcessingInstructionImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICProcessingInstructionImplClassObject*)pObj->Probe(EIID_ICProcessingInstructionImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentTargetData(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& target,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
CAR_INTERFACE("25A1722F-8312-F5E0-F418-FD81A1868A1F")
ICTextImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTextImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTextImplClassObject*)pObj->Probe(EIID_ICTextImplClassObject);
    }

    static CARAPI_(ICTextImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTextImplClassObject*)pObj->Probe(EIID_ICTextImplClassObject);
    }

    virtual CARAPI CreateObjectWithDocumentData(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("40327E45-0312-1C05-2E04-C0F06ADA1A06")
ICASN1OctetStringClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1OctetStringClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1OctetStringClassObject*)pObj->Probe(EIID_ICASN1OctetStringClassObject);
    }

    static CARAPI_(ICASN1OctetStringClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1OctetStringClassObject*)pObj->Probe(EIID_ICASN1OctetStringClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("25EA845A-0312-1C05-2E04-C0F06ADA9A08")
ICASN1OctetStringHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1OctetStringHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1OctetStringHelperClassObject*)pObj->Probe(EIID_ICASN1OctetStringHelperClassObject);
    }

    static CARAPI_(ICASN1OctetStringHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1OctetStringHelperClassObject*)pObj->Probe(EIID_ICASN1OctetStringHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("B5DAD321-0312-3532-FEC9-464102861EA3")
ICBerInputStreamClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBerInputStreamClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBerInputStreamClassObject*)pObj->Probe(EIID_ICBerInputStreamClassObject);
    }

    static CARAPI_(ICBerInputStreamClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBerInputStreamClassObject*)pObj->Probe(EIID_ICBerInputStreamClassObject);
    }

    virtual CARAPI CreateObjectWithEncoded(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithEncodedOffsetExpectedLength(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithIs(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithIsInitialSize(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ _ELASTOS Int32 initialSize,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("FBE87E22-0312-3532-A4CA-464102861EA3")
ICBerOutputStreamClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBerOutputStreamClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBerOutputStreamClassObject*)pObj->Probe(EIID_ICBerOutputStreamClassObject);
    }

    static CARAPI_(ICBerOutputStreamClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBerOutputStreamClassObject*)pObj->Probe(EIID_ICBerOutputStreamClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("2BD6B624-8312-F706-FFC9-464102861EA3")
ICDerInputStreamClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDerInputStreamClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDerInputStreamClassObject*)pObj->Probe(EIID_ICDerInputStreamClassObject);
    }

    static CARAPI_(ICDerInputStreamClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDerInputStreamClassObject*)pObj->Probe(EIID_ICDerInputStreamClassObject);
    }

    virtual CARAPI CreateObjectWithEncoded(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithEncodedOffsetExpectedLength(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithIs(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("32647D2B-8312-F706-A5CA-464102861EA3")
ICDerOutputStreamClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDerOutputStreamClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDerOutputStreamClassObject*)pObj->Probe(EIID_ICDerOutputStreamClassObject);
    }

    static CARAPI_(ICDerOutputStreamClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDerOutputStreamClassObject*)pObj->Probe(EIID_ICDerOutputStreamClassObject);
    }

    virtual CARAPI CreateObjectWithAsn1Object(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1,
        /* [in] */ IInterface * object,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("CEF47633-0312-1C05-2E04-501083871EA3")
ICASN1AnyClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1AnyClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1AnyClassObject*)pObj->Probe(EIID_ICASN1AnyClassObject);
    }

    static CARAPI_(ICASN1AnyClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1AnyClassObject*)pObj->Probe(EIID_ICASN1AnyClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("9FB37C39-0312-1C05-2E04-58C0E2066C3D")
ICASN1BitStringClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1BitStringClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1BitStringClassObject*)pObj->Probe(EIID_ICASN1BitStringClassObject);
    }

    static CARAPI_(ICASN1BitStringClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1BitStringClassObject*)pObj->Probe(EIID_ICASN1BitStringClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("15E0923B-8312-2C05-6EC0-D663F407861A")
ICBitStringClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBitStringClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBitStringClassObject*)pObj->Probe(EIID_ICBitStringClassObject);
    }

    static CARAPI_(ICBitStringClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBitStringClassObject*)pObj->Probe(EIID_ICBitStringClassObject);
    }

    virtual CARAPI CreateObjectWithBytesUnusedBits(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * bytes,
        /* [in] */ _ELASTOS Int32 unusedBits,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithValues(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * values,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("002A7A0A-A312-5770-B0C8-F28B9231F392")
ICASN1BooleanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1BooleanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1BooleanClassObject*)pObj->Probe(EIID_ICASN1BooleanClassObject);
    }

    static CARAPI_(ICASN1BooleanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1BooleanClassObject*)pObj->Probe(EIID_ICASN1BooleanClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("25B97D17-A312-5770-E0C4-388CD6E48D9E")
ICASN1EnumeratedClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1EnumeratedClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1EnumeratedClassObject*)pObj->Probe(EIID_ICASN1EnumeratedClassObject);
    }

    static CARAPI_(ICASN1EnumeratedClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1EnumeratedClassObject*)pObj->Probe(EIID_ICASN1EnumeratedClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("ED60A20E-A312-5770-E0EC-F3CB9AECCDBC")
ICASN1ExplicitClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1ExplicitClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1ExplicitClassObject*)pObj->Probe(EIID_ICASN1ExplicitClassObject);
    }

    static CARAPI_(ICASN1ExplicitClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1ExplicitClassObject*)pObj->Probe(EIID_ICASN1ExplicitClassObject);
    }

    virtual CARAPI CreateObjectWithTagNumberType(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTagClassTagNumberType(
        /* [in] */ _ELASTOS Int32 tagClass,
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("806D8209-A312-5770-00A1-315A932FDBA3")
ICASN1GeneralizedTimeClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1GeneralizedTimeClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1GeneralizedTimeClassObject*)pObj->Probe(EIID_ICASN1GeneralizedTimeClassObject);
    }

    static CARAPI_(ICASN1GeneralizedTimeClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1GeneralizedTimeClassObject*)pObj->Probe(EIID_ICASN1GeneralizedTimeClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("31B27D0F-A312-5770-20C1-F3CB9AECCDBC")
ICASN1ImplicitClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1ImplicitClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1ImplicitClassObject*)pObj->Probe(EIID_ICASN1ImplicitClassObject);
    }

    static CARAPI_(ICASN1ImplicitClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1ImplicitClassObject*)pObj->Probe(EIID_ICASN1ImplicitClassObject);
    }

    virtual CARAPI CreateObjectWithTagNumberType(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("04187A38-0312-1C05-2E04-288842C57D3D")
ICASN1IntegerClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1IntegerClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1IntegerClassObject*)pObj->Probe(EIID_ICASN1IntegerClassObject);
    }

    static CARAPI_(ICASN1IntegerClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1IntegerClassObject*)pObj->Probe(EIID_ICASN1IntegerClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("D56A8D48-8312-562F-96B1-E8F68C81491B")
ICObjectIdentifierClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICObjectIdentifierClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICObjectIdentifierClassObject*)pObj->Probe(EIID_ICObjectIdentifierClassObject);
    }

    static CARAPI_(ICObjectIdentifierClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICObjectIdentifierClassObject*)pObj->Probe(EIID_ICObjectIdentifierClassObject);
    }

    virtual CARAPI CreateObjectWithOid(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithStrOid(
        /* [in] */ const _ELASTOS String& strOid,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("D3FB7635-0312-1C05-2E04-C0C0E2841EA3")
ICASN1OidClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1OidClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1OidClassObject*)pObj->Probe(EIID_ICASN1OidClassObject);
    }

    static CARAPI_(ICASN1OidClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1OidClassObject*)pObj->Probe(EIID_ICASN1OidClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("106D6F3C-0312-1C05-2E04-D0ACC7E80F0C")
ICASN1SetClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1SetClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1SetClassObject*)pObj->Probe(EIID_ICASN1SetClassObject);
    }

    static CARAPI_(ICASN1SetClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1SetClassObject*)pObj->Probe(EIID_ICASN1SetClassObject);
    }

    virtual CARAPI CreateObjectWithType(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("C1067138-0312-1C05-2E04-D0BC548FD11F")
ICASN1SetOfClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1SetOfClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1SetOfClassObject*)pObj->Probe(EIID_ICASN1SetOfClassObject);
    }

    static CARAPI_(ICASN1SetOfClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1SetOfClassObject*)pObj->Probe(EIID_ICASN1SetOfClassObject);
    }

    virtual CARAPI CreateObjectWithType(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
CAR_INTERFACE("27487A2E-0312-1C05-2E04-F0D08141713D")
ICASN1UTCTimeClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICASN1UTCTimeClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1UTCTimeClassObject*)pObj->Probe(EIID_ICASN1UTCTimeClassObject);
    }

    static CARAPI_(ICASN1UTCTimeClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICASN1UTCTimeClassObject*)pObj->Probe(EIID_ICASN1UTCTimeClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Fortress {
CAR_INTERFACE("9C107936-0312-3107-54B0-8881428FD11F")
ICEngineClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICEngineClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEngineClassObject*)pObj->Probe(EIID_ICEngineClassObject);
    }

    static CARAPI_(ICEngineClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEngineClassObject*)pObj->Probe(EIID_ICEngineClassObject);
    }

    virtual CARAPI CreateObjectWithServiceName(
        /* [in] */ const _ELASTOS String& serviceName,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs10 {
CAR_INTERFACE("12F7B653-0312-CF06-3E77-E394662E6406")
ICCertificationRequestClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificationRequestClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificationRequestClassObject*)pObj->Probe(EIID_ICCertificationRequestClassObject);
    }

    static CARAPI_(ICCertificationRequestClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificationRequestClassObject*)pObj->Probe(EIID_ICCertificationRequestClassObject);
    }

    virtual CARAPI CreateObjectWithInfoAlgIdSignature(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithInfoAlgIdSignatureEncoding(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs10 {
CAR_INTERFACE("B4E0AC52-0312-CF06-3E77-E394662E642D")
ICCertificationRequestInfoClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificationRequestInfoClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificationRequestInfoClassObject*)pObj->Probe(EIID_ICCertificationRequestInfoClassObject);
    }

    static CARAPI_(ICCertificationRequestInfoClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificationRequestInfoClassObject*)pObj->Probe(EIID_ICCertificationRequestInfoClassObject);
    }

    virtual CARAPI CreateObjectWithVSubjectSubjectPublicKeyInfoAttributesEncoding(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * subject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * subjectPublicKeyInfo,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs7 {
CAR_INTERFACE("76478150-0312-9A22-63DC-D01201C58BB0")
ICContentInfoHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICContentInfoHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICContentInfoHelperClassObject*)pObj->Probe(EIID_ICContentInfoHelperClassObject);
    }

    static CARAPI_(ICContentInfoHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICContentInfoHelperClassObject*)pObj->Probe(EIID_ICContentInfoHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs8 {
CAR_INTERFACE("4125DB4D-8312-7A0C-7B6B-A6604D0B0393")
ICPrivateKeyInfoClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPrivateKeyInfoClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPrivateKeyInfoClassObject*)pObj->Probe(EIID_ICPrivateKeyInfoClassObject);
    }

    static CARAPI_(ICPrivateKeyInfoClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPrivateKeyInfoClassObject*)pObj->Probe(EIID_ICPrivateKeyInfoClassObject);
    }

    virtual CARAPI CreateObjectWithVPrivateKeyAlgorithmPrivateKeyAttributes(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithVPrivateKeyAlgorithmPrivateKeyAttributesEncoding(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("F51B7803-3312-B591-77B3-AFCDBCA46D63")
ICJarUtilsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICJarUtilsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICJarUtilsClassObject*)pObj->Probe(EIID_ICJarUtilsClassObject);
    }

    static CARAPI_(ICJarUtilsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICJarUtilsClassObject*)pObj->Probe(EIID_ICJarUtilsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("5D817B31-0312-112C-50BC-98715F8FD11F")
ICArrayHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICArrayHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICArrayHelperClassObject*)pObj->Probe(EIID_ICArrayHelperClassObject);
    }

    static CARAPI_(ICArrayHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICArrayHelperClassObject*)pObj->Probe(EIID_ICArrayHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("370B9E59-8312-562F-96B1-E8F66C8B87CF")
ICObjectIdentifierInUtilsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICObjectIdentifierInUtilsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICObjectIdentifierInUtilsClassObject*)pObj->Probe(EIID_ICObjectIdentifierInUtilsClassObject);
    }

    static CARAPI_(ICObjectIdentifierInUtilsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICObjectIdentifierInUtilsClassObject*)pObj->Probe(EIID_ICObjectIdentifierInUtilsClassObject);
    }

    virtual CARAPI CreateObjectWithOid(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithOidNameOidGroup(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ IInterface * oidGroup,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
CAR_INTERFACE("E5FA8339-0312-2F05-5404-6D39E37E0414")
ICAlgNameMapperHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAlgNameMapperHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAlgNameMapperHelperClassObject*)pObj->Probe(EIID_ICAlgNameMapperHelperClassObject);
    }

    static CARAPI_(ICAlgNameMapperHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAlgNameMapperHelperClassObject*)pObj->Probe(EIID_ICAlgNameMapperHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("F0408A28-8312-1299-60CC-A8C122C60D3D")
ICMessageImprintClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICMessageImprintClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICMessageImprintClassObject*)pObj->Probe(EIID_ICMessageImprintClassObject);
    }

    static CARAPI_(ICMessageImprintClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICMessageImprintClassObject*)pObj->Probe(EIID_ICMessageImprintClassObject);
    }

    virtual CARAPI CreateObjectWithPAlgIdPHashedMessage(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pHashedMessage,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("0653932E-8312-140C-24B0-C661639F1EA3")
ICPKIStatusInfoClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPKIStatusInfoClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPKIStatusInfoClassObject*)pObj->Probe(EIID_ICPKIStatusInfoClassObject);
    }

    static CARAPI_(ICPKIStatusInfoClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPKIStatusInfoClassObject*)pObj->Probe(EIID_ICPKIStatusInfoClassObject);
    }

    virtual CARAPI CreateObjectWithPkiStatusPStatusStringFailInfo(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatus * pkiStatus,
        /* [in] */ Elastos::Utility::IList * pStatusString,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIFailureInfo * failInfo,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("0795862F-8312-140C-24B0-C661635F0414")
ICPKIStatusInfoHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPKIStatusInfoHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPKIStatusInfoHelperClassObject*)pObj->Probe(EIID_ICPKIStatusInfoHelperClassObject);
    }

    static CARAPI_(ICPKIStatusInfoHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPKIStatusInfoHelperClassObject*)pObj->Probe(EIID_ICPKIStatusInfoHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("37E0C226-8312-1C0E-3AEC-D363F407861A")
ICTSTInfoClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTSTInfoClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTSTInfoClassObject*)pObj->Probe(EIID_ICTSTInfoClassObject);
    }

    static CARAPI_(ICTSTInfoClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTSTInfoClassObject*)pObj->Probe(EIID_ICTSTInfoClassObject);
    }

    virtual CARAPI CreateObjectWithVerPolicyPMessageImprintPSerialNumberPGenTimePAccuracyOrderingPNoncePTsaPExtensions(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ const _ELASTOS String& policy,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Elastos::Utility::IDate * pGenTime,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pAccuracy,
        /* [in] */ _ELASTOS Boolean ordering,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pTsa,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("29E2800C-D312-9D71-14A7-7284BE335A33")
ICTSTInfoHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTSTInfoHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTSTInfoHelperClassObject*)pObj->Probe(EIID_ICTSTInfoHelperClassObject);
    }

    static CARAPI_(ICTSTInfoHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTSTInfoHelperClassObject*)pObj->Probe(EIID_ICTSTInfoHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("E894EF08-D312-30B1-CADD-243C6F28CDBC")
ICTimeStampReqClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTimeStampReqClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimeStampReqClassObject*)pObj->Probe(EIID_ICTimeStampReqClassObject);
    }

    static CARAPI_(ICTimeStampReqClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimeStampReqClassObject*)pObj->Probe(EIID_ICTimeStampReqClassObject);
    }

    virtual CARAPI CreateObjectWithVerPMessageImprintReqPolicyPNonceCertReqPExtensions(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithVerMessageImprintReqPolicyNonceCertReqExtensionsEncoding(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * messageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * nonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * extensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("864E8508-D312-30B1-CADD-243C6F281DA1")
ICTimeStampReqHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTimeStampReqHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimeStampReqHelperClassObject*)pObj->Probe(EIID_ICTimeStampReqHelperClassObject);
    }

    static CARAPI_(ICTimeStampReqHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimeStampReqHelperClassObject*)pObj->Probe(EIID_ICTimeStampReqHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("8ED58B1E-D312-30B1-CADD-243C6FA83D33")
ICTimeStampRespClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTimeStampRespClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimeStampRespClassObject*)pObj->Probe(EIID_ICTimeStampRespClassObject);
    }

    static CARAPI_(ICTimeStampRespClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimeStampRespClassObject*)pObj->Probe(EIID_ICTimeStampRespClassObject);
    }

    virtual CARAPI CreateObjectWithPStatusPTimeStampToken(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo * pStatus,
        /* [in] */ Org::Apache::Harmony::Security::Pkcs7::IContentInfo * pTimeStampToken,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
CAR_INTERFACE("B6AB8610-D312-30B1-CADD-243C6FA83D47")
ICTimeStampRespHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTimeStampRespHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimeStampRespHelperClassObject*)pObj->Probe(EIID_ICTimeStampRespHelperClassObject);
    }

    static CARAPI_(ICTimeStampRespHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTimeStampRespHelperClassObject*)pObj->Probe(EIID_ICTimeStampRespHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("96EA8027-8312-0D21-F09B-A8C162067C3D")
ICAccessDescriptionClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAccessDescriptionClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAccessDescriptionClassObject*)pObj->Probe(EIID_ICAccessDescriptionClassObject);
    }

    static CARAPI_(ICAccessDescriptionClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAccessDescriptionClassObject*)pObj->Probe(EIID_ICAccessDescriptionClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("7CA2864E-0312-9E05-A219-31A1376D0414")
ICAccessDescriptionHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAccessDescriptionHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAccessDescriptionHelperClassObject*)pObj->Probe(EIID_ICAccessDescriptionHelperClassObject);
    }

    static CARAPI_(ICAccessDescriptionHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAccessDescriptionHelperClassObject*)pObj->Probe(EIID_ICAccessDescriptionHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("6A98A44A-0312-2F05-E2E9-2D0DC3CA3216")
ICAlgorithmIdentifierClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAlgorithmIdentifierClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAlgorithmIdentifierClassObject*)pObj->Probe(EIID_ICAlgorithmIdentifierClassObject);
    }

    static CARAPI_(ICAlgorithmIdentifierClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAlgorithmIdentifierClassObject*)pObj->Probe(EIID_ICAlgorithmIdentifierClassObject);
    }

    virtual CARAPI CreateObjectWithAlgorithm(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithAlgorithmPParameters(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pParameters,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("32188842-0312-2F05-E2E9-2D0DC3CA3216")
ICAlgorithmIdentifierHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAlgorithmIdentifierHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAlgorithmIdentifierHelperClassObject*)pObj->Probe(EIID_ICAlgorithmIdentifierHelperClassObject);
    }

    static CARAPI_(ICAlgorithmIdentifierHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAlgorithmIdentifierHelperClassObject*)pObj->Probe(EIID_ICAlgorithmIdentifierHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("4EFB8146-0312-3505-9D3D-DAD865270393")
ICAlternativeNameClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAlternativeNameClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAlternativeNameClassObject*)pObj->Probe(EIID_ICAlternativeNameClassObject);
    }

    static CARAPI_(ICAlternativeNameClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAlternativeNameClassObject*)pObj->Probe(EIID_ICAlternativeNameClassObject);
    }

    virtual CARAPI CreateObjectWithWhichPEncoding(
        /* [in] */ _ELASTOS Boolean which,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("0A91B659-0312-3805-46EB-954DC19A9565")
ICAuthorityKeyIdentifierClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAuthorityKeyIdentifierClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthorityKeyIdentifierClassObject*)pObj->Probe(EIID_ICAuthorityKeyIdentifierClassObject);
    }

    static CARAPI_(ICAuthorityKeyIdentifierClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthorityKeyIdentifierClassObject*)pObj->Probe(EIID_ICAuthorityKeyIdentifierClassObject);
    }

    virtual CARAPI CreateObjectWithPKeyIdentifierPAuthorityCertIssuerPAuthorityCertSerialNumber(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pAuthorityCertIssuer,
        /* [in] */ Elastos::Math::IBigInteger * pAuthorityCertSerialNumber,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("1DE08B46-0312-3805-46EB-954DC19A9565")
ICAuthorityKeyIdentifierHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAuthorityKeyIdentifierHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthorityKeyIdentifierHelperClassObject*)pObj->Probe(EIID_ICAuthorityKeyIdentifierHelperClassObject);
    }

    static CARAPI_(ICAuthorityKeyIdentifierHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthorityKeyIdentifierHelperClassObject*)pObj->Probe(EIID_ICAuthorityKeyIdentifierHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("4F757D45-8312-8B05-0612-817C57E20D1B")
ICBasicConstraintsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicConstraintsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicConstraintsClassObject*)pObj->Probe(EIID_ICBasicConstraintsClassObject);
    }

    static CARAPI_(ICBasicConstraintsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicConstraintsClassObject*)pObj->Probe(EIID_ICBasicConstraintsClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("8AF08549-8312-8B05-0612-817C57E20D1B")
ICBasicConstraintsHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicConstraintsHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicConstraintsHelperClassObject*)pObj->Probe(EIID_ICBasicConstraintsHelperClassObject);
    }

    static CARAPI_(ICBasicConstraintsHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicConstraintsHelperClassObject*)pObj->Probe(EIID_ICBasicConstraintsHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("D724AE5A-0312-1B06-2A20-599DA9730619")
ICCRLDistributionPointsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCRLDistributionPointsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCRLDistributionPointsClassObject*)pObj->Probe(EIID_ICCRLDistributionPointsClassObject);
    }

    static CARAPI_(ICCRLDistributionPointsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCRLDistributionPointsClassObject*)pObj->Probe(EIID_ICCRLDistributionPointsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDistributionPointsEncoding(
        /* [in] */ Elastos::Utility::IList * distributionPoints,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("DDB78A5C-0312-1B06-2A20-599DA9730619")
ICCRLDistributionPointsHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCRLDistributionPointsHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCRLDistributionPointsHelperClassObject*)pObj->Probe(EIID_ICCRLDistributionPointsHelperClassObject);
    }

    static CARAPI_(ICCRLDistributionPointsHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCRLDistributionPointsHelperClassObject*)pObj->Probe(EIID_ICCRLDistributionPointsHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("E0177603-C312-D56C-85C3-255A332F69DB")
ICCRLNumberClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCRLNumberClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCRLNumberClassObject*)pObj->Probe(EIID_ICCRLNumberClassObject);
    }

    static CARAPI_(ICCRLNumberClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCRLNumberClassObject*)pObj->Probe(EIID_ICCRLNumberClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("5B537E1A-C312-D56C-85C3-255A47E83BA3")
ICCRLNumberHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCRLNumberHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCRLNumberHelperClassObject*)pObj->Probe(EIID_ICCRLNumberHelperClassObject);
    }

    static CARAPI_(ICCRLNumberHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCRLNumberHelperClassObject*)pObj->Probe(EIID_ICCRLNumberHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("2979E65D-0312-CF06-3E77-EBA49981491B")
ICCertificateClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificateClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateClassObject*)pObj->Probe(EIID_ICCertificateClassObject);
    }

    static CARAPI_(ICCertificateClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateClassObject*)pObj->Probe(EIID_ICCertificateClassObject);
    }

    virtual CARAPI CreateObjectWithPTbsCertificatePSignatureAlgorithmPSignatureValue(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * pTbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTbsCertificateSignatureAlgorithmSignatureValueEncoding(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * tbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B6DD8009-C312-F5A0-CDA6-AC49DE6884BE")
ICCertificateHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificateHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateHelperClassObject*)pObj->Probe(EIID_ICCertificateHelperClassObject);
    }

    static CARAPI_(ICCertificateHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateHelperClassObject*)pObj->Probe(EIID_ICCertificateHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("19477E44-0312-CF06-3E77-EBA4F94AE467")
ICCertificateIssuerClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificateIssuerClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateIssuerClassObject*)pObj->Probe(EIID_ICCertificateIssuerClassObject);
    }

    static CARAPI_(ICCertificateIssuerClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateIssuerClassObject*)pObj->Probe(EIID_ICCertificateIssuerClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("94828656-0312-CF06-3E77-EBA4F94AE467")
ICCertificateIssuerHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificateIssuerHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateIssuerHelperClassObject*)pObj->Probe(EIID_ICCertificateIssuerHelperClassObject);
    }

    static CARAPI_(ICCertificateIssuerHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateIssuerHelperClassObject*)pObj->Probe(EIID_ICCertificateIssuerHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("7D0BE757-0312-CF06-3E77-EBA4B9824506")
ICCertificateListClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificateListClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateListClassObject*)pObj->Probe(EIID_ICCertificateListClassObject);
    }

    static CARAPI_(ICCertificateListClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateListClassObject*)pObj->Probe(EIID_ICCertificateListClassObject);
    }

    virtual CARAPI CreateObjectWithPTbsCertListPSignatureAlgorithmPSignatureValue(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPTbsCertListPSignatureAlgorithmPSignatureValueEncoding(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("F6FF8451-0312-CF06-3E77-EBA4B982C508")
ICCertificateListHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificateListHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateListHelperClassObject*)pObj->Probe(EIID_ICCertificateListHelperClassObject);
    }

    static CARAPI_(ICCertificateListHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificateListHelperClassObject*)pObj->Probe(EIID_ICCertificateListHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("4D86AC5E-0312-CF06-3E77-EBA43903D481")
ICCertificatePoliciesClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificatePoliciesClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificatePoliciesClassObject*)pObj->Probe(EIID_ICCertificatePoliciesClassObject);
    }

    static CARAPI_(ICCertificatePoliciesClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificatePoliciesClassObject*)pObj->Probe(EIID_ICCertificatePoliciesClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPolicyInformationsEncoding(
        /* [in] */ Elastos::Utility::IList * policyInformations,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("31288848-0312-CF06-3E77-EBA43903D481")
ICCertificatePoliciesHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCertificatePoliciesHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificatePoliciesHelperClassObject*)pObj->Probe(EIID_ICCertificatePoliciesHelperClassObject);
    }

    static CARAPI_(ICCertificatePoliciesHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCertificatePoliciesHelperClassObject*)pObj->Probe(EIID_ICCertificatePoliciesHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("77936E23-8312-1706-3290-A861E3BE1EA3")
ICDNParserClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDNParserClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDNParserClassObject*)pObj->Probe(EIID_ICDNParserClassObject);
    }

    static CARAPI_(ICDNParserClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDNParserClassObject*)pObj->Probe(EIID_ICDNParserClassObject);
    }

    virtual CARAPI CreateObjectWithDn(
        /* [in] */ const _ELASTOS String& dn,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("6E019945-0312-AB24-3375-CE2043E20D06")
ICDistributionPointClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDistributionPointClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDistributionPointClassObject*)pObj->Probe(EIID_ICDistributionPointClassObject);
    }

    static CARAPI_(ICDistributionPointClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDistributionPointClassObject*)pObj->Probe(EIID_ICDistributionPointClassObject);
    }

    virtual CARAPI CreateObjectWithPDistributionPointPReasonsPCRLIssuer(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pReasons,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pCRLIssuer,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("5C8E864E-0312-AB24-3375-CE2043E28D08")
ICDistributionPointHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDistributionPointHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDistributionPointHelperClassObject*)pObj->Probe(EIID_ICDistributionPointHelperClassObject);
    }

    static CARAPI_(ICDistributionPointHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDistributionPointHelperClassObject*)pObj->Probe(EIID_ICDistributionPointHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("9BA6AA48-0312-AB24-3375-CE2043E28D2E")
ICDistributionPointNameClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDistributionPointNameClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDistributionPointNameClassObject*)pObj->Probe(EIID_ICDistributionPointNameClassObject);
    }

    static CARAPI_(ICDistributionPointNameClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDistributionPointNameClassObject*)pObj->Probe(EIID_ICDistributionPointNameClassObject);
    }

    virtual CARAPI CreateObjectWithPFullName(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pFullName,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPNameRelativeToCRLIssuer(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pNameRelativeToCRLIssuer,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A0C78A53-0312-AB24-3375-CE2043E28D2E")
ICDistributionPointNameHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDistributionPointNameHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDistributionPointNameHelperClassObject*)pObj->Probe(EIID_ICDistributionPointNameHelperClassObject);
    }

    static CARAPI_(ICDistributionPointNameHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDistributionPointNameHelperClassObject*)pObj->Probe(EIID_ICDistributionPointNameHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("4C8B8D0B-E312-5234-46D6-377F9130CABC")
ICEDIPartyNameClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICEDIPartyNameClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEDIPartyNameClassObject*)pObj->Probe(EIID_ICEDIPartyNameClassObject);
    }

    static CARAPI_(ICEDIPartyNameClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEDIPartyNameClassObject*)pObj->Probe(EIID_ICEDIPartyNameClassObject);
    }

    virtual CARAPI CreateObjectWithNameAssignerPartyNameEncoding(
        /* [in] */ const _ELASTOS String& nameAssigner,
        /* [in] */ const _ELASTOS String& partyName,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("781C810A-E312-5234-46D6-377F91301AA1")
ICEDIPartyNameHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICEDIPartyNameHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEDIPartyNameHelperClassObject*)pObj->Probe(EIID_ICEDIPartyNameHelperClassObject);
    }

    static CARAPI_(ICEDIPartyNameHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEDIPartyNameHelperClassObject*)pObj->Probe(EIID_ICEDIPartyNameHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("5B947D05-E312-37EC-1A9F-E849A1BC6793")
ICExtendedKeyUsageClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICExtendedKeyUsageClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtendedKeyUsageClassObject*)pObj->Probe(EIID_ICExtendedKeyUsageClassObject);
    }

    static CARAPI_(ICExtendedKeyUsageClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtendedKeyUsageClassObject*)pObj->Probe(EIID_ICExtendedKeyUsageClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("970F8508-E312-37EC-1A9F-E849A1BC6793")
ICExtendedKeyUsageHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICExtendedKeyUsageHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtendedKeyUsageHelperClassObject*)pObj->Probe(EIID_ICExtendedKeyUsageHelperClassObject);
    }

    static CARAPI_(ICExtendedKeyUsageHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtendedKeyUsageHelperClassObject*)pObj->Probe(EIID_ICExtendedKeyUsageHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A502FA2E-8312-3767-50C4-88AFC7E80F0C")
ICExtensionClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICExtensionClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionClassObject*)pObj->Probe(EIID_ICExtensionClassObject);
    }

    static CARAPI_(ICExtensionClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionClassObject*)pObj->Probe(EIID_ICExtensionClassObject);
    }

    virtual CARAPI CreateObjectWithExtnIDCriticalPExtnValueObject(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * pExtnValueObject,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithExtnIDCriticalPExtnValue(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPExtnIDCriticalPExtnValue2(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithExtnIDPExtnValue(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPExtnIDPExtnValue2(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithExtnIDCriticalExtnValueRawExtnValueEncodingDecodedExtValue(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * extnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * rawExtnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * decodedExtValue,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("0E2D7E43-8312-9A28-632C-8E80E245D81A")
ICExtensionHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICExtensionHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionHelperClassObject*)pObj->Probe(EIID_ICExtensionHelperClassObject);
    }

    static CARAPI_(ICExtensionHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionHelperClassObject*)pObj->Probe(EIID_ICExtensionHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("9AEA7B37-8312-3767-50C4-88FF5D8FD11F")
ICExtensionValueClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICExtensionValueClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionValueClassObject*)pObj->Probe(EIID_ICExtensionValueClassObject);
    }

    static CARAPI_(ICExtensionValueClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionValueClassObject*)pObj->Probe(EIID_ICExtensionValueClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("5AFD942E-8312-3767-50C4-886F438FD11F")
ICExtensionsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICExtensionsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionsClassObject*)pObj->Probe(EIID_ICExtensionsClassObject);
    }

    static CARAPI_(ICExtensionsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionsClassObject*)pObj->Probe(EIID_ICExtensionsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPExtensions(
        /* [in] */ Elastos::Utility::IList * pExtensions,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("8B3C7F4F-8312-9A28-632C-B61101C58BB0")
ICExtensionsHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICExtensionsHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionsHelperClassObject*)pObj->Probe(EIID_ICExtensionsHelperClassObject);
    }

    static CARAPI_(ICExtensionsHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICExtensionsHelperClassObject*)pObj->Probe(EIID_ICExtensionsHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("16ECFC21-0312-2808-62DC-27F122A81EA3")
ICGeneralNameClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICGeneralNameClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralNameClassObject*)pObj->Probe(EIID_ICGeneralNameClassObject);
    }

    static CARAPI_(ICGeneralNameClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralNameClassObject*)pObj->Probe(EIID_ICGeneralNameClassObject);
    }

    virtual CARAPI CreateObjectWithTagName(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPName(
        /* [in] */ Org::Apache::Harmony::Security::X509::IOtherName * pName,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPName1(
        /* [in] */ Org::Apache::Harmony::Security::X509::IORAddress * pName1,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPName2(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pName2,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPName3(
        /* [in] */ Org::Apache::Harmony::Security::X509::IEDIPartyName * pName3,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPName4(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName4,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTagPName1(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName1,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("E6D1800D-0312-31A1-5A93-EF45C26884BE")
ICGeneralNameHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICGeneralNameHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralNameHelperClassObject*)pObj->Probe(EIID_ICGeneralNameHelperClassObject);
    }

    static CARAPI_(ICGeneralNameHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralNameHelperClassObject*)pObj->Probe(EIID_ICGeneralNameHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("FB29BC36-0312-2808-62DC-27F122A80D3D")
ICGeneralNamesClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICGeneralNamesClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralNamesClassObject*)pObj->Probe(EIID_ICGeneralNamesClassObject);
    }

    static CARAPI_(ICGeneralNamesClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralNamesClassObject*)pObj->Probe(EIID_ICGeneralNamesClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPGeneralNames(
        /* [in] */ Elastos::Utility::IList * pGeneralNames,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithGeneralNamesEncoding(
        /* [in] */ Elastos::Utility::IList * generalNames,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("63E1810F-0312-31A1-5A93-EF45C2A81DA1")
ICGeneralNamesHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICGeneralNamesHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralNamesHelperClassObject*)pObj->Probe(EIID_ICGeneralNamesHelperClassObject);
    }

    static CARAPI_(ICGeneralNamesHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralNamesHelperClassObject*)pObj->Probe(EIID_ICGeneralNamesHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("C8CC850D-0312-31A1-5A93-2F8797778DA2")
ICGeneralSubtreeClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICGeneralSubtreeClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralSubtreeClassObject*)pObj->Probe(EIID_ICGeneralSubtreeClassObject);
    }

    static CARAPI_(ICGeneralSubtreeClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralSubtreeClassObject*)pObj->Probe(EIID_ICGeneralSubtreeClassObject);
    }

    virtual CARAPI CreateObjectWithPBaseMinimumMaximum(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pBase,
        /* [in] */ _ELASTOS Int32 minimum,
        /* [in] */ _ELASTOS Int32 maximum,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("0559830E-0312-31A1-5A93-2F8797778DA2")
ICGeneralSubtreeHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICGeneralSubtreeHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralSubtreeHelperClassObject*)pObj->Probe(EIID_ICGeneralSubtreeHelperClassObject);
    }

    static CARAPI_(ICGeneralSubtreeHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralSubtreeHelperClassObject*)pObj->Probe(EIID_ICGeneralSubtreeHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("EF5D8358-0312-CC08-9E01-E280A3846A69")
ICGeneralSubtreesClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICGeneralSubtreesClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralSubtreesClassObject*)pObj->Probe(EIID_ICGeneralSubtreesClassObject);
    }

    static CARAPI_(ICGeneralSubtreesClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralSubtreesClassObject*)pObj->Probe(EIID_ICGeneralSubtreesClassObject);
    }

    virtual CARAPI CreateObjectWithPGeneralSubtrees(
        /* [in] */ Elastos::Utility::IList * pGeneralSubtrees,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("14D68452-0312-CC08-9E01-E280A3846A69")
ICGeneralSubtreesHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICGeneralSubtreesHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralSubtreesHelperClassObject*)pObj->Probe(EIID_ICGeneralSubtreesHelperClassObject);
    }

    static CARAPI_(ICGeneralSubtreesHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICGeneralSubtreesHelperClassObject*)pObj->Probe(EIID_ICGeneralSubtreesHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("CB0E8E23-8312-437D-74EB-31FA03430D15")
ICInfoAccessSyntaxClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICInfoAccessSyntaxClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInfoAccessSyntaxClassObject*)pObj->Probe(EIID_ICInfoAccessSyntaxClassObject);
    }

    static CARAPI_(ICInfoAccessSyntaxClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInfoAccessSyntaxClassObject*)pObj->Probe(EIID_ICInfoAccessSyntaxClassObject);
    }

    virtual CARAPI CreateObjectWithAccessDescriptionsEncoding(
        /* [in] */ Elastos::Utility::IList * accessDescriptions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("3F51852C-8312-437D-7447-40F162C67D3D")
ICInfoAccessSyntaxHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICInfoAccessSyntaxHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInfoAccessSyntaxHelperClassObject*)pObj->Probe(EIID_ICInfoAccessSyntaxHelperClassObject);
    }

    static CARAPI_(ICInfoAccessSyntaxHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInfoAccessSyntaxHelperClassObject*)pObj->Probe(EIID_ICInfoAccessSyntaxHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("35AA7D1D-2312-2BC5-5BB2-B712F399FCB2")
ICInhibitAnyPolicyClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICInhibitAnyPolicyClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInhibitAnyPolicyClassObject*)pObj->Probe(EIID_ICInhibitAnyPolicyClassObject);
    }

    static CARAPI_(ICInhibitAnyPolicyClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInhibitAnyPolicyClassObject*)pObj->Probe(EIID_ICInhibitAnyPolicyClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("93448F2C-0312-2C83-6EF0-C8A4C7E80F0C")
ICInvalidityDateClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICInvalidityDateClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInvalidityDateClassObject*)pObj->Probe(EIID_ICInvalidityDateClassObject);
    }

    static CARAPI_(ICInvalidityDateClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInvalidityDateClassObject*)pObj->Probe(EIID_ICInvalidityDateClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDate(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("DC7E833E-0312-2C83-6EF0-C81401C58B19")
ICInvalidityDateHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICInvalidityDateHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInvalidityDateHelperClassObject*)pObj->Probe(EIID_ICInvalidityDateHelperClassObject);
    }

    static CARAPI_(ICInvalidityDateHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInvalidityDateHelperClassObject*)pObj->Probe(EIID_ICInvalidityDateHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("44BC9E55-8312-912B-2122-599DA9730619")
ICIssuingDistributionPointClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICIssuingDistributionPointClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICIssuingDistributionPointClassObject*)pObj->Probe(EIID_ICIssuingDistributionPointClassObject);
    }

    static CARAPI_(ICIssuingDistributionPointClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICIssuingDistributionPointClassObject*)pObj->Probe(EIID_ICIssuingDistributionPointClassObject);
    }

    virtual CARAPI CreateObjectWithPDistributionPointPOnlySomeReasons(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pOnlySomeReasons,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("C93C8D5D-8312-912B-2122-599DA9730619")
ICIssuingDistributionPointHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICIssuingDistributionPointHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICIssuingDistributionPointHelperClassObject*)pObj->Probe(EIID_ICIssuingDistributionPointHelperClassObject);
    }

    static CARAPI_(ICIssuingDistributionPointHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICIssuingDistributionPointHelperClassObject*)pObj->Probe(EIID_ICIssuingDistributionPointHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("02227525-8312-1E86-6C90-5081428FD11F")
ICKeyUsageClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICKeyUsageClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICKeyUsageClassObject*)pObj->Probe(EIID_ICKeyUsageClassObject);
    }

    static CARAPI_(ICKeyUsageClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICKeyUsageClassObject*)pObj->Probe(EIID_ICKeyUsageClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("4140CF5C-8312-3B2E-8940-BE2BF1860D06")
ICNameConstraintsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICNameConstraintsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNameConstraintsClassObject*)pObj->Probe(EIID_ICNameConstraintsClassObject);
    }

    static CARAPI_(ICNameConstraintsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNameConstraintsClassObject*)pObj->Probe(EIID_ICNameConstraintsClassObject);
    }

    virtual CARAPI CreateObjectWithPPermittedSubtreesPExcludedSubtrees(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pPermittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pExcludedSubtrees,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPermittedSubtreesExcludedSubtreesEncoding(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * permittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * excludedSubtrees,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("D5078457-8312-3B2E-8940-BE2BF1868D08")
ICNameConstraintsHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICNameConstraintsHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNameConstraintsHelperClassObject*)pObj->Probe(EIID_ICNameConstraintsHelperClassObject);
    }

    static CARAPI_(ICNameConstraintsHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNameConstraintsHelperClassObject*)pObj->Probe(EIID_ICNameConstraintsHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("4CA7783D-0312-1B0C-88E8-31FA03430D15")
ICORAddressClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICORAddressClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICORAddressClassObject*)pObj->Probe(EIID_ICORAddressClassObject);
    }

    static CARAPI_(ICORAddressClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICORAddressClassObject*)pObj->Probe(EIID_ICORAddressClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("325F7E3D-0312-1B0C-8844-40F162C67D3D")
ICORAddressHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICORAddressHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICORAddressHelperClassObject*)pObj->Probe(EIID_ICORAddressHelperClassObject);
    }

    static CARAPI_(ICORAddressHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICORAddressHelperClassObject*)pObj->Probe(EIID_ICORAddressHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("31DF9C3B-0312-370C-56DC-0FAAC7E80F0C")
ICOtherNameClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICOtherNameClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICOtherNameClassObject*)pObj->Probe(EIID_ICOtherNameClassObject);
    }

    static CARAPI_(ICOtherNameClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICOtherNameClassObject*)pObj->Probe(EIID_ICOtherNameClassObject);
    }

    virtual CARAPI CreateObjectWithTypeIDPValue(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pValue,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTypeIDValueEncoding(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * value,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("393C7E0F-8312-2BDD-5A5F-248C46E83BA3")
ICOtherNameHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICOtherNameHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICOtherNameHelperClassObject*)pObj->Probe(EIID_ICOtherNameHelperClassObject);
    }

    static CARAPI_(ICOtherNameHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICOtherNameHelperClassObject*)pObj->Probe(EIID_ICOtherNameHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B7E2FD5A-8312-500C-07F2-2002F9AEC41B")
ICPolicyConstraintsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPolicyConstraintsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyConstraintsClassObject*)pObj->Probe(EIID_ICPolicyConstraintsClassObject);
    }

    static CARAPI_(ICPolicyConstraintsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyConstraintsClassObject*)pObj->Probe(EIID_ICPolicyConstraintsClassObject);
    }

    virtual CARAPI CreateObjectWithPRequireExplicitPolicyPInhibitPolicyMapping(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPRequireExplicitPolicyPInhibitPolicyMappingPEncoding(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("49A3864E-8312-500C-07F2-2002F9AEC41B")
ICPolicyConstraintsHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPolicyConstraintsHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyConstraintsHelperClassObject*)pObj->Probe(EIID_ICPolicyConstraintsHelperClassObject);
    }

    static CARAPI_(ICPolicyConstraintsHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyConstraintsHelperClassObject*)pObj->Probe(EIID_ICPolicyConstraintsHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("1534853F-8312-FAAF-F418-FD81A1868A1F")
ICPolicyInformationClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPolicyInformationClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyInformationClassObject*)pObj->Probe(EIID_ICPolicyInformationClassObject);
    }

    static CARAPI_(ICPolicyInformationClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyInformationClassObject*)pObj->Probe(EIID_ICPolicyInformationClassObject);
    }

    virtual CARAPI CreateObjectWithPolicyIdentifier(
        /* [in] */ const _ELASTOS String& policyIdentifier,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("4DB18631-8312-FAAF-22A0-7831E3BE1EA3")
ICPolicyInformationHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPolicyInformationHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyInformationHelperClassObject*)pObj->Probe(EIID_ICPolicyInformationHelperClassObject);
    }

    static CARAPI_(ICPolicyInformationHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyInformationHelperClassObject*)pObj->Probe(EIID_ICPolicyInformationHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("1F37882B-8312-1AAF-7090-78C122058BFB")
ICPolicyQualifierInfoHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPolicyQualifierInfoHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyQualifierInfoHelperClassObject*)pObj->Probe(EIID_ICPolicyQualifierInfoHelperClassObject);
    }

    static CARAPI_(ICPolicyQualifierInfoHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPolicyQualifierInfoHelperClassObject*)pObj->Probe(EIID_ICPolicyQualifierInfoHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("CF79C75D-8312-7A0C-7B6B-A660CD836074")
ICPrivateKeyUsagePeriodClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPrivateKeyUsagePeriodClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPrivateKeyUsagePeriodClassObject*)pObj->Probe(EIID_ICPrivateKeyUsagePeriodClassObject);
    }

    static CARAPI_(ICPrivateKeyUsagePeriodClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPrivateKeyUsagePeriodClassObject*)pObj->Probe(EIID_ICPrivateKeyUsagePeriodClassObject);
    }

    virtual CARAPI CreateObjectWithPNotBeforeDatePNotAfterDate(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPNotBeforeDatePNotAfterDateEncoding(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("9FF78A5D-8312-7A0C-7B6B-A660CD836074")
ICPrivateKeyUsagePeriodHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPrivateKeyUsagePeriodHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPrivateKeyUsagePeriodHelperClassObject*)pObj->Probe(EIID_ICPrivateKeyUsagePeriodHelperClassObject);
    }

    static CARAPI_(ICPrivateKeyUsagePeriodHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPrivateKeyUsagePeriodHelperClassObject*)pObj->Probe(EIID_ICPrivateKeyUsagePeriodHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("67F6772E-8312-280D-48D8-901103901EA3")
ICReasonCodeClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICReasonCodeClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICReasonCodeClassObject*)pObj->Probe(EIID_ICReasonCodeClassObject);
    }

    static CARAPI_(ICReasonCodeClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICReasonCodeClassObject*)pObj->Probe(EIID_ICReasonCodeClassObject);
    }

    virtual CARAPI CreateObjectWithPEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("A3717F57-8312-8B34-A416-991501C58BB0")
ICReasonCodeHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICReasonCodeHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICReasonCodeHelperClassObject*)pObj->Probe(EIID_ICReasonCodeHelperClassObject);
    }

    static CARAPI_(ICReasonCodeHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICReasonCodeHelperClassObject*)pObj->Probe(EIID_ICReasonCodeHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("CA5C753B-8312-280D-48D8-9011439B0D3D")
ICReasonFlagsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICReasonFlagsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICReasonFlagsClassObject*)pObj->Probe(EIID_ICReasonFlagsClassObject);
    }

    static CARAPI_(ICReasonFlagsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICReasonFlagsClassObject*)pObj->Probe(EIID_ICReasonFlagsClassObject);
    }

    virtual CARAPI CreateObjectWithPFlags(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pFlags,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B3EE801D-B312-A4A1-2DC7-CF4BAA7684BE")
ICReasonFlagsHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICReasonFlagsHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICReasonFlagsHelperClassObject*)pObj->Probe(EIID_ICReasonFlagsHelperClassObject);
    }

    static CARAPI_(ICReasonFlagsHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICReasonFlagsHelperClassObject*)pObj->Probe(EIID_ICReasonFlagsHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("8CAD8657-0312-380E-4A80-7C45C19A9565")
ICSubjectKeyIdentifierClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSubjectKeyIdentifierClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSubjectKeyIdentifierClassObject*)pObj->Probe(EIID_ICSubjectKeyIdentifierClassObject);
    }

    static CARAPI_(ICSubjectKeyIdentifierClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSubjectKeyIdentifierClassObject*)pObj->Probe(EIID_ICSubjectKeyIdentifierClassObject);
    }

    virtual CARAPI CreateObjectWithPKeyIdentifier(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("9F58895D-0312-380E-4A80-7C45C19A9565")
ICSubjectKeyIdentifierHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSubjectKeyIdentifierHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSubjectKeyIdentifierHelperClassObject*)pObj->Probe(EIID_ICSubjectKeyIdentifierHelperClassObject);
    }

    static CARAPI_(ICSubjectKeyIdentifierHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSubjectKeyIdentifierHelperClassObject*)pObj->Probe(EIID_ICSubjectKeyIdentifierHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("F24AF102-C312-65E1-8B9A-7786972F6B52")
ICSubjectPublicKeyInfoClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSubjectPublicKeyInfoClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSubjectPublicKeyInfoClassObject*)pObj->Probe(EIID_ICSubjectPublicKeyInfoClassObject);
    }

    static CARAPI_(ICSubjectPublicKeyInfoClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSubjectPublicKeyInfoClassObject*)pObj->Probe(EIID_ICSubjectPublicKeyInfoClassObject);
    }

    virtual CARAPI CreateObjectWithPAlgIDPSubjectPublicKey(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPAlgIDPSubjectPublicKeyUnused(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithPAlgIDPSubjectPublicKeyUnusedEncoding(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("BD528902-C312-65E1-8B9A-7786972F6B52")
ICSubjectPublicKeyInfoHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSubjectPublicKeyInfoHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSubjectPublicKeyInfoHelperClassObject*)pObj->Probe(EIID_ICSubjectPublicKeyInfoHelperClassObject);
    }

    static CARAPI_(ICSubjectPublicKeyInfoHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSubjectPublicKeyInfoHelperClassObject*)pObj->Probe(EIID_ICSubjectPublicKeyInfoHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("B635BB37-8312-0B0E-3830-B87F43A31EA3")
ICTBSCertListClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTBSCertListClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTBSCertListClassObject*)pObj->Probe(EIID_ICTBSCertListClassObject);
    }

    static CARAPI_(ICTBSCertListClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTBSCertListClassObject*)pObj->Probe(EIID_ICTBSCertListClassObject);
    }

    virtual CARAPI CreateObjectWithVSignatureIssuerThisUpdateNextUpdateRevokedCertificatesCrlExtensionsEncoding(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * issuer,
        /* [in] */ Elastos::Utility::IDate * thisUpdate,
        /* [in] */ Elastos::Utility::IDate * nextUpdate,
        /* [in] */ Elastos::Utility::IList * revokedCertificates,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * crlExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("16CE8007-D312-1C2D-83D6-77C5DA7784BE")
ICTBSCertListHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTBSCertListHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTBSCertListHelperClassObject*)pObj->Probe(EIID_ICTBSCertListHelperClassObject);
    }

    static CARAPI_(ICTBSCertListHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTBSCertListHelperClassObject*)pObj->Probe(EIID_ICTBSCertListHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("BE70BE14-D312-1C2D-83D6-379BB22679A3")
ICTBSCertificateClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTBSCertificateClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTBSCertificateClassObject*)pObj->Probe(EIID_ICTBSCertificateClassObject);
    }

    static CARAPI_(ICTBSCertificateClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTBSCertificateClassObject*)pObj->Probe(EIID_ICTBSCertificateClassObject);
    }

    virtual CARAPI CreateObjectWithVerPSerialNumberPSignaturePIssuerPValidityPSubjectPSubjectPublicKeyInfoPIssuerUniqueIDPSubjectUniqueIDPExtensions(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithVerPSerialNumberPSignaturePIssuerPValidityPSubjectPSubjectPublicKeyInfoPIssuerUniqueIDPSubjectUniqueIDPExtensionsEncoding(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("2D7D831B-D312-1C2D-83D6-379BB22679A3")
ICTBSCertificateHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICTBSCertificateHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTBSCertificateHelperClassObject*)pObj->Probe(EIID_ICTBSCertificateHelperClassObject);
    }

    static CARAPI_(ICTBSCertificateHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICTBSCertificateHelperClassObject*)pObj->Probe(EIID_ICTBSCertificateHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("12167F2E-0312-2CEF-6EF0-D063F407861A")
ICValidityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICValidityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICValidityClassObject*)pObj->Probe(EIID_ICValidityClassObject);
    }

    static CARAPI_(ICValidityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICValidityClassObject*)pObj->Probe(EIID_ICValidityClassObject);
    }

    virtual CARAPI CreateObjectWithPNotBeforePNotAfter(
        /* [in] */ Elastos::Utility::IDate * pNotBefore,
        /* [in] */ Elastos::Utility::IDate * pNotAfter,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("11A17D54-0312-183B-23A0-7811B6060393")
ICValidityHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICValidityHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICValidityHelperClassObject*)pObj->Probe(EIID_ICValidityHelperClassObject);
    }

    static CARAPI_(ICValidityHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICValidityHelperClassObject*)pObj->Probe(EIID_ICValidityHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
CAR_INTERFACE("C6438B16-1312-4016-92E1-E5CB9A14CA33")
ICX509PublicKeyClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICX509PublicKeyClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICX509PublicKeyClassObject*)pObj->Probe(EIID_ICX509PublicKeyClassObject);
    }

    static CARAPI_(ICX509PublicKeyClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICX509PublicKeyClassObject*)pObj->Probe(EIID_ICX509PublicKeyClassObject);
    }

    virtual CARAPI CreateObjectWithAlgorithmPEncodedPKeyBytes(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("BF199728-8312-7AA0-8CFE-C05043C50F05")
ICNameClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICNameClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNameClassObject*)pObj->Probe(EIID_ICNameClassObject);
    }

    static CARAPI_(ICNameClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNameClassObject*)pObj->Probe(EIID_ICNameClassObject);
    }

    virtual CARAPI CreateObjectWithEncoding(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithName(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithRdn(
        /* [in] */ Elastos::Utility::IList * rdn,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("D6FD9E24-0312-CB2E-15C4-38F15D8FD11F")
ICAttributeTypeAndValueClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAttributeTypeAndValueClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAttributeTypeAndValueClassObject*)pObj->Probe(EIID_ICAttributeTypeAndValueClassObject);
    }

    static CARAPI_(ICAttributeTypeAndValueClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAttributeTypeAndValueClassObject*)pObj->Probe(EIID_ICAttributeTypeAndValueClassObject);
    }

    virtual CARAPI CreateObjectWithOidValueValue(
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oidValue,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithOidValue(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("06D58E24-0312-CB2E-15C4-38F11D11891A")
ICAttributeTypeAndValueComparatorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAttributeTypeAndValueComparatorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAttributeTypeAndValueComparatorClassObject*)pObj->Probe(EIID_ICAttributeTypeAndValueComparatorClassObject);
    }

    static CARAPI_(ICAttributeTypeAndValueComparatorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAttributeTypeAndValueComparatorClassObject*)pObj->Probe(EIID_ICAttributeTypeAndValueComparatorClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
CAR_INTERFACE("0B13CB32-0312-DF2E-F518-FD81A1868A1F")
ICAttributeValueClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAttributeValueClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAttributeValueClassObject*)pObj->Probe(EIID_ICAttributeValueClassObject);
    }

    static CARAPI_(ICAttributeValueClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAttributeValueClassObject*)pObj->Probe(EIID_ICAttributeValueClassObject);
    }

    virtual CARAPI CreateObjectWithParsedStringHasQorEOid(
        /* [in] */ const _ELASTOS String& parsedString,
        /* [in] */ _ELASTOS Boolean hasQorE,
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oid,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithHexStringEncoded(
        /* [in] */ const _ELASTOS String& hexString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithRawStringEncodedTag(
        /* [in] */ const _ELASTOS String& rawString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 tag,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
CAR_INTERFACE("D4C97648-8312-7A0C-7B6B-A6600DCB0B06")
ICPrivateKeyImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPrivateKeyImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPrivateKeyImplClassObject*)pObj->Probe(EIID_ICPrivateKeyImplClassObject);
    }

    static CARAPI_(ICPrivateKeyImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPrivateKeyImplClassObject*)pObj->Probe(EIID_ICPrivateKeyImplClassObject);
    }

    virtual CARAPI CreateObjectWithAlgorithm(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
CAR_INTERFACE("9783752C-8312-380C-4ABC-6061A2613D3D")
ICPublicKeyImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPublicKeyImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPublicKeyImplClassObject*)pObj->Probe(EIID_ICPublicKeyImplClassObject);
    }

    static CARAPI_(ICPublicKeyImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPublicKeyImplClassObject*)pObj->Probe(EIID_ICPublicKeyImplClassObject);
    }

    virtual CARAPI CreateObjectWithAlgorithm(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
CAR_INTERFACE("0B09A32B-8312-1CDD-4CC8-9881428FD11F")
ICSystemScopeClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSystemScopeClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSystemScopeClassObject*)pObj->Probe(EIID_ICSystemScopeClassObject);
    }

    static CARAPI_(ICSystemScopeClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSystemScopeClassObject*)pObj->Probe(EIID_ICSystemScopeClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithName(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithNamePScope(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Elastos::Security::IIdentityScope * pScope,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Provider {
namespace Crypto {
CAR_INTERFACE("671C8815-C312-FCD4-7CCB-592DE7EC89D6")
ICCryptoProviderClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCryptoProviderClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCryptoProviderClassObject*)pObj->Probe(EIID_ICCryptoProviderClassObject);
    }

    static CARAPI_(ICCryptoProviderClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCryptoProviderClassObject*)pObj->Probe(EIID_ICCryptoProviderClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Provider {
namespace Crypto {
CAR_INTERFACE("48079306-C312-4A45-906D-17E473A889D7")
ICSHA1PRNG_SecureRandomImplClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSHA1PRNG_SecureRandomImplClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSHA1PRNG_SecureRandomImplClassObject*)pObj->Probe(EIID_ICSHA1PRNG_SecureRandomImplClassObject);
    }

    static CARAPI_(ICSHA1PRNG_SecureRandomImplClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSHA1PRNG_SecureRandomImplClassObject*)pObj->Probe(EIID_ICSHA1PRNG_SecureRandomImplClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("D85FB904-1312-F7DD-1CC9-F6CDBCA46D63")
ICHttpHostClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpHostClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpHostClassObject*)pObj->Probe(EIID_ICHttpHostClassObject);
    }

    static CARAPI_(ICHttpHostClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpHostClassObject*)pObj->Probe(EIID_ICHttpHostClassObject);
    }

    virtual CARAPI CreateObjectWithHostNamePortScheme(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithHostNamePort(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithHostName(
        /* [in] */ const _ELASTOS String& hostName,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithHttpHost(
        /* [in] */ Org::Apache::Http::IHttpHost * httpHost,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("C6A28F47-8312-7C0C-51BB-7AF1E1D96206")
ICProtocolVersionClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICProtocolVersionClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICProtocolVersionClassObject*)pObj->Probe(EIID_ICProtocolVersionClassObject);
    }

    static CARAPI_(ICProtocolVersionClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICProtocolVersionClassObject*)pObj->Probe(EIID_ICProtocolVersionClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithProtocolMajorMinor(
        /* [in] */ const _ELASTOS String& protocol,
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("4F238324-8312-3708-6ECC-00AFC7E80F0C")
ICHttpVersionClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpVersionClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpVersionClassObject*)pObj->Probe(EIID_ICHttpVersionClassObject);
    }

    static CARAPI_(ICHttpVersionClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpVersionClassObject*)pObj->Probe(EIID_ICHttpVersionClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithMajorMinor(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
CAR_INTERFACE("7AE46F24-8312-3708-6ECC-001F01C58B19")
ICHttpVersionHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpVersionHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpVersionHelperClassObject*)pObj->Probe(EIID_ICHttpVersionHelperClassObject);
    }

    static CARAPI_(ICHttpVersionHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpVersionHelperClassObject*)pObj->Probe(EIID_ICHttpVersionHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("53EF7555-0312-3805-4A73-10B5330D3CC8")
ICAuthSchemeRegistryClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAuthSchemeRegistryClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthSchemeRegistryClassObject*)pObj->Probe(EIID_ICAuthSchemeRegistryClassObject);
    }

    static CARAPI_(ICAuthSchemeRegistryClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthSchemeRegistryClassObject*)pObj->Probe(EIID_ICAuthSchemeRegistryClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("C4EFC206-A312-F7E0-CA99-F28C322F69DB")
ICAuthScopeClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAuthScopeClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthScopeClassObject*)pObj->Probe(EIID_ICAuthScopeClassObject);
    }

    static CARAPI_(ICAuthScopeClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthScopeClassObject*)pObj->Probe(EIID_ICAuthScopeClassObject);
    }

    virtual CARAPI CreateObjectWithHostPortRealmScheme(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithHostPortRealm(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithHostPort(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithAuthscope(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authscope,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("3464720E-A312-F7E0-CA99-F28C46E83BA3")
ICAuthScopeHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAuthScopeHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthScopeHelperClassObject*)pObj->Probe(EIID_ICAuthScopeHelperClassObject);
    }

    static CARAPI_(ICAuthScopeHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthScopeHelperClassObject*)pObj->Probe(EIID_ICAuthScopeHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("39BA6C3C-0312-3805-6EAC-58ADC7E80F0C")
ICAuthStateClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAuthStateClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthStateClassObject*)pObj->Probe(EIID_ICAuthStateClassObject);
    }

    static CARAPI_(ICAuthStateClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthStateClassObject*)pObj->Probe(EIID_ICAuthStateClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("502E722E-0312-DA31-33D4-6011C3048B19")
ICBasicUserPrincipalClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicUserPrincipalClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicUserPrincipalClassObject*)pObj->Probe(EIID_ICBasicUserPrincipalClassObject);
    }

    static CARAPI_(ICBasicUserPrincipalClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicUserPrincipalClassObject*)pObj->Probe(EIID_ICBasicUserPrincipalClassObject);
    }

    virtual CARAPI CreateObjectWithUsername(
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("D1D9A30F-7312-4C75-8D9E-687CB3E46B33")
ICNTCredentialsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICNTCredentialsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNTCredentialsClassObject*)pObj->Probe(EIID_ICNTCredentialsClassObject);
    }

    static CARAPI_(ICNTCredentialsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNTCredentialsClassObject*)pObj->Probe(EIID_ICNTCredentialsClassObject);
    }

    virtual CARAPI CreateObjectWithUsernamePassword(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUserNamePasswordWorkstationDom(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [in] */ const _ELASTOS String& workstation,
        /* [in] */ const _ELASTOS String& dom,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("FAA3720A-7312-9E75-8DD6-59CDC6263B93")
ICNTUserPrincipalClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICNTUserPrincipalClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNTUserPrincipalClassObject*)pObj->Probe(EIID_ICNTUserPrincipalClassObject);
    }

    static CARAPI_(ICNTUserPrincipalClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICNTUserPrincipalClassObject*)pObj->Probe(EIID_ICNTUserPrincipalClassObject);
    }

    virtual CARAPI CreateObjectWithDomUsername(
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
CAR_INTERFACE("B5C9A31E-E312-68D9-1D93-309A91B6ADCB")
ICUsernamePasswordCredentialsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICUsernamePasswordCredentialsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICUsernamePasswordCredentialsClassObject*)pObj->Probe(EIID_ICUsernamePasswordCredentialsClassObject);
    }

    static CARAPI_(ICUsernamePasswordCredentialsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICUsernamePasswordCredentialsClassObject*)pObj->Probe(EIID_ICUsernamePasswordCredentialsClassObject);
    }

    virtual CARAPI CreateObjectWithUsernamePassword(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUserNamePassword(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
namespace Params {
CAR_INTERFACE("7D75723B-0312-3805-6EAC-C04A86440C3D")
ICAuthParamBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAuthParamBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthParamBeanClassObject*)pObj->Probe(EIID_ICAuthParamBeanClassObject);
    }

    static CARAPI_(ICAuthParamBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthParamBeanClassObject*)pObj->Probe(EIID_ICAuthParamBeanClassObject);
    }

    virtual CARAPI CreateObjectWithParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
namespace Params {
CAR_INTERFACE("CC2F7422-0312-3805-6EAC-C06A438FD11F")
ICAuthParamsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAuthParamsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthParamsClassObject*)pObj->Probe(EIID_ICAuthParamsClassObject);
    }

    static CARAPI_(ICAuthParamsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAuthParamsClassObject*)pObj->Probe(EIID_ICAuthParamsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Entity {
CAR_INTERFACE("28F3BC21-8312-C0E6-4E74-83E120C60D16")
ICUrlEncodedFormEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICUrlEncodedFormEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICUrlEncodedFormEntityClassObject*)pObj->Probe(EIID_ICUrlEncodedFormEntityClassObject);
    }

    static CARAPI_(ICUrlEncodedFormEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICUrlEncodedFormEntityClassObject*)pObj->Probe(EIID_ICUrlEncodedFormEntityClassObject);
    }

    virtual CARAPI CreateObjectWithParametersEncoding(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [in] */ const _ELASTOS String& encoding,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithParameters(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("EA599E23-8312-3708-6ECC-48A5C7E80F0C")
ICHttpDeleteClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpDeleteClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpDeleteClassObject*)pObj->Probe(EIID_ICHttpDeleteClassObject);
    }

    static CARAPI_(ICHttpDeleteClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpDeleteClassObject*)pObj->Probe(EIID_ICHttpDeleteClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWith_uri(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUri(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("83F49B38-8312-3708-6ECC-20A7C7E80F0C")
ICHttpGetClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpGetClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpGetClassObject*)pObj->Probe(EIID_ICHttpGetClassObject);
    }

    static CARAPI_(ICHttpGetClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpGetClassObject*)pObj->Probe(EIID_ICHttpGetClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWith_uri(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUri(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("50D59C3F-8312-3708-6ECC-50A7C7E80F0C")
ICHttpHeadClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpHeadClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpHeadClassObject*)pObj->Probe(EIID_ICHttpHeadClassObject);
    }

    static CARAPI_(ICHttpHeadClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpHeadClassObject*)pObj->Probe(EIID_ICHttpHeadClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWith_uri(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUri(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("A1099F33-8312-3708-6ECC-706A438FD11F")
ICHttpOptionsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpOptionsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpOptionsClassObject*)pObj->Probe(EIID_ICHttpOptionsClassObject);
    }

    static CARAPI_(ICHttpOptionsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpOptionsClassObject*)pObj->Probe(EIID_ICHttpOptionsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWith_uri(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUri(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("36BB9C11-1312-F7DD-9CC9-F6CDBCA46D63")
ICHttpPostClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpPostClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpPostClassObject*)pObj->Probe(EIID_ICHttpPostClassObject);
    }

    static CARAPI_(ICHttpPostClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpPostClassObject*)pObj->Probe(EIID_ICHttpPostClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWith_uri(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUri(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("73EB9B3C-8312-3708-6ECC-68ABC7E80F0C")
ICHttpPutClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpPutClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpPutClassObject*)pObj->Probe(EIID_ICHttpPutClassObject);
    }

    static CARAPI_(ICHttpPutClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpPutClassObject*)pObj->Probe(EIID_ICHttpPutClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWith_uri(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUri(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
CAR_INTERFACE("13959D2D-8312-3708-6ECC-38AEC7E80F0C")
ICHttpTraceClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpTraceClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpTraceClassObject*)pObj->Probe(EIID_ICHttpTraceClassObject);
    }

    static CARAPI_(ICHttpTraceClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpTraceClassObject*)pObj->Probe(EIID_ICHttpTraceClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWith_uri(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithUri(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
CAR_INTERFACE("AFA77628-8312-583E-C990-88A1C7E80F0C")
ICClientParamBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICClientParamBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICClientParamBeanClassObject*)pObj->Probe(EIID_ICClientParamBeanClassObject);
    }

    static CARAPI_(ICClientParamBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICClientParamBeanClassObject*)pObj->Probe(EIID_ICClientParamBeanClassObject);
    }

    virtual CARAPI CreateObjectWithParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
CAR_INTERFACE("16A87C26-8312-3708-6ECC-E883D5861EA3")
ICHttpClientParamsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpClientParamsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpClientParamsClassObject*)pObj->Probe(EIID_ICHttpClientParamsClassObject);
    }

    static CARAPI_(ICHttpClientParamsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpClientParamsClassObject*)pObj->Probe(EIID_ICHttpClientParamsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
CAR_INTERFACE("1938815C-0312-2C06-9711-D1BCE306916E")
ICClientContextConfigurerClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICClientContextConfigurerClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICClientContextConfigurerClassObject*)pObj->Probe(EIID_ICClientContextConfigurerClassObject);
    }

    static CARAPI_(ICClientContextConfigurerClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICClientContextConfigurerClassObject*)pObj->Probe(EIID_ICClientContextConfigurerClassObject);
    }

    virtual CARAPI CreateObjectWithContext(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
CAR_INTERFACE("8DE57F31-0312-46C1-18C8-90E182057E3D")
ICRequestAddCookiesClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestAddCookiesClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestAddCookiesClassObject*)pObj->Probe(EIID_ICRequestAddCookiesClassObject);
    }

    static CARAPI_(ICRequestAddCookiesClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestAddCookiesClassObject*)pObj->Probe(EIID_ICRequestAddCookiesClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
CAR_INTERFACE("A3238329-0312-A3C1-D2D9-D063F407861A")
ICRequestDefaultHeadersClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestDefaultHeadersClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestDefaultHeadersClassObject*)pObj->Probe(EIID_ICRequestDefaultHeadersClassObject);
    }

    static CARAPI_(ICRequestDefaultHeadersClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestDefaultHeadersClassObject*)pObj->Probe(EIID_ICRequestDefaultHeadersClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
CAR_INTERFACE("92D08829-0312-19C1-6AC8-D8C143018E1B")
ICRequestProxyAuthenticationClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestProxyAuthenticationClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestProxyAuthenticationClassObject*)pObj->Probe(EIID_ICRequestProxyAuthenticationClassObject);
    }

    static CARAPI_(ICRequestProxyAuthenticationClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestProxyAuthenticationClassObject*)pObj->Probe(EIID_ICRequestProxyAuthenticationClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
CAR_INTERFACE("70AD8949-8312-7334-2177-48744E018ED0")
ICRequestTargetAuthenticationClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestTargetAuthenticationClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestTargetAuthenticationClassObject*)pObj->Probe(EIID_ICRequestTargetAuthenticationClassObject);
    }

    static CARAPI_(ICRequestTargetAuthenticationClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestTargetAuthenticationClassObject*)pObj->Probe(EIID_ICRequestTargetAuthenticationClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
CAR_INTERFACE("86AE8422-8312-68C2-19C8-90E182057E3D")
ICResponseProcessCookiesClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICResponseProcessCookiesClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseProcessCookiesClassObject*)pObj->Probe(EIID_ICResponseProcessCookiesClassObject);
    }

    static CARAPI_(ICResponseProcessCookiesClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseProcessCookiesClassObject*)pObj->Probe(EIID_ICResponseProcessCookiesClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("47C6761A-B312-3690-6B3A-72CAA1B12DD7")
ICBasicEofSensorWatcherClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicEofSensorWatcherClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicEofSensorWatcherClassObject*)pObj->Probe(EIID_ICBasicEofSensorWatcherClassObject);
    }

    static CARAPI_(ICBasicEofSensorWatcherClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicEofSensorWatcherClassObject*)pObj->Probe(EIID_ICBasicEofSensorWatcherClassObject);
    }

    virtual CARAPI CreateObjectWithConnReuse(
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("E6E0794E-8312-8B05-065A-10C4E7C4138C")
ICBasicManagedEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicManagedEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicManagedEntityClassObject*)pObj->Probe(EIID_ICBasicManagedEntityClassObject);
    }

    static CARAPI_(ICBasicManagedEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicManagedEntityClassObject*)pObj->Probe(EIID_ICBasicManagedEntityClassObject);
    }

    virtual CARAPI CreateObjectWithEntityConnReuse(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("91B8750B-E312-29C8-87C6-B65C4BF18CDF")
ICEofSensorInputStreamClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICEofSensorInputStreamClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEofSensorInputStreamClassObject*)pObj->Probe(EIID_ICEofSensorInputStreamClassObject);
    }

    static CARAPI_(ICEofSensorInputStreamClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEofSensorInputStreamClassObject*)pObj->Probe(EIID_ICEofSensorInputStreamClassObject);
    }

    virtual CARAPI CreateObjectWithIsWatcher(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
CAR_INTERFACE("72C58453-0312-B90B-3FFF-DB99C1A4440E")
ICMultihomePlainSocketFactoryHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICMultihomePlainSocketFactoryHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICMultihomePlainSocketFactoryHelperClassObject*)pObj->Probe(EIID_ICMultihomePlainSocketFactoryHelperClassObject);
    }

    static CARAPI_(ICMultihomePlainSocketFactoryHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICMultihomePlainSocketFactoryHelperClassObject*)pObj->Probe(EIID_ICMultihomePlainSocketFactoryHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("687E7C29-0312-3206-62C4-6084950C8918")
ICConnConnectionParamBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICConnConnectionParamBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnConnectionParamBeanClassObject*)pObj->Probe(EIID_ICConnConnectionParamBeanClassObject);
    }

    static CARAPI_(ICConnConnectionParamBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnConnectionParamBeanClassObject*)pObj->Probe(EIID_ICConnConnectionParamBeanClassObject);
    }

    virtual CARAPI CreateObjectWithParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("B785793D-0312-3206-62C4-5889950C8918")
ICConnManagerParamBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICConnManagerParamBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnManagerParamBeanClassObject*)pObj->Probe(EIID_ICConnManagerParamBeanClassObject);
    }

    static CARAPI_(ICConnManagerParamBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnManagerParamBeanClassObject*)pObj->Probe(EIID_ICConnManagerParamBeanClassObject);
    }

    virtual CARAPI CreateObjectWithParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("75D07B3E-0312-3206-62C4-5889D5861EA3")
ICConnManagerParamsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICConnManagerParamsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnManagerParamsClassObject*)pObj->Probe(EIID_ICConnManagerParamsClassObject);
    }

    static CARAPI_(ICConnManagerParamsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnManagerParamsClassObject*)pObj->Probe(EIID_ICConnManagerParamsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("5C219444-0312-3122-323C-DBC055F30260")
ICConnPerRouteBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICConnPerRouteBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnPerRouteBeanClassObject*)pObj->Probe(EIID_ICConnPerRouteBeanClassObject);
    }

    static CARAPI_(ICConnPerRouteBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnPerRouteBeanClassObject*)pObj->Probe(EIID_ICConnPerRouteBeanClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultMax(
        /* [in] */ _ELASTOS Int32 defaultMax,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("FBED771A-C312-71C8-BCC9-F88D66644DC2")
ICConnRouteParamBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICConnRouteParamBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnRouteParamBeanClassObject*)pObj->Probe(EIID_ICConnRouteParamBeanClassObject);
    }

    static CARAPI_(ICConnRouteParamBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnRouteParamBeanClassObject*)pObj->Probe(EIID_ICConnRouteParamBeanClassObject);
    }

    virtual CARAPI CreateObjectWithParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
CAR_INTERFACE("BA387912-C312-71C8-BCC9-F88D66644DC2")
ICConnRouteParamsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICConnRouteParamsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnRouteParamsClassObject*)pObj->Probe(EIID_ICConnRouteParamsClassObject);
    }

    static CARAPI_(ICConnRouteParamsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICConnRouteParamsClassObject*)pObj->Probe(EIID_ICConnRouteParamsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("D66A7D5E-8312-8B05-066E-E0AA3909B1AB")
ICBasicRouteDirectorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicRouteDirectorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicRouteDirectorClassObject*)pObj->Probe(EIID_ICBasicRouteDirectorClassObject);
    }

    static CARAPI_(ICBasicRouteDirectorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicRouteDirectorClassObject*)pObj->Probe(EIID_ICBasicRouteDirectorClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("7DFAFC15-1312-F7DD-BCC9-F88D322F69DB")
ICHttpRouteClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpRouteClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpRouteClassObject*)pObj->Probe(EIID_ICHttpRouteClassObject);
    }

    static CARAPI_(ICHttpRouteClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpRouteClassObject*)pObj->Probe(EIID_ICHttpRouteClassObject);
    }

    virtual CARAPI CreateObjectWithTargetLProxiesSecureTunnelledLayered(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHttpHost *> * proxies,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTargetLProxySecureTunnelledLayered(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTargetLSecure(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTarget(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTargetLProxySecure(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
CAR_INTERFACE("B32F884C-8312-5C0D-35C7-21B1EA190393")
ICRouteTrackerClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRouteTrackerClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRouteTrackerClassObject*)pObj->Probe(EIID_ICRouteTrackerClassObject);
    }

    static CARAPI_(ICRouteTrackerClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRouteTrackerClassObject*)pObj->Probe(EIID_ICRouteTrackerClassObject);
    }

    virtual CARAPI CreateObjectWithTargetL(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithRoute(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("97109827-8312-2F0C-48B0-88511A9A1EA3")
ICPlainSocketFactoryClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPlainSocketFactoryClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPlainSocketFactoryClassObject*)pObj->Probe(EIID_ICPlainSocketFactoryClassObject);
    }

    static CARAPI_(ICPlainSocketFactoryClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPlainSocketFactoryClassObject*)pObj->Probe(EIID_ICPlainSocketFactoryClassObject);
    }

    virtual CARAPI CreateObjectWithNameResolver(
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("1A508224-8312-2F0C-48B0-88511A5A0414")
ICPlainSocketFactoryHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICPlainSocketFactoryHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPlainSocketFactoryHelperClassObject*)pObj->Probe(EIID_ICPlainSocketFactoryHelperClassObject);
    }

    static CARAPI_(ICPlainSocketFactoryHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICPlainSocketFactoryHelperClassObject*)pObj->Probe(EIID_ICPlainSocketFactoryHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("CD417428-0312-260E-56A0-8081428FD11F")
ICSchemeClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSchemeClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSchemeClassObject*)pObj->Probe(EIID_ICSchemeClassObject);
    }

    static CARAPI_(ICSchemeClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSchemeClassObject*)pObj->Probe(EIID_ICSchemeClassObject);
    }

    virtual CARAPI CreateObjectWithNameFactoryPort(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Conn::Scheme::ISocketFactory * factory,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
CAR_INTERFACE("FC587858-0312-A20E-76A6-810719300393")
ICSchemeRegistryClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSchemeRegistryClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSchemeRegistryClassObject*)pObj->Probe(EIID_ICSchemeRegistryClassObject);
    }

    static CARAPI_(ICSchemeRegistryClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSchemeRegistryClassObject*)pObj->Probe(EIID_ICSchemeRegistryClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("9E327F5C-0312-2F05-7528-8819016BD19D")
ICAllowAllHostnameVerifierClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICAllowAllHostnameVerifierClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAllowAllHostnameVerifierClassObject*)pObj->Probe(EIID_ICAllowAllHostnameVerifierClassObject);
    }

    static CARAPI_(ICAllowAllHostnameVerifierClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICAllowAllHostnameVerifierClassObject*)pObj->Probe(EIID_ICAllowAllHostnameVerifierClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("F4A98411-B312-B2D4-6EA3-3523C3337947")
ICBrowserCompatHostnameVerifierClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBrowserCompatHostnameVerifierClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBrowserCompatHostnameVerifierClassObject*)pObj->Probe(EIID_ICBrowserCompatHostnameVerifierClassObject);
    }

    static CARAPI_(ICBrowserCompatHostnameVerifierClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBrowserCompatHostnameVerifierClassObject*)pObj->Probe(EIID_ICBrowserCompatHostnameVerifierClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("D59A7D53-0312-0336-6F44-C05A74E78767")
ICStrictHostnameVerifierClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICStrictHostnameVerifierClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICStrictHostnameVerifierClassObject*)pObj->Probe(EIID_ICStrictHostnameVerifierClassObject);
    }

    static CARAPI_(ICStrictHostnameVerifierClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICStrictHostnameVerifierClassObject*)pObj->Probe(EIID_ICStrictHostnameVerifierClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("8879F93A-0312-1C0E-2A94-86A6C7E80F0C")
ICSSLSocketFactoryClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSSLSocketFactoryClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSSLSocketFactoryClassObject*)pObj->Probe(EIID_ICSSLSocketFactoryClassObject);
    }

    static CARAPI_(ICSSLSocketFactoryClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSSLSocketFactoryClassObject*)pObj->Probe(EIID_ICSSLSocketFactoryClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithAlgorithmKeystoreKeystorePasswordTruststoreRandomNameResolver(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [in] */ Elastos::Security::ISecureRandom * random,
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithKeystoreKeystorePasswordTruststore(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithKeystoreKeystorePassword(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithTruststore(
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithSocketfactory(
        /* [in] */ Elastosx::Net::Ssl::ISSLSocketFactory * socketfactory,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
CAR_INTERFACE("329F7D2A-0312-1C0E-2A94-861601C58B19")
ICSSLSocketFactoryHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSSLSocketFactoryHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSSLSocketFactoryHelperClassObject*)pObj->Probe(EIID_ICSSLSocketFactoryHelperClassObject);
    }

    static CARAPI_(ICSSLSocketFactoryHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSSLSocketFactoryHelperClassObject*)pObj->Probe(EIID_ICSSLSocketFactoryHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
namespace Params {
CAR_INTERFACE("E0F37A14-C312-B2C8-CBA2-DC8C9A195993")
ICCookieSpecParamBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCookieSpecParamBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookieSpecParamBeanClassObject*)pObj->Probe(EIID_ICCookieSpecParamBeanClassObject);
    }

    static CARAPI_(ICCookieSpecParamBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookieSpecParamBeanClassObject*)pObj->Probe(EIID_ICCookieSpecParamBeanClassObject);
    }

    virtual CARAPI CreateObjectWithParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("8B707D59-8312-3222-5C18-B4B20C631118")
ICCookieIdentityComparatorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCookieIdentityComparatorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookieIdentityComparatorClassObject*)pObj->Probe(EIID_ICCookieIdentityComparatorClassObject);
    }

    static CARAPI_(ICCookieIdentityComparatorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookieIdentityComparatorClassObject*)pObj->Probe(EIID_ICCookieIdentityComparatorClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("0F0F7806-C312-B2C8-CBA2-58CDAA6CCCBC")
ICCookieOriginClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCookieOriginClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookieOriginClassObject*)pObj->Probe(EIID_ICCookieOriginClassObject);
    }

    static CARAPI_(ICCookieOriginClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookieOriginClassObject*)pObj->Probe(EIID_ICCookieOriginClassObject);
    }

    virtual CARAPI CreateObjectWithHostPortPathSecure(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& path,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("7743793B-0312-3206-64B8-6081222B2212")
ICCookiePathComparatorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCookiePathComparatorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookiePathComparatorClassObject*)pObj->Probe(EIID_ICCookiePathComparatorClassObject);
    }

    static CARAPI_(ICCookiePathComparatorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookiePathComparatorClassObject*)pObj->Probe(EIID_ICCookiePathComparatorClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
CAR_INTERFACE("E9927711-C312-B2C8-CBA2-DC8C9A1BAAB2")
ICCookieSpecRegistryClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCookieSpecRegistryClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookieSpecRegistryClassObject*)pObj->Probe(EIID_ICCookieSpecRegistryClassObject);
    }

    static CARAPI_(ICCookieSpecRegistryClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCookieSpecRegistryClassObject*)pObj->Probe(EIID_ICCookieSpecRegistryClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("D1C7744A-8312-8B05-0646-803DE3094606")
ICBasicHttpEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHttpEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpEntityClassObject*)pObj->Probe(EIID_ICBasicHttpEntityClassObject);
    }

    static CARAPI_(ICBasicHttpEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpEntityClassObject*)pObj->Probe(EIID_ICBasicHttpEntityClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("DC5C722C-0312-FA35-23DC-B831C3418C1B")
ICBufferedHttpEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBufferedHttpEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBufferedHttpEntityClassObject*)pObj->Probe(EIID_ICBufferedHttpEntityClassObject);
    }

    static CARAPI_(ICBufferedHttpEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBufferedHttpEntityClassObject*)pObj->Probe(EIID_ICBufferedHttpEntityClassObject);
    }

    virtual CARAPI CreateObjectWithEntity(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("8D1A6A57-0312-9A21-15F4-8DF404230393")
ICByteArrayEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICByteArrayEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICByteArrayEntityClassObject*)pObj->Probe(EIID_ICByteArrayEntityClassObject);
    }

    static CARAPI_(ICByteArrayEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICByteArrayEntityClassObject*)pObj->Probe(EIID_ICByteArrayEntityClassObject);
    }

    virtual CARAPI CreateObjectWithB(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("FDFD7754-8312-1827-3BA0-8031C3A46606")
ICEntityTemplateClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICEntityTemplateClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEntityTemplateClassObject*)pObj->Probe(EIID_ICEntityTemplateClassObject);
    }

    static CARAPI_(ICEntityTemplateClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICEntityTemplateClassObject*)pObj->Probe(EIID_ICEntityTemplateClassObject);
    }

    virtual CARAPI CreateObjectWithContentproducer(
        /* [in] */ Org::Apache::Http::Entity::IContentProducer * contentproducer,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("88C48E28-0312-0E6A-62DC-607183871EA3")
ICFileEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICFileEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICFileEntityClassObject*)pObj->Probe(EIID_ICFileEntityClassObject);
    }

    static CARAPI_(ICFileEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICFileEntityClassObject*)pObj->Probe(EIID_ICFileEntityClassObject);
    }

    virtual CARAPI CreateObjectWithFileContentType(
        /* [in] */ Elastos::IO::IFile * file,
        /* [in] */ const _ELASTOS String& contentType,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("7ADA794C-8312-6B2D-D908-83F104230393")
ICInputStreamEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICInputStreamEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInputStreamEntityClassObject*)pObj->Probe(EIID_ICInputStreamEntityClassObject);
    }

    static CARAPI_(ICInputStreamEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICInputStreamEntityClassObject*)pObj->Probe(EIID_ICInputStreamEntityClassObject);
    }

    virtual CARAPI CreateObjectWithInstreamLength(
        /* [in] */ Elastos::IO::IInputStream * instream,
        /* [in] */ _ELASTOS Int64 length,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("963D7856-0312-CF0E-027A-D4F304230393")
ICSerializableEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICSerializableEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSerializableEntityClassObject*)pObj->Probe(EIID_ICSerializableEntityClassObject);
    }

    static CARAPI_(ICSerializableEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICSerializableEntityClassObject*)pObj->Probe(EIID_ICSerializableEntityClassObject);
    }

    virtual CARAPI CreateObjectWithSerBufferize(
        /* [in] */ Elastos::IO::ISerializable * ser,
        /* [in] */ _ELASTOS Boolean bufferize,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
CAR_INTERFACE("42559A50-8312-4F35-3032-3069C3C6971F")
ICStringEntityClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICStringEntityClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICStringEntityClassObject*)pObj->Probe(EIID_ICStringEntityClassObject);
    }

    static CARAPI_(ICStringEntityClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICStringEntityClassObject*)pObj->Probe(EIID_ICStringEntityClassObject);
    }

    virtual CARAPI CreateObjectWithSCharset(
        /* [in] */ const _ELASTOS String& s,
        /* [in] */ const _ELASTOS String& charset,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithS(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("7A9B8A43-8312-8B05-0656-789821D1E01A")
ICBasicLineParserClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicLineParserClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicLineParserClassObject*)pObj->Probe(EIID_ICBasicLineParserClassObject);
    }

    static CARAPI_(ICBasicLineParserClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicLineParserClassObject*)pObj->Probe(EIID_ICBasicLineParserClassObject);
    }

    virtual CARAPI CreateObjectWithProto(
        /* [in] */ Org::Apache::Http::IProtocolVersion * proto,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("F4F57B5D-8312-8B05-06BE-71C14C42E647")
ICBasicTokenIteratorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicTokenIteratorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicTokenIteratorClassObject*)pObj->Probe(EIID_ICBasicTokenIteratorClassObject);
    }

    static CARAPI_(ICBasicTokenIteratorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicTokenIteratorClassObject*)pObj->Probe(EIID_ICBasicTokenIteratorClassObject);
    }

    virtual CARAPI CreateObjectWithHeaderIterator(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("81EE7F3D-0312-E931-BE77-8341E2C68DFB")
ICBasicHeaderValueFormatterClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHeaderValueFormatterClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderValueFormatterClassObject*)pObj->Probe(EIID_ICBasicHeaderValueFormatterClassObject);
    }

    static CARAPI_(ICBasicHeaderValueFormatterClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderValueFormatterClassObject*)pObj->Probe(EIID_ICBasicHeaderValueFormatterClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("64547C2B-0312-E931-BE67-2051C3C67D3D")
ICBasicHeaderValueParserClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHeaderValueParserClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderValueParserClassObject*)pObj->Probe(EIID_ICBasicHeaderValueParserClassObject);
    }

    static CARAPI_(ICBasicHeaderValueParserClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderValueParserClassObject*)pObj->Probe(EIID_ICBasicHeaderValueParserClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("270A784B-8312-8B05-0656-78F8E06A4ED8")
ICBasicLineFormatterClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicLineFormatterClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicLineFormatterClassObject*)pObj->Probe(EIID_ICBasicLineFormatterClassObject);
    }

    static CARAPI_(ICBasicLineFormatterClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicLineFormatterClassObject*)pObj->Probe(EIID_ICBasicLineFormatterClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("693BB42C-0312-E931-1CBC-40F15E8FD11F")
ICBasicHeaderElementClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHeaderElementClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderElementClassObject*)pObj->Probe(EIID_ICBasicHeaderElementClassObject);
    }

    static CARAPI_(ICBasicHeaderElementClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderElementClassObject*)pObj->Probe(EIID_ICBasicHeaderElementClassObject);
    }

    virtual CARAPI CreateObjectWithNameValueParameters(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ Elastos::Core::IArrayOf * parameters,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithNameValue(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("16E57132-8312-1074-6AC8-C031438FD11F")
ICHeaderGroupClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHeaderGroupClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHeaderGroupClassObject*)pObj->Probe(EIID_ICHeaderGroupClassObject);
    }

    static CARAPI_(ICHeaderGroupClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHeaderGroupClassObject*)pObj->Probe(EIID_ICHeaderGroupClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("53BDD529-0312-1131-6EDC-9851588FD11F")
ICBasicHttpResponseClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHttpResponseClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpResponseClassObject*)pObj->Probe(EIID_ICBasicHttpResponseClassObject);
    }

    static CARAPI_(ICBasicHttpResponseClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpResponseClassObject*)pObj->Probe(EIID_ICBasicHttpResponseClassObject);
    }

    virtual CARAPI CreateObjectWithStatuslineCatalogLocale(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithStatusline(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithVerCodeReason(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("CE41C62A-0312-1131-6EDC-9821588FD11F")
ICBasicHttpRequestClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHttpRequestClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpRequestClassObject*)pObj->Probe(EIID_ICBasicHttpRequestClassObject);
    }

    static CARAPI_(ICBasicHttpRequestClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpRequestClassObject*)pObj->Probe(EIID_ICBasicHttpRequestClassObject);
    }

    virtual CARAPI CreateObjectWithMethodUri(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithMethodUriVer(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithRequestline(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("23719133-0312-4131-BF67-20C1A2861EA3")
ICBasicNameValuePairClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicNameValuePairClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicNameValuePairClassObject*)pObj->Probe(EIID_ICBasicNameValuePairClassObject);
    }

    static CARAPI_(ICBasicNameValuePairClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicNameValuePairClassObject*)pObj->Probe(EIID_ICBasicNameValuePairClassObject);
    }

    virtual CARAPI CreateObjectWithNameValue(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("53097D26-0312-1A31-D349-B8719FC48DFC")
ICBasicListHeaderIteratorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicListHeaderIteratorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicListHeaderIteratorClassObject*)pObj->Probe(EIID_ICBasicListHeaderIteratorClassObject);
    }

    static CARAPI_(ICBasicListHeaderIteratorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicListHeaderIteratorClassObject*)pObj->Probe(EIID_ICBasicListHeaderIteratorClassObject);
    }

    virtual CARAPI CreateObjectWithHeadersName(
        /* [in] */ Elastos::Utility::IList * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("F788A730-0312-E931-1CBC-40F15EC28DFB")
ICBasicHeaderElementIteratorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHeaderElementIteratorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderElementIteratorClassObject*)pObj->Probe(EIID_ICBasicHeaderElementIteratorClassObject);
    }

    static CARAPI_(ICBasicHeaderElementIteratorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderElementIteratorClassObject*)pObj->Probe(EIID_ICBasicHeaderElementIteratorClassObject);
    }

    virtual CARAPI CreateObjectWithHeaderIteratorParser(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [in] */ Org::Apache::Http::Message::IHeaderValueParser * parser,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithHeaderIterator(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("12E7793B-0312-E931-24DC-B84FE2467E3D")
ICBasicHeaderIteratorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHeaderIteratorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderIteratorClassObject*)pObj->Probe(EIID_ICBasicHeaderIteratorClassObject);
    }

    static CARAPI_(ICBasicHeaderIteratorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderIteratorClassObject*)pObj->Probe(EIID_ICBasicHeaderIteratorClassObject);
    }

    virtual CARAPI CreateObjectWithHeadersName(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("99BE8A25-0312-E931-F418-FD81A1868A1F")
ICBasicHeaderClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHeaderClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderClassObject*)pObj->Probe(EIID_ICBasicHeaderClassObject);
    }

    static CARAPI_(ICBasicHeaderClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHeaderClassObject*)pObj->Probe(EIID_ICBasicHeaderClassObject);
    }

    virtual CARAPI CreateObjectWithNameValue(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("2A118A3F-0312-FA35-D3E9-31FA03430D15")
ICBufferedHeaderClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBufferedHeaderClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBufferedHeaderClassObject*)pObj->Probe(EIID_ICBufferedHeaderClassObject);
    }

    static CARAPI_(ICBufferedHeaderClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBufferedHeaderClassObject*)pObj->Probe(EIID_ICBufferedHeaderClassObject);
    }

    virtual CARAPI CreateObjectWithBuffer(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("37DC9E31-0312-AC31-71D8-A8C022060A3D")
ICBasicStatusLineClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicStatusLineClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicStatusLineClassObject*)pObj->Probe(EIID_ICBasicStatusLineClassObject);
    }

    static CARAPI_(ICBasicStatusLineClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicStatusLineClassObject*)pObj->Probe(EIID_ICBasicStatusLineClassObject);
    }

    virtual CARAPI CreateObjectWithVerStatusCodeReasonPhrase(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 statusCode,
        /* [in] */ const _ELASTOS String& reasonPhrase,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("3F7B7B17-9312-B591-8DD6-0C5EDB72CDBC")
ICParserCursorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICParserCursorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICParserCursorClassObject*)pObj->Probe(EIID_ICParserCursorClassObject);
    }

    static CARAPI_(ICParserCursorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICParserCursorClassObject*)pObj->Probe(EIID_ICParserCursorClassObject);
    }

    virtual CARAPI CreateObjectWithLowerBoundUpperBound(
        /* [in] */ _ELASTOS Int32 lowerBound,
        /* [in] */ _ELASTOS Int32 upperBound,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("C22A9223-0312-8231-2BB0-8881428FD11F")
ICBasicRequestLineClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicRequestLineClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicRequestLineClassObject*)pObj->Probe(EIID_ICBasicRequestLineClassObject);
    }

    static CARAPI_(ICBasicRequestLineClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicRequestLineClassObject*)pObj->Probe(EIID_ICBasicRequestLineClassObject);
    }

    virtual CARAPI CreateObjectWithMethodUriVer(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
CAR_INTERFACE("32B8D54D-8312-8B05-0646-803DE3094628")
ICBasicHttpEntityEnclosingRequestClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHttpEntityEnclosingRequestClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpEntityEnclosingRequestClassObject*)pObj->Probe(EIID_ICBasicHttpEntityEnclosingRequestClassObject);
    }

    static CARAPI_(ICBasicHttpEntityEnclosingRequestClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpEntityEnclosingRequestClassObject*)pObj->Probe(EIID_ICBasicHttpEntityEnclosingRequestClassObject);
    }

    virtual CARAPI CreateObjectWithMethodUri(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithMethodUriVer(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithRequestline(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("F267770D-1312-F7DD-9CD5-F22D9BF29B91")
ICHttpProtocolParamsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpProtocolParamsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpProtocolParamsClassObject*)pObj->Probe(EIID_ICHttpProtocolParamsClassObject);
    }

    static CARAPI_(ICHttpProtocolParamsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpProtocolParamsClassObject*)pObj->Probe(EIID_ICHttpProtocolParamsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("900B793C-8312-3708-6ECC-6084D5861EA3")
ICHttpConnectionParamsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpConnectionParamsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpConnectionParamsClassObject*)pObj->Probe(EIID_ICHttpConnectionParamsClassObject);
    }

    static CARAPI_(ICHttpConnectionParamsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpConnectionParamsClassObject*)pObj->Probe(EIID_ICHttpConnectionParamsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("CDFD7432-0312-1131-6EDC-9881D5861EA3")
ICBasicHttpParamsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHttpParamsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpParamsClassObject*)pObj->Probe(EIID_ICBasicHttpParamsClassObject);
    }

    static CARAPI_(ICBasicHttpParamsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpParamsClassObject*)pObj->Probe(EIID_ICBasicHttpParamsClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("51A6762D-8312-FA51-23DC-B83103AB0D3D")
ICDefaultedHttpParamsClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDefaultedHttpParamsClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDefaultedHttpParamsClassObject*)pObj->Probe(EIID_ICDefaultedHttpParamsClassObject);
    }

    static CARAPI_(ICDefaultedHttpParamsClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDefaultedHttpParamsClassObject*)pObj->Probe(EIID_ICDefaultedHttpParamsClassObject);
    }

    virtual CARAPI CreateObjectWithLDefaults(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * l,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * defaults,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("0290773D-8312-3708-6ECC-6084950C8918")
ICHttpConnectionParamBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpConnectionParamBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpConnectionParamBeanClassObject*)pObj->Probe(EIID_ICHttpConnectionParamBeanClassObject);
    }

    static CARAPI_(ICHttpConnectionParamBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpConnectionParamBeanClassObject*)pObj->Probe(EIID_ICHttpConnectionParamBeanClassObject);
    }

    virtual CARAPI CreateObjectWithParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
CAR_INTERFACE("64EC7518-1312-F7DD-9CD5-F22D9BF29B91")
ICHttpProtocolParamBeanClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpProtocolParamBeanClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpProtocolParamBeanClassObject*)pObj->Probe(EIID_ICHttpProtocolParamBeanClassObject);
    }

    static CARAPI_(ICHttpProtocolParamBeanClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpProtocolParamBeanClassObject*)pObj->Probe(EIID_ICHttpProtocolParamBeanClassObject);
    }

    virtual CARAPI CreateObjectWithParams(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("54947A2B-8312-3708-6ECC-10FC0C85091C")
ICHttpRequestExecutorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpRequestExecutorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpRequestExecutorClassObject*)pObj->Probe(EIID_ICHttpRequestExecutorClassObject);
    }

    static CARAPI_(ICHttpRequestExecutorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpRequestExecutorClassObject*)pObj->Probe(EIID_ICHttpRequestExecutorClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("B0CE7935-0312-1131-6EDC-988136BF1EA3")
ICBasicHttpProcessorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHttpProcessorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpProcessorClassObject*)pObj->Probe(EIID_ICBasicHttpProcessorClassObject);
    }

    static CARAPI_(ICBasicHttpProcessorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpProcessorClassObject*)pObj->Probe(EIID_ICBasicHttpProcessorClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("C31A8B3E-8312-3708-6ECC-C8ACC7E80F0C")
ICHttpServiceClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpServiceClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpServiceClassObject*)pObj->Probe(EIID_ICHttpServiceClassObject);
    }

    static CARAPI_(ICHttpServiceClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpServiceClassObject*)pObj->Probe(EIID_ICHttpServiceClassObject);
    }

    virtual CARAPI CreateObjectWithProcessorConnStrategyResponseFactory(
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor,
        /* [in] */ Org::Apache::Http::IConnectionReuseStrategy * connStrategy,
        /* [in] */ Org::Apache::Http::IHttpResponseFactory * responseFactory,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("E20D7852-0312-7A0F-333C-C26CE191A81A")
ICUriPatternMatcherClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICUriPatternMatcherClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICUriPatternMatcherClassObject*)pObj->Probe(EIID_ICUriPatternMatcherClassObject);
    }

    static CARAPI_(ICUriPatternMatcherClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICUriPatternMatcherClassObject*)pObj->Probe(EIID_ICUriPatternMatcherClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("3CC67A35-8312-0CC2-64C4-8811498FD11F")
ICResponseConnControlClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICResponseConnControlClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseConnControlClassObject*)pObj->Probe(EIID_ICResponseConnControlClassObject);
    }

    static CARAPI_(ICResponseConnControlClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseConnControlClassObject*)pObj->Probe(EIID_ICResponseConnControlClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("69957530-0312-0CC1-64C4-B88122C60D3D")
ICRequestContentClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestContentClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestContentClassObject*)pObj->Probe(EIID_ICRequestContentClassObject);
    }

    static CARAPI_(ICRequestContentClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestContentClassObject*)pObj->Probe(EIID_ICRequestContentClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("1B7D7639-8312-0CC2-64C4-B88122C60D3D")
ICResponseContentClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICResponseContentClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseContentClassObject*)pObj->Probe(EIID_ICResponseContentClassObject);
    }

    static CARAPI_(ICResponseContentClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseContentClassObject*)pObj->Probe(EIID_ICResponseContentClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("E0F27846-8312-7334-2177-48742E025606")
ICRequestTargetHostClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestTargetHostClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestTargetHostClassObject*)pObj->Probe(EIID_ICRequestTargetHostClassObject);
    }

    static CARAPI_(ICRequestTargetHostClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestTargetHostClassObject*)pObj->Probe(EIID_ICRequestTargetHostClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("1F0A7C37-0312-CFC1-66A0-307163911EA3")
ICRequestExpectContinueClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestExpectContinueClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestExpectContinueClassObject*)pObj->Probe(EIID_ICRequestExpectContinueClassObject);
    }

    static CARAPI_(ICRequestExpectContinueClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestExpectContinueClassObject*)pObj->Probe(EIID_ICRequestExpectContinueClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("2099944A-8312-8B05-0646-803D8388E61D")
ICBasicHttpContextClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICBasicHttpContextClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpContextClassObject*)pObj->Probe(EIID_ICBasicHttpContextClassObject);
    }

    static CARAPI_(ICBasicHttpContextClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICBasicHttpContextClassObject*)pObj->Probe(EIID_ICBasicHttpContextClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

    virtual CARAPI CreateObjectWithParentContext(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * parentContext,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("BE5F813E-8312-3708-6ECC-107C6E030A15")
ICHttpRequestHandlerRegistryClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpRequestHandlerRegistryClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpRequestHandlerRegistryClassObject*)pObj->Probe(EIID_ICHttpRequestHandlerRegistryClassObject);
    }

    static CARAPI_(ICHttpRequestHandlerRegistryClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpRequestHandlerRegistryClassObject*)pObj->Probe(EIID_ICHttpRequestHandlerRegistryClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("EA9C7923-8312-FA51-23DC-B83183818C18")
ICDefaultedHttpContextClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICDefaultedHttpContextClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDefaultedHttpContextClassObject*)pObj->Probe(EIID_ICDefaultedHttpContextClassObject);
    }

    static CARAPI_(ICDefaultedHttpContextClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICDefaultedHttpContextClassObject*)pObj->Probe(EIID_ICDefaultedHttpContextClassObject);
    }

    virtual CARAPI CreateObjectWithLDefaults(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * l,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * defaults,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("D02C7850-8312-B008-6734-680481D9B347")
ICHttpDateGeneratorClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpDateGeneratorClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpDateGeneratorClassObject*)pObj->Probe(EIID_ICHttpDateGeneratorClassObject);
    }

    static CARAPI_(ICHttpDateGeneratorClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpDateGeneratorClassObject*)pObj->Probe(EIID_ICHttpDateGeneratorClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("B5E47E57-8312-B008-6734-680481D9B347")
ICHttpDateGeneratorHelperClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICHttpDateGeneratorHelperClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpDateGeneratorHelperClassObject*)pObj->Probe(EIID_ICHttpDateGeneratorHelperClassObject);
    }

    static CARAPI_(ICHttpDateGeneratorHelperClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICHttpDateGeneratorHelperClassObject*)pObj->Probe(EIID_ICHttpDateGeneratorHelperClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("D3237322-8312-99C2-F418-FD81A1868A1F")
ICResponseDateClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICResponseDateClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseDateClassObject*)pObj->Probe(EIID_ICResponseDateClassObject);
    }

    static CARAPI_(ICResponseDateClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseDateClassObject*)pObj->Probe(EIID_ICResponseDateClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("104D723D-0312-99C1-F418-FD81A1868A1F")
ICRequestDateClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestDateClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestDateClassObject*)pObj->Probe(EIID_ICRequestDateClassObject);
    }

    static CARAPI_(ICRequestDateClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestDateClassObject*)pObj->Probe(EIID_ICRequestDateClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("4BB17530-8312-98C2-F518-FD81A1868A1F")
ICResponseServerClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICResponseServerClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseServerClassObject*)pObj->Probe(EIID_ICResponseServerClassObject);
    }

    static CARAPI_(ICResponseServerClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICResponseServerClassObject*)pObj->Probe(EIID_ICResponseServerClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("1F2C7736-0312-DAC1-15A8-4011E3861EA3")
ICRequestUserAgentClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestUserAgentClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestUserAgentClassObject*)pObj->Probe(EIID_ICRequestUserAgentClassObject);
    }

    static CARAPI_(ICRequestUserAgentClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestUserAgentClassObject*)pObj->Probe(EIID_ICRequestUserAgentClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
CAR_INTERFACE("B2B6792D-0312-0CC1-64C4-8811498FD11F")
ICRequestConnControlClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICRequestConnControlClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestConnControlClassObject*)pObj->Probe(EIID_ICRequestConnControlClassObject);
    }

    static CARAPI_(ICRequestConnControlClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICRequestConnControlClassObject*)pObj->Probe(EIID_ICRequestConnControlClassObject);
    }

    virtual CARAPI CreateObjectWithDefaultCtor(
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Utility {
CAR_INTERFACE("22587224-0312-2B06-48D4-C0A2468FD11F")
ICCharArrayBufferClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICCharArrayBufferClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCharArrayBufferClassObject*)pObj->Probe(EIID_ICCharArrayBufferClassObject);
    }

    static CARAPI_(ICCharArrayBufferClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICCharArrayBufferClassObject*)pObj->Probe(EIID_ICCharArrayBufferClassObject);
    }

    virtual CARAPI CreateObjectWithCapacity(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Utility {
CAR_INTERFACE("1E467223-8312-3736-5060-51A3C7E80F0C")
ICByteArrayBufferClassObject : public IClassObject
{
    virtual CARAPI_(PInterface) Probe(
        /* [in] */ _ELASTOS REIID riid) = 0;

    static CARAPI_(ICByteArrayBufferClassObject*) Probe(PInterface pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICByteArrayBufferClassObject*)pObj->Probe(EIID_ICByteArrayBufferClassObject);
    }

    static CARAPI_(ICByteArrayBufferClassObject*) Probe(IObject* pObj)
    {
        if (pObj == NULL) return NULL;
        return (ICByteArrayBufferClassObject*)pObj->Probe(EIID_ICByteArrayBufferClassObject);
    }

    virtual CARAPI CreateObjectWithCapacity(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ IInterface ** newObj) = 0;

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Luni {
namespace Internal {
namespace Util {
class CTimezoneGetterHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Luni::Internal::Util::ITimezoneGetterHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimezoneGetterHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Luni::Internal::Util::EIID_ITimezoneGetterHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimezoneGetterHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimezoneGetterHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimezoneGetterHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Crypto {
namespace Internal {
class CNullCipherSpi
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Elastosx::Crypto::ICipherSpi** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNullCipherSpi, RGM_SAME_DOMAIN, Elastosx::Crypto::EIID_ICipherSpi, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNullCipherSpi, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNullCipherSpi, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNullCipherSpi, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
class CExpatReader
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Xml::IExpatReader** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExpatReader, RGM_SAME_DOMAIN, Org::Apache::Harmony::Xml::EIID_IExpatReader, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Xml::Sax::IXMLReader** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExpatReader, RGM_SAME_DOMAIN, Org::Xml::Sax::EIID_IXMLReader, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExpatReader, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExpatReader, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExpatReader, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Parsers {
class CSAXParserImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IMap * features,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSAXParserImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSAXParserImpl, RGM_SAME_DOMAIN,
                EIID_ICSAXParserImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithFeatures(features, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IMap * features,
        /* [out] */ Elastosx::Xml::Parsers::ISAXParser** __ISAXParser)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(features, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISAXParser = (Elastosx::Xml::Parsers::ISAXParser*)__pNewObj->Probe(Elastosx::Xml::Parsers::EIID_ISAXParser);
        if (*__ISAXParser) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IMap * features,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(features, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IMap * features,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(features, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IMap * features,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(features, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Parsers {
class CSAXParserFactoryImpl
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Elastosx::Xml::Parsers::ISAXParserFactory** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSAXParserFactoryImpl, RGM_SAME_DOMAIN, Elastosx::Xml::Parsers::EIID_ISAXParserFactory, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSAXParserFactoryImpl, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSAXParserFactoryImpl, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSAXParserFactoryImpl, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Parsers {
class CDocumentBuilderFactoryImpl
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Elastosx::Xml::Parsers::IDocumentBuilderFactory** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDocumentBuilderFactoryImpl, RGM_SAME_DOMAIN, Elastosx::Xml::Parsers::EIID_IDocumentBuilderFactory, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDocumentBuilderFactoryImpl, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDocumentBuilderFactoryImpl, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDocumentBuilderFactoryImpl, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CAttrImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAttrImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAttrImpl, RGM_SAME_DOMAIN,
                EIID_ICAttrImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentNamespaceURIQualifiedName(document, namespaceURI, qualifiedName, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAttrImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAttrImpl, RGM_SAME_DOMAIN,
                EIID_ICAttrImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentName(document, name, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ Org::W3c::Dom::IAttr** __IAttr)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAttr = (Org::W3c::Dom::IAttr*)__pNewObj->Probe(Org::W3c::Dom::EIID_IAttr);
        if (*__IAttr) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::W3c::Dom::IAttr** __IAttr)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAttr = (Org::W3c::Dom::IAttr*)__pNewObj->Probe(Org::W3c::Dom::EIID_IAttr);
        if (*__IAttr) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CCDATASectionImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCDATASectionImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCDATASectionImpl, RGM_SAME_DOMAIN,
                EIID_ICCDATASectionImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentData(document, data, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::ICDATASection** __ICDATASection)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICDATASection = (Org::W3c::Dom::ICDATASection*)__pNewObj->Probe(Org::W3c::Dom::EIID_ICDATASection);
        if (*__ICDATASection) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ICDATASectionImpl** __ICDATASectionImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICDATASectionImpl = (Org::Apache::Harmony::Xml::Dom::ICDATASectionImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ICDATASectionImpl);
        if (*__ICDATASectionImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::ICharacterData** __ICharacterData)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICharacterData = (Org::W3c::Dom::ICharacterData*)__pNewObj->Probe(Org::W3c::Dom::EIID_ICharacterData);
        if (*__ICharacterData) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ICharacterDataImpl** __ICharacterDataImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICharacterDataImpl = (Org::Apache::Harmony::Xml::Dom::ICharacterDataImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ICharacterDataImpl);
        if (*__ICharacterDataImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::IText** __IText)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IText = (Org::W3c::Dom::IText*)__pNewObj->Probe(Org::W3c::Dom::EIID_IText);
        if (*__IText) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CCommentImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCommentImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCommentImpl, RGM_SAME_DOMAIN,
                EIID_ICCommentImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentData(document, data, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ICommentImpl** __ICommentImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICommentImpl = (Org::Apache::Harmony::Xml::Dom::ICommentImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ICommentImpl);
        if (*__ICommentImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::IComment** __IComment)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IComment = (Org::W3c::Dom::IComment*)__pNewObj->Probe(Org::W3c::Dom::EIID_IComment);
        if (*__IComment) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::ICharacterData** __ICharacterData)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICharacterData = (Org::W3c::Dom::ICharacterData*)__pNewObj->Probe(Org::W3c::Dom::EIID_ICharacterData);
        if (*__ICharacterData) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ICharacterDataImpl** __ICharacterDataImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICharacterDataImpl = (Org::Apache::Harmony::Xml::Dom::ICharacterDataImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ICharacterDataImpl);
        if (*__ICharacterDataImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CDocumentFragmentImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDocumentFragmentImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDocumentFragmentImpl, RGM_SAME_DOMAIN,
                EIID_ICDocumentFragmentImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocument(document, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [out] */ Org::W3c::Dom::IDocumentFragment** __IDocumentFragment)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDocumentFragment = (Org::W3c::Dom::IDocumentFragment*)__pNewObj->Probe(Org::W3c::Dom::EIID_IDocumentFragment);
        if (*__IDocumentFragment) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CDocumentImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDOMImplementation * impl,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ Org::W3c::Dom::IDocumentType * doctype,
        /* [in] */ const _ELASTOS String& inputEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDocumentImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDocumentImpl, RGM_SAME_DOMAIN,
                EIID_ICDocumentImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithImplNamespaceURIQualifiedNameDoctypeInputEncoding(impl, namespaceURI, qualifiedName, doctype, inputEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDOMImplementation * impl,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ Org::W3c::Dom::IDocumentType * doctype,
        /* [in] */ const _ELASTOS String& inputEncoding,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(impl, namespaceURI, qualifiedName, doctype, inputEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDOMImplementation * impl,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ Org::W3c::Dom::IDocumentType * doctype,
        /* [in] */ const _ELASTOS String& inputEncoding,
        /* [out] */ Org::W3c::Dom::IDocument** __IDocument)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(impl, namespaceURI, qualifiedName, doctype, inputEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDocument = (Org::W3c::Dom::IDocument*)__pNewObj->Probe(Org::W3c::Dom::EIID_IDocument);
        if (*__IDocument) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDOMImplementation * impl,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ Org::W3c::Dom::IDocumentType * doctype,
        /* [in] */ const _ELASTOS String& inputEncoding,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(impl, namespaceURI, qualifiedName, doctype, inputEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDOMImplementation * impl,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ Org::W3c::Dom::IDocumentType * doctype,
        /* [in] */ const _ELASTOS String& inputEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(impl, namespaceURI, qualifiedName, doctype, inputEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDOMImplementation * impl,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ Org::W3c::Dom::IDocumentType * doctype,
        /* [in] */ const _ELASTOS String& inputEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(impl, namespaceURI, qualifiedName, doctype, inputEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDOMImplementation * impl,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ Org::W3c::Dom::IDocumentType * doctype,
        /* [in] */ const _ELASTOS String& inputEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(impl, namespaceURI, qualifiedName, doctype, inputEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CDocumentImplHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Xml::Dom::IDocumentImplHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDocumentImplHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Xml::Dom::EIID_IDocumentImplHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDocumentImplHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDocumentImplHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDocumentImplHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CDOMConfigurationImpl
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::W3c::Dom::IDOMConfiguration** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMConfigurationImpl, RGM_SAME_DOMAIN, Org::W3c::Dom::EIID_IDOMConfiguration, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Xml::Dom::IDOMConfigurationImpl** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMConfigurationImpl, RGM_SAME_DOMAIN, Org::Apache::Harmony::Xml::Dom::EIID_IDOMConfigurationImpl, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMConfigurationImpl, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMConfigurationImpl, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMConfigurationImpl, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CDOMErrorImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int16 severity,
        /* [in] */ const _ELASTOS String& type,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDOMErrorImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDOMErrorImpl, RGM_SAME_DOMAIN,
                EIID_ICDOMErrorImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithSeverityType(severity, type, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int16 severity,
        /* [in] */ const _ELASTOS String& type,
        /* [out] */ Org::W3c::Dom::IDOMError** __IDOMError)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(severity, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDOMError = (Org::W3c::Dom::IDOMError*)__pNewObj->Probe(Org::W3c::Dom::EIID_IDOMError);
        if (*__IDOMError) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int16 severity,
        /* [in] */ const _ELASTOS String& type,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(severity, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int16 severity,
        /* [in] */ const _ELASTOS String& type,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(severity, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int16 severity,
        /* [in] */ const _ELASTOS String& type,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(severity, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CDOMImplementationImpl
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::W3c::Dom::IDOMImplementation** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMImplementationImpl, RGM_SAME_DOMAIN, Org::W3c::Dom::EIID_IDOMImplementation, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMImplementationImpl, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMImplementationImpl, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMImplementationImpl, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CDOMImplementationImplHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Xml::Dom::IDOMImplementationImplHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMImplementationImplHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Xml::Dom::EIID_IDOMImplementationImplHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMImplementationImplHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMImplementationImplHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDOMImplementationImplHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CDocumentTypeImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ const _ELASTOS String& publicId,
        /* [in] */ const _ELASTOS String& systemId,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDocumentTypeImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDocumentTypeImpl, RGM_SAME_DOMAIN,
                EIID_ICDocumentTypeImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentQualifiedNamePublicIdSystemId(document, qualifiedName, publicId, systemId, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ const _ELASTOS String& publicId,
        /* [in] */ const _ELASTOS String& systemId,
        /* [out] */ Org::W3c::Dom::IDocumentType** __IDocumentType)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, qualifiedName, publicId, systemId, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDocumentType = (Org::W3c::Dom::IDocumentType*)__pNewObj->Probe(Org::W3c::Dom::EIID_IDocumentType);
        if (*__IDocumentType) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ const _ELASTOS String& publicId,
        /* [in] */ const _ELASTOS String& systemId,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, qualifiedName, publicId, systemId, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ const _ELASTOS String& publicId,
        /* [in] */ const _ELASTOS String& systemId,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, qualifiedName, publicId, systemId, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ const _ELASTOS String& publicId,
        /* [in] */ const _ELASTOS String& systemId,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, qualifiedName, publicId, systemId, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ const _ELASTOS String& publicId,
        /* [in] */ const _ELASTOS String& systemId,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, qualifiedName, publicId, systemId, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [in] */ const _ELASTOS String& publicId,
        /* [in] */ const _ELASTOS String& systemId,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, qualifiedName, publicId, systemId, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CElementImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICElementImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CElementImpl, RGM_SAME_DOMAIN,
                EIID_ICElementImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentNamespaceURIQualifiedName(document, namespaceURI, qualifiedName, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICElementImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CElementImpl, RGM_SAME_DOMAIN,
                EIID_ICElementImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentName(document, name, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ Org::W3c::Dom::IElement** __IElement)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IElement = (Org::W3c::Dom::IElement*)__pNewObj->Probe(Org::W3c::Dom::EIID_IElement);
        if (*__IElement) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& namespaceURI,
        /* [in] */ const _ELASTOS String& qualifiedName,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, namespaceURI, qualifiedName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::W3c::Dom::IElement** __IElement)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IElement = (Org::W3c::Dom::IElement*)__pNewObj->Probe(Org::W3c::Dom::EIID_IElement);
        if (*__IElement) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CElementAttrNamedNodeMapImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IElement * ele,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICElementAttrNamedNodeMapImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CElementAttrNamedNodeMapImpl, RGM_SAME_DOMAIN,
                EIID_ICElementAttrNamedNodeMapImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithEle(ele, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IElement * ele,
        /* [out] */ Org::W3c::Dom::INamedNodeMap** __INamedNodeMap)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ele, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INamedNodeMap = (Org::W3c::Dom::INamedNodeMap*)__pNewObj->Probe(Org::W3c::Dom::EIID_INamedNodeMap);
        if (*__INamedNodeMap) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IElement * ele,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ele, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IElement * ele,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ele, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IElement * ele,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ele, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CEntityImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICEntityImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CEntityImpl, RGM_SAME_DOMAIN,
                EIID_ICEntityImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentNotationNamePublicIDSystemID(document, notationName, publicID, systemID, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ Org::W3c::Dom::IEntity** __IEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IEntity = (Org::W3c::Dom::IEntity*)__pNewObj->Probe(Org::W3c::Dom::EIID_IEntity);
        if (*__IEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CEntityReferenceImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICEntityReferenceImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CEntityReferenceImpl, RGM_SAME_DOMAIN,
                EIID_ICEntityReferenceImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentName(document, name, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::W3c::Dom::IEntityReference** __IEntityReference)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IEntityReference = (Org::W3c::Dom::IEntityReference*)__pNewObj->Probe(Org::W3c::Dom::EIID_IEntityReference);
        if (*__IEntityReference) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CNodeListImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * list,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNodeListImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CNodeListImpl, RGM_SAME_DOMAIN,
                EIID_ICNodeListImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithList(list, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::W3c::Dom::INodeList** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNodeListImpl, RGM_SAME_DOMAIN, Org::W3c::Dom::EIID_INodeList, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNodeListImpl, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNodeListImpl, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNodeListImpl, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * list,
        /* [out] */ Org::W3c::Dom::INodeList** __INodeList)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(list, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INodeList = (Org::W3c::Dom::INodeList*)__pNewObj->Probe(Org::W3c::Dom::EIID_INodeList);
        if (*__INodeList) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * list,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(list, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * list,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(list, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * list,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(list, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CNotationImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNotationImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CNotationImpl, RGM_SAME_DOMAIN,
                EIID_ICNotationImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentNotationNamePublicIDSystemID(document, notationName, publicID, systemID, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ Org::W3c::Dom::INotation** __INotation)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INotation = (Org::W3c::Dom::INotation*)__pNewObj->Probe(Org::W3c::Dom::EIID_INotation);
        if (*__INotation) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& notationName,
        /* [in] */ const _ELASTOS String& publicID,
        /* [in] */ const _ELASTOS String& systemID,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, notationName, publicID, systemID, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CProcessingInstructionImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& target,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICProcessingInstructionImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CProcessingInstructionImpl, RGM_SAME_DOMAIN,
                EIID_ICProcessingInstructionImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentTargetData(document, target, data, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& target,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl** __ILeafNodeImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, target, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILeafNodeImpl = (Org::Apache::Harmony::Xml::Dom::ILeafNodeImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ILeafNodeImpl);
        if (*__ILeafNodeImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& target,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::INode** __INode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, target, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INode = (Org::W3c::Dom::INode*)__pNewObj->Probe(Org::W3c::Dom::EIID_INode);
        if (*__INode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& target,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::IProcessingInstruction** __IProcessingInstruction)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, target, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IProcessingInstruction = (Org::W3c::Dom::IProcessingInstruction*)__pNewObj->Probe(Org::W3c::Dom::EIID_IProcessingInstruction);
        if (*__IProcessingInstruction) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& target,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, target, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& target,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, target, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& target,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, target, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Xml {
namespace Dom {
class CTextImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICTextImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CTextImpl, RGM_SAME_DOMAIN,
                EIID_ICTextImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDocumentData(document, data, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::Apache::Harmony::Xml::Dom::ICharacterDataImpl** __ICharacterDataImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICharacterDataImpl = (Org::Apache::Harmony::Xml::Dom::ICharacterDataImpl*)__pNewObj->Probe(Org::Apache::Harmony::Xml::Dom::EIID_ICharacterDataImpl);
        if (*__ICharacterDataImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::ICharacterData** __ICharacterData)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICharacterData = (Org::W3c::Dom::ICharacterData*)__pNewObj->Probe(Org::W3c::Dom::EIID_ICharacterData);
        if (*__ICharacterData) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Org::W3c::Dom::IText** __IText)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IText = (Org::W3c::Dom::IText*)__pNewObj->Probe(Org::W3c::Dom::EIID_IText);
        if (*__IText) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::W3c::Dom::IDocument * document,
        /* [in] */ const _ELASTOS String& data,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(document, data, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1OctetString
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1OctetString** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetString, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1OctetString, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1StringType** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetString, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1StringType, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetString, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetString, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetString, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetString, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetString, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1OctetStringHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1OctetStringHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetStringHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1OctetStringHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetStringHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetStringHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1OctetStringHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CBerInputStream
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBerInputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBerInputStream, RGM_SAME_DOMAIN,
                EIID_ICBerInputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithEncoded(encoded, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBerInputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBerInputStream, RGM_SAME_DOMAIN,
                EIID_ICBerInputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithEncodedOffsetExpectedLength(encoded, offset, expectedLength, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBerInputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBerInputStream, RGM_SAME_DOMAIN,
                EIID_ICBerInputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithIs(is, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ _ELASTOS Int32 initialSize,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBerInputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBerInputStream, RGM_SAME_DOMAIN,
                EIID_ICBerInputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithIsInitialSize(is, initialSize, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream** __IBerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBerInputStream = (Org::Apache::Harmony::Security::Asn1::IBerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBerInputStream);
        if (*__IBerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream** __IBerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBerInputStream = (Org::Apache::Harmony::Security::Asn1::IBerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBerInputStream);
        if (*__IBerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream** __IBerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBerInputStream = (Org::Apache::Harmony::Security::Asn1::IBerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBerInputStream);
        if (*__IBerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ _ELASTOS Int32 initialSize,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream** __IBerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, initialSize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBerInputStream = (Org::Apache::Harmony::Security::Asn1::IBerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBerInputStream);
        if (*__IBerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ _ELASTOS Int32 initialSize,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, initialSize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ _ELASTOS Int32 initialSize,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, initialSize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ _ELASTOS Int32 initialSize,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, initialSize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CBerOutputStream
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerOutputStream** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBerOutputStream, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IBerOutputStream, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBerOutputStream, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBerOutputStream, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBerOutputStream, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CDerInputStream
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDerInputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDerInputStream, RGM_SAME_DOMAIN,
                EIID_ICDerInputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithEncoded(encoded, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDerInputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDerInputStream, RGM_SAME_DOMAIN,
                EIID_ICDerInputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithEncodedOffsetExpectedLength(encoded, offset, expectedLength, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDerInputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDerInputStream, RGM_SAME_DOMAIN,
                EIID_ICDerInputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithIs(is, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IDerInputStream** __IDerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDerInputStream = (Org::Apache::Harmony::Security::Asn1::IDerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IDerInputStream);
        if (*__IDerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream** __IBerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBerInputStream = (Org::Apache::Harmony::Security::Asn1::IBerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBerInputStream);
        if (*__IBerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IDerInputStream** __IDerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDerInputStream = (Org::Apache::Harmony::Security::Asn1::IDerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IDerInputStream);
        if (*__IDerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream** __IBerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBerInputStream = (Org::Apache::Harmony::Security::Asn1::IBerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBerInputStream);
        if (*__IBerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 offset,
        /* [in] */ _ELASTOS Int32 expectedLength,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoded, offset, expectedLength, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IDerInputStream** __IDerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDerInputStream = (Org::Apache::Harmony::Security::Asn1::IDerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IDerInputStream);
        if (*__IDerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerInputStream** __IBerInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBerInputStream = (Org::Apache::Harmony::Security::Asn1::IBerInputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBerInputStream);
        if (*__IBerInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CDerOutputStream
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1,
        /* [in] */ IInterface * object,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDerOutputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDerOutputStream, RGM_SAME_DOMAIN,
                EIID_ICDerOutputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAsn1Object(asn1, object, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1,
        /* [in] */ IInterface * object,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IDerOutputStream** __IDerOutputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(asn1, object, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDerOutputStream = (Org::Apache::Harmony::Security::Asn1::IDerOutputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IDerOutputStream);
        if (*__IDerOutputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1,
        /* [in] */ IInterface * object,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBerOutputStream** __IBerOutputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(asn1, object, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBerOutputStream = (Org::Apache::Harmony::Security::Asn1::IBerOutputStream*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBerOutputStream);
        if (*__IBerOutputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1,
        /* [in] */ IInterface * object,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(asn1, object, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1,
        /* [in] */ IInterface * object,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(asn1, object, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * asn1,
        /* [in] */ IInterface * object,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(asn1, object, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1Any
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Any** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Any, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Any, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Any, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Any, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Any, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Any, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Any, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1BitString
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1BitString** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1BitString, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1BitString, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1StringType** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1BitString, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1StringType, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1BitString, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1BitString, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1BitString, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1BitString, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1BitString, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CBitString
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * bytes,
        /* [in] */ _ELASTOS Int32 unusedBits,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBitStringClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBitString, RGM_SAME_DOMAIN,
                EIID_ICBitStringClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithBytesUnusedBits(bytes, unusedBits, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * values,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBitStringClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBitString, RGM_SAME_DOMAIN,
                EIID_ICBitStringClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithValues(values, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * bytes,
        /* [in] */ _ELASTOS Int32 unusedBits,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBitString** __IBitString)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(bytes, unusedBits, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBitString = (Org::Apache::Harmony::Security::Asn1::IBitString*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBitString);
        if (*__IBitString) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * bytes,
        /* [in] */ _ELASTOS Int32 unusedBits,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(bytes, unusedBits, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * bytes,
        /* [in] */ _ELASTOS Int32 unusedBits,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(bytes, unusedBits, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * bytes,
        /* [in] */ _ELASTOS Int32 unusedBits,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(bytes, unusedBits, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * values,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IBitString** __IBitString)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(values, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBitString = (Org::Apache::Harmony::Security::Asn1::IBitString*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IBitString);
        if (*__IBitString) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * values,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(values, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * values,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(values, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * values,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(values, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1Boolean
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Boolean** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Boolean, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Boolean, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Boolean, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Boolean, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Boolean, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Boolean, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Boolean, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1Enumerated
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Enumerated** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Enumerated, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Enumerated, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Enumerated, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Enumerated, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Enumerated, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Enumerated, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Enumerated, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1Explicit
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICASN1ExplicitClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CASN1Explicit, RGM_SAME_DOMAIN,
                EIID_ICASN1ExplicitClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTagNumberType(tagNumber, type, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 tagClass,
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICASN1ExplicitClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CASN1Explicit, RGM_SAME_DOMAIN,
                EIID_ICASN1ExplicitClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTagClassTagNumberType(tagClass, tagNumber, type, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Explicit** __IASN1Explicit)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Explicit = (Org::Apache::Harmony::Security::Asn1::IASN1Explicit*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Explicit);
        if (*__IASN1Explicit) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __IASN1Type)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Type = (Org::Apache::Harmony::Security::Asn1::IASN1Type*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type);
        if (*__IASN1Type) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __IASN1Constants)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Constants = (Org::Apache::Harmony::Security::Asn1::IASN1Constants*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants);
        if (*__IASN1Constants) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagClass,
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Explicit** __IASN1Explicit)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagClass, tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Explicit = (Org::Apache::Harmony::Security::Asn1::IASN1Explicit*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Explicit);
        if (*__IASN1Explicit) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagClass,
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __IASN1Type)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagClass, tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Type = (Org::Apache::Harmony::Security::Asn1::IASN1Type*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type);
        if (*__IASN1Type) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagClass,
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __IASN1Constants)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagClass, tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Constants = (Org::Apache::Harmony::Security::Asn1::IASN1Constants*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants);
        if (*__IASN1Constants) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagClass,
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagClass, tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagClass,
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagClass, tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagClass,
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagClass, tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1GeneralizedTime
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1GeneralizedTime** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1GeneralizedTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1GeneralizedTime, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Time** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1GeneralizedTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Time, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1StringType** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1GeneralizedTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1StringType, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1GeneralizedTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1GeneralizedTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1GeneralizedTime, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1GeneralizedTime, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1GeneralizedTime, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1Implicit
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICASN1ImplicitClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CASN1Implicit, RGM_SAME_DOMAIN,
                EIID_ICASN1ImplicitClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTagNumberType(tagNumber, type, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Implicit** __IASN1Implicit)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Implicit = (Org::Apache::Harmony::Security::Asn1::IASN1Implicit*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Implicit);
        if (*__IASN1Implicit) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __IASN1Type)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Type = (Org::Apache::Harmony::Security::Asn1::IASN1Type*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type);
        if (*__IASN1Type) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __IASN1Constants)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Constants = (Org::Apache::Harmony::Security::Asn1::IASN1Constants*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants);
        if (*__IASN1Constants) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tagNumber,
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tagNumber, type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1Integer
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Integer** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Integer, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Integer, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Integer, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Integer, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Integer, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Integer, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Integer, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CObjectIdentifier
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICObjectIdentifierClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CObjectIdentifier, RGM_SAME_DOMAIN,
                EIID_ICObjectIdentifierClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithOid(oid, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& strOid,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICObjectIdentifierClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CObjectIdentifier, RGM_SAME_DOMAIN,
                EIID_ICObjectIdentifierClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithStrOid(strOid, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IObjectIdentifier** __IObjectIdentifier)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObjectIdentifier = (Org::Apache::Harmony::Security::Asn1::IObjectIdentifier*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IObjectIdentifier);
        if (*__IObjectIdentifier) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& strOid,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IObjectIdentifier** __IObjectIdentifier)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(strOid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObjectIdentifier = (Org::Apache::Harmony::Security::Asn1::IObjectIdentifier*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IObjectIdentifier);
        if (*__IObjectIdentifier) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& strOid,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(strOid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& strOid,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(strOid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& strOid,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(strOid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1Oid
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Oid** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Oid, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Oid, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Oid, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Oid, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Oid, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Oid, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1Oid, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1Set
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICASN1SetClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CASN1Set, RGM_SAME_DOMAIN,
                EIID_ICASN1SetClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithType(type, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Set** __IASN1Set)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Set = (Org::Apache::Harmony::Security::Asn1::IASN1Set*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Set);
        if (*__IASN1Set) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1TypeCollection** __IASN1TypeCollection)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1TypeCollection = (Org::Apache::Harmony::Security::Asn1::IASN1TypeCollection*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1TypeCollection);
        if (*__IASN1TypeCollection) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __IASN1Type)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Type = (Org::Apache::Harmony::Security::Asn1::IASN1Type*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type);
        if (*__IASN1Type) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __IASN1Constants)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Constants = (Org::Apache::Harmony::Security::Asn1::IASN1Constants*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants);
        if (*__IASN1Constants) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Harmony::Security::Asn1::IASN1Type *> * type,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1SetOf
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICASN1SetOfClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CASN1SetOf, RGM_SAME_DOMAIN,
                EIID_ICASN1SetOfClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithType(type, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1SetOf** __IASN1SetOf)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1SetOf = (Org::Apache::Harmony::Security::Asn1::IASN1SetOf*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1SetOf);
        if (*__IASN1SetOf) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1ValueCollection** __IASN1ValueCollection)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1ValueCollection = (Org::Apache::Harmony::Security::Asn1::IASN1ValueCollection*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1ValueCollection);
        if (*__IASN1ValueCollection) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __IASN1Type)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Type = (Org::Apache::Harmony::Security::Asn1::IASN1Type*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type);
        if (*__IASN1Type) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __IASN1Constants)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IASN1Constants = (Org::Apache::Harmony::Security::Asn1::IASN1Constants*)__pNewObj->Probe(Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants);
        if (*__IASN1Constants) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Asn1::IASN1Type * type,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(type, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Asn1 {
class CASN1UTCTime
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1UTCTime** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1UTCTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1UTCTime, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Time** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1UTCTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Time, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1StringType** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1UTCTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1StringType, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Type** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1UTCTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Type, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Asn1::IASN1Constants** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1UTCTime, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Asn1::EIID_IASN1Constants, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1UTCTime, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1UTCTime, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CASN1UTCTime, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Fortress {
class CEngine
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& serviceName,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICEngineClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CEngine, RGM_SAME_DOMAIN,
                EIID_ICEngineClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithServiceName(serviceName, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& serviceName,
        /* [out] */ Org::Apache::Harmony::Security::Fortress::IEngine** __IEngine)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(serviceName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IEngine = (Org::Apache::Harmony::Security::Fortress::IEngine*)__pNewObj->Probe(Org::Apache::Harmony::Security::Fortress::EIID_IEngine);
        if (*__IEngine) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& serviceName,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(serviceName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& serviceName,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(serviceName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& serviceName,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(serviceName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs10 {
class CCertificationRequest
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificationRequestClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificationRequest, RGM_SAME_DOMAIN,
                EIID_ICCertificationRequestClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithInfoAlgIdSignature(info, algId, signature, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificationRequestClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificationRequest, RGM_SAME_DOMAIN,
                EIID_ICCertificationRequestClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithInfoAlgIdSignatureEncoding(info, algId, signature, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [out] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequest** __ICertificationRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(info, algId, signature, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificationRequest = (Org::Apache::Harmony::Security::Pkcs10::ICertificationRequest*)__pNewObj->Probe(Org::Apache::Harmony::Security::Pkcs10::EIID_ICertificationRequest);
        if (*__ICertificationRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(info, algId, signature, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(info, algId, signature, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(info, algId, signature, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequest** __ICertificationRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(info, algId, signature, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificationRequest = (Org::Apache::Harmony::Security::Pkcs10::ICertificationRequest*)__pNewObj->Probe(Org::Apache::Harmony::Security::Pkcs10::EIID_ICertificationRequest);
        if (*__ICertificationRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(info, algId, signature, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(info, algId, signature, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo * info,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * algId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signature,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(info, algId, signature, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs10 {
class CCertificationRequestInfo
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * subject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * subjectPublicKeyInfo,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificationRequestInfoClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificationRequestInfo, RGM_SAME_DOMAIN,
                EIID_ICCertificationRequestInfoClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVSubjectSubjectPublicKeyInfoAttributesEncoding(v, subject, subjectPublicKeyInfo, attributes, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * subject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * subjectPublicKeyInfo,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo** __ICertificationRequestInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, subject, subjectPublicKeyInfo, attributes, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificationRequestInfo = (Org::Apache::Harmony::Security::Pkcs10::ICertificationRequestInfo*)__pNewObj->Probe(Org::Apache::Harmony::Security::Pkcs10::EIID_ICertificationRequestInfo);
        if (*__ICertificationRequestInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * subject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * subjectPublicKeyInfo,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, subject, subjectPublicKeyInfo, attributes, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * subject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * subjectPublicKeyInfo,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, subject, subjectPublicKeyInfo, attributes, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * subject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * subjectPublicKeyInfo,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, subject, subjectPublicKeyInfo, attributes, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs7 {
class CContentInfoHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::Pkcs7::IContentInfoHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CContentInfoHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Pkcs7::EIID_IContentInfoHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CContentInfoHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CContentInfoHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CContentInfoHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Pkcs8 {
class CPrivateKeyInfo
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPrivateKeyInfoClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPrivateKeyInfo, RGM_SAME_DOMAIN,
                EIID_ICPrivateKeyInfoClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVPrivateKeyAlgorithmPrivateKeyAttributes(v, privateKeyAlgorithm, privateKey, attributes, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPrivateKeyInfoClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPrivateKeyInfo, RGM_SAME_DOMAIN,
                EIID_ICPrivateKeyInfoClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVPrivateKeyAlgorithmPrivateKeyAttributesEncoding(v, privateKeyAlgorithm, privateKey, attributes, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [out] */ Org::Apache::Harmony::Security::Pkcs8::IPrivateKeyInfo** __IPrivateKeyInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, privateKeyAlgorithm, privateKey, attributes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPrivateKeyInfo = (Org::Apache::Harmony::Security::Pkcs8::IPrivateKeyInfo*)__pNewObj->Probe(Org::Apache::Harmony::Security::Pkcs8::EIID_IPrivateKeyInfo);
        if (*__IPrivateKeyInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, privateKeyAlgorithm, privateKey, attributes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, privateKeyAlgorithm, privateKey, attributes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, privateKeyAlgorithm, privateKey, attributes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::Pkcs8::IPrivateKeyInfo** __IPrivateKeyInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, privateKeyAlgorithm, privateKey, attributes, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPrivateKeyInfo = (Org::Apache::Harmony::Security::Pkcs8::IPrivateKeyInfo*)__pNewObj->Probe(Org::Apache::Harmony::Security::Pkcs8::EIID_IPrivateKeyInfo);
        if (*__IPrivateKeyInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, privateKeyAlgorithm, privateKey, attributes, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, privateKeyAlgorithm, privateKey, attributes, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * privateKeyAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * privateKey,
        /* [in] */ Elastos::Utility::IList * attributes,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, privateKeyAlgorithm, privateKey, attributes, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
class CJarUtils
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::Utils::IJarUtils** __object)
    {
        return _CObject_CreateInstance(ECLSID_CJarUtils, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Utils::EIID_IJarUtils, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CJarUtils, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CJarUtils, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CJarUtils, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
class CArrayHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::Utils::IArrayHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CArrayHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Utils::EIID_IArrayHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CArrayHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CArrayHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CArrayHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
class CObjectIdentifierInUtils
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICObjectIdentifierInUtilsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CObjectIdentifierInUtils, RGM_SAME_DOMAIN,
                EIID_ICObjectIdentifierInUtilsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithOid(oid, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ IInterface * oidGroup,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICObjectIdentifierInUtilsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CObjectIdentifierInUtils, RGM_SAME_DOMAIN,
                EIID_ICObjectIdentifierInUtilsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithOidNameOidGroup(oid, name, oidGroup, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier** __IObjectIdentifier)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObjectIdentifier = (Org::Apache::Harmony::Security::Utils::IObjectIdentifier*)__pNewObj->Probe(Org::Apache::Harmony::Security::Utils::EIID_IObjectIdentifier);
        if (*__IObjectIdentifier) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ IInterface * oidGroup,
        /* [out] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier** __IObjectIdentifier)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, name, oidGroup, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObjectIdentifier = (Org::Apache::Harmony::Security::Utils::IObjectIdentifier*)__pNewObj->Probe(Org::Apache::Harmony::Security::Utils::EIID_IObjectIdentifier);
        if (*__IObjectIdentifier) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ IInterface * oidGroup,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, name, oidGroup, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ IInterface * oidGroup,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, name, oidGroup, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ IInterface * oidGroup,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, name, oidGroup, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Utils {
class CAlgNameMapperHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::Utils::IAlgNameMapperHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAlgNameMapperHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Utils::EIID_IAlgNameMapperHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAlgNameMapperHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAlgNameMapperHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAlgNameMapperHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CMessageImprint
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pHashedMessage,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICMessageImprintClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CMessageImprint, RGM_SAME_DOMAIN,
                EIID_ICMessageImprintClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPAlgIdPHashedMessage(pAlgId, pHashedMessage, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pHashedMessage,
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint** __IMessageImprint)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgId, pHashedMessage, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IMessageImprint = (Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::Tsp::EIID_IMessageImprint);
        if (*__IMessageImprint) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pHashedMessage,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgId, pHashedMessage, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pHashedMessage,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgId, pHashedMessage, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgId,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pHashedMessage,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgId, pHashedMessage, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CPKIStatusInfo
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatus * pkiStatus,
        /* [in] */ Elastos::Utility::IList * pStatusString,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIFailureInfo * failInfo,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPKIStatusInfoClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPKIStatusInfo, RGM_SAME_DOMAIN,
                EIID_ICPKIStatusInfoClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPkiStatusPStatusStringFailInfo(pkiStatus, pStatusString, failInfo, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatus * pkiStatus,
        /* [in] */ Elastos::Utility::IList * pStatusString,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIFailureInfo * failInfo,
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo** __IPKIStatusInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pkiStatus, pStatusString, failInfo, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPKIStatusInfo = (Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::Tsp::EIID_IPKIStatusInfo);
        if (*__IPKIStatusInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatus * pkiStatus,
        /* [in] */ Elastos::Utility::IList * pStatusString,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIFailureInfo * failInfo,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pkiStatus, pStatusString, failInfo, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatus * pkiStatus,
        /* [in] */ Elastos::Utility::IList * pStatusString,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIFailureInfo * failInfo,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pkiStatus, pStatusString, failInfo, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatus * pkiStatus,
        /* [in] */ Elastos::Utility::IList * pStatusString,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIFailureInfo * failInfo,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pkiStatus, pStatusString, failInfo, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CPKIStatusInfoHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfoHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPKIStatusInfoHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::Tsp::EIID_IPKIStatusInfoHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPKIStatusInfoHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPKIStatusInfoHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPKIStatusInfoHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CTSTInfo
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ const _ELASTOS String& policy,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Elastos::Utility::IDate * pGenTime,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pAccuracy,
        /* [in] */ _ELASTOS Boolean ordering,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pTsa,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICTSTInfoClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CTSTInfo, RGM_SAME_DOMAIN,
                EIID_ICTSTInfoClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVerPolicyPMessageImprintPSerialNumberPGenTimePAccuracyOrderingPNoncePTsaPExtensions(ver, policy, pMessageImprint, pSerialNumber, pGenTime, pAccuracy, ordering, pNonce, pTsa, pExtensions, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ const _ELASTOS String& policy,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Elastos::Utility::IDate * pGenTime,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pAccuracy,
        /* [in] */ _ELASTOS Boolean ordering,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pTsa,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::ITSTInfo** __ITSTInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, policy, pMessageImprint, pSerialNumber, pGenTime, pAccuracy, ordering, pNonce, pTsa, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ITSTInfo = (Org::Apache::Harmony::Security::X509::Tsp::ITSTInfo*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::Tsp::EIID_ITSTInfo);
        if (*__ITSTInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ const _ELASTOS String& policy,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Elastos::Utility::IDate * pGenTime,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pAccuracy,
        /* [in] */ _ELASTOS Boolean ordering,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pTsa,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, policy, pMessageImprint, pSerialNumber, pGenTime, pAccuracy, ordering, pNonce, pTsa, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ const _ELASTOS String& policy,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Elastos::Utility::IDate * pGenTime,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pAccuracy,
        /* [in] */ _ELASTOS Boolean ordering,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pTsa,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, policy, pMessageImprint, pSerialNumber, pGenTime, pAccuracy, ordering, pNonce, pTsa, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ const _ELASTOS String& policy,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Elastos::Utility::IDate * pGenTime,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pAccuracy,
        /* [in] */ _ELASTOS Boolean ordering,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pTsa,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, policy, pMessageImprint, pSerialNumber, pGenTime, pAccuracy, ordering, pNonce, pTsa, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CTSTInfoHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::ITSTInfoHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTSTInfoHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::Tsp::EIID_ITSTInfoHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTSTInfoHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTSTInfoHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTSTInfoHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CTimeStampReq
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICTimeStampReqClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CTimeStampReq, RGM_SAME_DOMAIN,
                EIID_ICTimeStampReqClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVerPMessageImprintReqPolicyPNonceCertReqPExtensions(ver, pMessageImprint, reqPolicy, pNonce, certReq, pExtensions, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * messageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * nonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * extensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICTimeStampReqClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CTimeStampReq, RGM_SAME_DOMAIN,
                EIID_ICTimeStampReqClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVerMessageImprintReqPolicyNonceCertReqExtensionsEncoding(ver, messageImprint, reqPolicy, nonce, certReq, extensions, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::ITimeStampReq** __ITimeStampReq)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pMessageImprint, reqPolicy, pNonce, certReq, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ITimeStampReq = (Org::Apache::Harmony::Security::X509::Tsp::ITimeStampReq*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::Tsp::EIID_ITimeStampReq);
        if (*__ITimeStampReq) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pMessageImprint, reqPolicy, pNonce, certReq, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pMessageImprint, reqPolicy, pNonce, certReq, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * pMessageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pNonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pMessageImprint, reqPolicy, pNonce, certReq, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * messageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * nonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * extensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::ITimeStampReq** __ITimeStampReq)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, messageImprint, reqPolicy, nonce, certReq, extensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ITimeStampReq = (Org::Apache::Harmony::Security::X509::Tsp::ITimeStampReq*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::Tsp::EIID_ITimeStampReq);
        if (*__ITimeStampReq) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * messageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * nonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * extensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, messageImprint, reqPolicy, nonce, certReq, extensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * messageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * nonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * extensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, messageImprint, reqPolicy, nonce, certReq, extensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IMessageImprint * messageImprint,
        /* [in] */ const _ELASTOS String& reqPolicy,
        /* [in] */ Elastos::Math::IBigInteger * nonce,
        /* [in] */ _ELASTOS Boolean certReq,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * extensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, messageImprint, reqPolicy, nonce, certReq, extensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CTimeStampReqHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::ITimeStampReqHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimeStampReqHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::Tsp::EIID_ITimeStampReqHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimeStampReqHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimeStampReqHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimeStampReqHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CTimeStampResp
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo * pStatus,
        /* [in] */ Org::Apache::Harmony::Security::Pkcs7::IContentInfo * pTimeStampToken,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICTimeStampRespClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CTimeStampResp, RGM_SAME_DOMAIN,
                EIID_ICTimeStampRespClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPStatusPTimeStampToken(pStatus, pTimeStampToken, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo * pStatus,
        /* [in] */ Org::Apache::Harmony::Security::Pkcs7::IContentInfo * pTimeStampToken,
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::ITimeStampResp** __ITimeStampResp)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pStatus, pTimeStampToken, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ITimeStampResp = (Org::Apache::Harmony::Security::X509::Tsp::ITimeStampResp*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::Tsp::EIID_ITimeStampResp);
        if (*__ITimeStampResp) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo * pStatus,
        /* [in] */ Org::Apache::Harmony::Security::Pkcs7::IContentInfo * pTimeStampToken,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pStatus, pTimeStampToken, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo * pStatus,
        /* [in] */ Org::Apache::Harmony::Security::Pkcs7::IContentInfo * pTimeStampToken,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pStatus, pTimeStampToken, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::Tsp::IPKIStatusInfo * pStatus,
        /* [in] */ Org::Apache::Harmony::Security::Pkcs7::IContentInfo * pTimeStampToken,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pStatus, pTimeStampToken, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
namespace Tsp {
class CTimeStampRespHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::Tsp::ITimeStampRespHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimeStampRespHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::Tsp::EIID_ITimeStampRespHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimeStampRespHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimeStampRespHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTimeStampRespHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CAccessDescription
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::X509::IAccessDescription** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAccessDescription, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IAccessDescription, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAccessDescription, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAccessDescription, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAccessDescription, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CAccessDescriptionHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IAccessDescriptionHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAccessDescriptionHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IAccessDescriptionHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAccessDescriptionHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAccessDescriptionHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAccessDescriptionHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CAlgorithmIdentifier
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAlgorithmIdentifierClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAlgorithmIdentifier, RGM_SAME_DOMAIN,
                EIID_ICAlgorithmIdentifierClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAlgorithm(algorithm, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pParameters,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAlgorithmIdentifierClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAlgorithmIdentifier, RGM_SAME_DOMAIN,
                EIID_ICAlgorithmIdentifierClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAlgorithmPParameters(algorithm, pParameters, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier** __IAlgorithmIdentifier)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAlgorithmIdentifier = (Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IAlgorithmIdentifier);
        if (*__IAlgorithmIdentifier) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pParameters,
        /* [out] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier** __IAlgorithmIdentifier)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pParameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAlgorithmIdentifier = (Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IAlgorithmIdentifier);
        if (*__IAlgorithmIdentifier) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pParameters,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pParameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pParameters,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pParameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pParameters,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pParameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CAlgorithmIdentifierHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifierHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAlgorithmIdentifierHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IAlgorithmIdentifierHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAlgorithmIdentifierHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAlgorithmIdentifierHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAlgorithmIdentifierHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CAlternativeName
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Boolean which,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAlternativeNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAlternativeName, RGM_SAME_DOMAIN,
                EIID_ICAlternativeNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithWhichPEncoding(which, pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Boolean which,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IAlternativeName** __IAlternativeName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(which, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAlternativeName = (Org::Apache::Harmony::Security::X509::IAlternativeName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IAlternativeName);
        if (*__IAlternativeName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Boolean which,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(which, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Boolean which,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(which, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Boolean which,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(which, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Boolean which,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(which, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CAuthorityKeyIdentifier
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pAuthorityCertIssuer,
        /* [in] */ Elastos::Math::IBigInteger * pAuthorityCertSerialNumber,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAuthorityKeyIdentifierClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAuthorityKeyIdentifier, RGM_SAME_DOMAIN,
                EIID_ICAuthorityKeyIdentifierClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPKeyIdentifierPAuthorityCertIssuerPAuthorityCertSerialNumber(pKeyIdentifier, pAuthorityCertIssuer, pAuthorityCertSerialNumber, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pAuthorityCertIssuer,
        /* [in] */ Elastos::Math::IBigInteger * pAuthorityCertSerialNumber,
        /* [out] */ Org::Apache::Harmony::Security::X509::IAuthorityKeyIdentifier** __IAuthorityKeyIdentifier)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, pAuthorityCertIssuer, pAuthorityCertSerialNumber, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAuthorityKeyIdentifier = (Org::Apache::Harmony::Security::X509::IAuthorityKeyIdentifier*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IAuthorityKeyIdentifier);
        if (*__IAuthorityKeyIdentifier) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pAuthorityCertIssuer,
        /* [in] */ Elastos::Math::IBigInteger * pAuthorityCertSerialNumber,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, pAuthorityCertIssuer, pAuthorityCertSerialNumber, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pAuthorityCertIssuer,
        /* [in] */ Elastos::Math::IBigInteger * pAuthorityCertSerialNumber,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, pAuthorityCertIssuer, pAuthorityCertSerialNumber, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pAuthorityCertIssuer,
        /* [in] */ Elastos::Math::IBigInteger * pAuthorityCertSerialNumber,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, pAuthorityCertIssuer, pAuthorityCertSerialNumber, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pAuthorityCertIssuer,
        /* [in] */ Elastos::Math::IBigInteger * pAuthorityCertSerialNumber,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, pAuthorityCertIssuer, pAuthorityCertSerialNumber, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CAuthorityKeyIdentifierHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IAuthorityKeyIdentifierHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthorityKeyIdentifierHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IAuthorityKeyIdentifierHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthorityKeyIdentifierHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthorityKeyIdentifierHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthorityKeyIdentifierHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CBasicConstraints
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicConstraintsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicConstraints, RGM_SAME_DOMAIN,
                EIID_ICBasicConstraintsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IBasicConstraints** __IBasicConstraints)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicConstraints = (Org::Apache::Harmony::Security::X509::IBasicConstraints*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IBasicConstraints);
        if (*__IBasicConstraints) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CBasicConstraintsHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IBasicConstraintsHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicConstraintsHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IBasicConstraintsHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicConstraintsHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicConstraintsHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicConstraintsHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCRLDistributionPoints
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * distributionPoints,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCRLDistributionPointsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCRLDistributionPoints, RGM_SAME_DOMAIN,
                EIID_ICCRLDistributionPointsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDistributionPointsEncoding(distributionPoints, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::X509::ICRLDistributionPoints** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPoints, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ICRLDistributionPoints, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPoints, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IExtensionValue, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPoints, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPoints, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPoints, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * distributionPoints,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICRLDistributionPoints** __ICRLDistributionPoints)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(distributionPoints, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICRLDistributionPoints = (Org::Apache::Harmony::Security::X509::ICRLDistributionPoints*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ICRLDistributionPoints);
        if (*__ICRLDistributionPoints) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * distributionPoints,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(distributionPoints, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * distributionPoints,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(distributionPoints, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * distributionPoints,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(distributionPoints, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * distributionPoints,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(distributionPoints, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCRLDistributionPointsHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ICRLDistributionPointsHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPointsHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ICRLDistributionPointsHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPointsHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPointsHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLDistributionPointsHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCRLNumber
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCRLNumberClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCRLNumber, RGM_SAME_DOMAIN,
                EIID_ICCRLNumberClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICRLNumber** __ICRLNumber)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICRLNumber = (Org::Apache::Harmony::Security::X509::ICRLNumber*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ICRLNumber);
        if (*__ICRLNumber) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCRLNumberHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ICRLNumberHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLNumberHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ICRLNumberHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLNumberHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLNumberHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCRLNumberHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCertificate
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * pTbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificateClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificate, RGM_SAME_DOMAIN,
                EIID_ICCertificateClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPTbsCertificatePSignatureAlgorithmPSignatureValue(pTbsCertificate, pSignatureAlgorithm, pSignatureValue, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * tbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificateClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificate, RGM_SAME_DOMAIN,
                EIID_ICCertificateClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTbsCertificateSignatureAlgorithmSignatureValueEncoding(tbsCertificate, signatureAlgorithm, signatureValue, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * pTbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificate** __ICertificate)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertificate, pSignatureAlgorithm, pSignatureValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificate = (Org::Apache::Harmony::Security::X509::ICertificate*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ICertificate);
        if (*__ICertificate) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * pTbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertificate, pSignatureAlgorithm, pSignatureValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * pTbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertificate, pSignatureAlgorithm, pSignatureValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * pTbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertificate, pSignatureAlgorithm, pSignatureValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * tbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificate** __ICertificate)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tbsCertificate, signatureAlgorithm, signatureValue, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificate = (Org::Apache::Harmony::Security::X509::ICertificate*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ICertificate);
        if (*__ICertificate) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * tbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tbsCertificate, signatureAlgorithm, signatureValue, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * tbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tbsCertificate, signatureAlgorithm, signatureValue, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertificate * tbsCertificate,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * signatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tbsCertificate, signatureAlgorithm, signatureValue, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCertificateHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificateHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ICertificateHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCertificateIssuer
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificateIssuerClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificateIssuer, RGM_SAME_DOMAIN,
                EIID_ICCertificateIssuerClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificateIssuer** __ICertificateIssuer)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificateIssuer = (Org::Apache::Harmony::Security::X509::ICertificateIssuer*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ICertificateIssuer);
        if (*__ICertificateIssuer) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCertificateIssuerHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificateIssuerHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateIssuerHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ICertificateIssuerHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateIssuerHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateIssuerHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateIssuerHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCertificateList
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificateListClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificateList, RGM_SAME_DOMAIN,
                EIID_ICCertificateListClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPTbsCertListPSignatureAlgorithmPSignatureValue(pTbsCertList, pSignatureAlgorithm, pSignatureValue, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificateListClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificateList, RGM_SAME_DOMAIN,
                EIID_ICCertificateListClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPTbsCertListPSignatureAlgorithmPSignatureValueEncoding(pTbsCertList, pSignatureAlgorithm, pSignatureValue, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificateList** __ICertificateList)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertList, pSignatureAlgorithm, pSignatureValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificateList = (Org::Apache::Harmony::Security::X509::ICertificateList*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ICertificateList);
        if (*__ICertificateList) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertList, pSignatureAlgorithm, pSignatureValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertList, pSignatureAlgorithm, pSignatureValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertList, pSignatureAlgorithm, pSignatureValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificateList** __ICertificateList)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertList, pSignatureAlgorithm, pSignatureValue, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificateList = (Org::Apache::Harmony::Security::X509::ICertificateList*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ICertificateList);
        if (*__ICertificateList) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertList, pSignatureAlgorithm, pSignatureValue, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertList, pSignatureAlgorithm, pSignatureValue, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::ITBSCertList * pTbsCertList,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignatureAlgorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSignatureValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pTbsCertList, pSignatureAlgorithm, pSignatureValue, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCertificateListHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificateListHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateListHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ICertificateListHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateListHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateListHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificateListHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCertificatePolicies
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * policyInformations,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCertificatePoliciesClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCertificatePolicies, RGM_SAME_DOMAIN,
                EIID_ICCertificatePoliciesClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPolicyInformationsEncoding(policyInformations, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificatePolicies** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePolicies, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ICertificatePolicies, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePolicies, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IExtensionValue, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePolicies, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePolicies, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePolicies, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * policyInformations,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificatePolicies** __ICertificatePolicies)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyInformations, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICertificatePolicies = (Org::Apache::Harmony::Security::X509::ICertificatePolicies*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ICertificatePolicies);
        if (*__ICertificatePolicies) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * policyInformations,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyInformations, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * policyInformations,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyInformations, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * policyInformations,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyInformations, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * policyInformations,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyInformations, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CCertificatePoliciesHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ICertificatePoliciesHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePoliciesHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ICertificatePoliciesHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePoliciesHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePoliciesHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCertificatePoliciesHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CDNParser
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& dn,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDNParserClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDNParser, RGM_SAME_DOMAIN,
                EIID_ICDNParserClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDn(dn, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dn,
        /* [out] */ Org::Apache::Harmony::Security::X509::IDNParser** __IDNParser)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dn, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDNParser = (Org::Apache::Harmony::Security::X509::IDNParser*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IDNParser);
        if (*__IDNParser) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dn,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dn, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dn,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dn, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dn,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dn, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CDistributionPoint
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pReasons,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pCRLIssuer,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDistributionPointClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDistributionPoint, RGM_SAME_DOMAIN,
                EIID_ICDistributionPointClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPDistributionPointPReasonsPCRLIssuer(pDistributionPoint, pReasons, pCRLIssuer, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pReasons,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pCRLIssuer,
        /* [out] */ Org::Apache::Harmony::Security::X509::IDistributionPoint** __IDistributionPoint)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pReasons, pCRLIssuer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDistributionPoint = (Org::Apache::Harmony::Security::X509::IDistributionPoint*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IDistributionPoint);
        if (*__IDistributionPoint) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pReasons,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pCRLIssuer,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pReasons, pCRLIssuer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pReasons,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pCRLIssuer,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pReasons, pCRLIssuer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pReasons,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pCRLIssuer,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pReasons, pCRLIssuer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CDistributionPointHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IDistributionPointHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDistributionPointHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IDistributionPointHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDistributionPointHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDistributionPointHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDistributionPointHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CDistributionPointName
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pFullName,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDistributionPointNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDistributionPointName, RGM_SAME_DOMAIN,
                EIID_ICDistributionPointNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPFullName(pFullName, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pNameRelativeToCRLIssuer,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDistributionPointNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDistributionPointName, RGM_SAME_DOMAIN,
                EIID_ICDistributionPointNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPNameRelativeToCRLIssuer(pNameRelativeToCRLIssuer, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pFullName,
        /* [out] */ Org::Apache::Harmony::Security::X509::IDistributionPointName** __IDistributionPointName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pFullName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDistributionPointName = (Org::Apache::Harmony::Security::X509::IDistributionPointName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IDistributionPointName);
        if (*__IDistributionPointName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pFullName,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pFullName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pFullName,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pFullName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralNames * pFullName,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pFullName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pNameRelativeToCRLIssuer,
        /* [out] */ Org::Apache::Harmony::Security::X509::IDistributionPointName** __IDistributionPointName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNameRelativeToCRLIssuer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDistributionPointName = (Org::Apache::Harmony::Security::X509::IDistributionPointName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IDistributionPointName);
        if (*__IDistributionPointName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pNameRelativeToCRLIssuer,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNameRelativeToCRLIssuer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pNameRelativeToCRLIssuer,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNameRelativeToCRLIssuer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pNameRelativeToCRLIssuer,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNameRelativeToCRLIssuer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CDistributionPointNameHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IDistributionPointNameHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDistributionPointNameHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IDistributionPointNameHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDistributionPointNameHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDistributionPointNameHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CDistributionPointNameHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CEDIPartyName
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& nameAssigner,
        /* [in] */ const _ELASTOS String& partyName,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICEDIPartyNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CEDIPartyName, RGM_SAME_DOMAIN,
                EIID_ICEDIPartyNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithNameAssignerPartyNameEncoding(nameAssigner, partyName, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& nameAssigner,
        /* [in] */ const _ELASTOS String& partyName,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IEDIPartyName** __IEDIPartyName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameAssigner, partyName, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IEDIPartyName = (Org::Apache::Harmony::Security::X509::IEDIPartyName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IEDIPartyName);
        if (*__IEDIPartyName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& nameAssigner,
        /* [in] */ const _ELASTOS String& partyName,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameAssigner, partyName, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& nameAssigner,
        /* [in] */ const _ELASTOS String& partyName,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameAssigner, partyName, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& nameAssigner,
        /* [in] */ const _ELASTOS String& partyName,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameAssigner, partyName, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CEDIPartyNameHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IEDIPartyNameHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CEDIPartyNameHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IEDIPartyNameHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CEDIPartyNameHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CEDIPartyNameHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CEDIPartyNameHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CExtendedKeyUsage
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtendedKeyUsageClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtendedKeyUsage, RGM_SAME_DOMAIN,
                EIID_ICExtendedKeyUsageClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtendedKeyUsage** __IExtendedKeyUsage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtendedKeyUsage = (Org::Apache::Harmony::Security::X509::IExtendedKeyUsage*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtendedKeyUsage);
        if (*__IExtendedKeyUsage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CExtendedKeyUsageHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtendedKeyUsageHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtendedKeyUsageHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IExtendedKeyUsageHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtendedKeyUsageHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtendedKeyUsageHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtendedKeyUsageHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CExtension
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * pExtnValueObject,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtensionClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtension, RGM_SAME_DOMAIN,
                EIID_ICExtensionClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithExtnIDCriticalPExtnValueObject(extnID, critical, pExtnValueObject, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtensionClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtension, RGM_SAME_DOMAIN,
                EIID_ICExtensionClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithExtnIDCriticalPExtnValue(extnID, critical, pExtnValue, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtensionClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtension, RGM_SAME_DOMAIN,
                EIID_ICExtensionClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPExtnIDCriticalPExtnValue2(pExtnID, critical, pExtnValue2, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtensionClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtension, RGM_SAME_DOMAIN,
                EIID_ICExtensionClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithExtnIDPExtnValue(extnID, pExtnValue, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtensionClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtension, RGM_SAME_DOMAIN,
                EIID_ICExtensionClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPExtnIDPExtnValue2(pExtnID, pExtnValue2, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * extnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * rawExtnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * decodedExtValue,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtensionClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtension, RGM_SAME_DOMAIN,
                EIID_ICExtensionClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithExtnIDCriticalExtnValueRawExtnValueEncodingDecodedExtValue(extnID, critical, extnValue, rawExtnValue, encoding, decodedExtValue, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * pExtnValueObject,
        /* [out] */ Org::Apache::Harmony::Security::X509::IX509Extension** __IX509Extension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValueObject, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IX509Extension = (Org::Apache::Harmony::Security::X509::IX509Extension*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IX509Extension);
        if (*__IX509Extension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * pExtnValueObject,
        /* [out] */ Elastos::Security::Cert::IExtension** __IExtension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValueObject, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtension = (Elastos::Security::Cert::IExtension*)__pNewObj->Probe(Elastos::Security::Cert::EIID_IExtension);
        if (*__IExtension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * pExtnValueObject,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValueObject, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * pExtnValueObject,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValueObject, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * pExtnValueObject,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValueObject, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ Org::Apache::Harmony::Security::X509::IX509Extension** __IX509Extension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IX509Extension = (Org::Apache::Harmony::Security::X509::IX509Extension*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IX509Extension);
        if (*__IX509Extension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ Elastos::Security::Cert::IExtension** __IExtension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtension = (Elastos::Security::Cert::IExtension*)__pNewObj->Probe(Elastos::Security::Cert::EIID_IExtension);
        if (*__IExtension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ Org::Apache::Harmony::Security::X509::IX509Extension** __IX509Extension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, critical, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IX509Extension = (Org::Apache::Harmony::Security::X509::IX509Extension*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IX509Extension);
        if (*__IX509Extension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ Elastos::Security::Cert::IExtension** __IExtension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, critical, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtension = (Elastos::Security::Cert::IExtension*)__pNewObj->Probe(Elastos::Security::Cert::EIID_IExtension);
        if (*__IExtension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, critical, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, critical, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, critical, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ Org::Apache::Harmony::Security::X509::IX509Extension** __IX509Extension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IX509Extension = (Org::Apache::Harmony::Security::X509::IX509Extension*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IX509Extension);
        if (*__IX509Extension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ Elastos::Security::Cert::IExtension** __IExtension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtension = (Elastos::Security::Cert::IExtension*)__pNewObj->Probe(Elastos::Security::Cert::EIID_IExtension);
        if (*__IExtension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& extnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, pExtnValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ Org::Apache::Harmony::Security::X509::IX509Extension** __IX509Extension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IX509Extension = (Org::Apache::Harmony::Security::X509::IX509Extension*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IX509Extension);
        if (*__IX509Extension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ Elastos::Security::Cert::IExtension** __IExtension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtension = (Elastos::Security::Cert::IExtension*)__pNewObj->Probe(Elastos::Security::Cert::EIID_IExtension);
        if (*__IExtension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * pExtnID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pExtnValue2,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtnID, pExtnValue2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * extnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * rawExtnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * decodedExtValue,
        /* [out] */ Org::Apache::Harmony::Security::X509::IX509Extension** __IX509Extension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, extnValue, rawExtnValue, encoding, decodedExtValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IX509Extension = (Org::Apache::Harmony::Security::X509::IX509Extension*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IX509Extension);
        if (*__IX509Extension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * extnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * rawExtnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * decodedExtValue,
        /* [out] */ Elastos::Security::Cert::IExtension** __IExtension)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, extnValue, rawExtnValue, encoding, decodedExtValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtension = (Elastos::Security::Cert::IExtension*)__pNewObj->Probe(Elastos::Security::Cert::EIID_IExtension);
        if (*__IExtension) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * extnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * rawExtnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * decodedExtValue,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, extnValue, rawExtnValue, encoding, decodedExtValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * extnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * rawExtnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * decodedExtValue,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, extnValue, rawExtnValue, encoding, decodedExtValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * extnID,
        /* [in] */ _ELASTOS Boolean critical,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * extnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * rawExtnValue,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensionValue * decodedExtValue,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(extnID, critical, extnValue, rawExtnValue, encoding, decodedExtValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CExtensionHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensionHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IExtensionHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensionHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensionHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensionHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CExtensionValue
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtensionValueClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtensionValue, RGM_SAME_DOMAIN,
                EIID_ICExtensionValueClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CExtensions
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * pExtensions,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICExtensionsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CExtensions, RGM_SAME_DOMAIN,
                EIID_ICExtensionsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPExtensions(pExtensions, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensions** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensions, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IExtensions, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensions, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensions, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensions, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pExtensions,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensions** __IExtensions)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensions = (Org::Apache::Harmony::Security::X509::IExtensions*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensions);
        if (*__IExtensions) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pExtensions,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pExtensions,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pExtensions,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CExtensionsHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionsHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensionsHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IExtensionsHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensionsHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensionsHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CExtensionsHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CGeneralName
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralName, RGM_SAME_DOMAIN,
                EIID_ICGeneralNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTagName(tag, name, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IOtherName * pName,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralName, RGM_SAME_DOMAIN,
                EIID_ICGeneralNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPName(pName, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IORAddress * pName1,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralName, RGM_SAME_DOMAIN,
                EIID_ICGeneralNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPName1(pName1, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pName2,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralName, RGM_SAME_DOMAIN,
                EIID_ICGeneralNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPName2(pName2, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IEDIPartyName * pName3,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralName, RGM_SAME_DOMAIN,
                EIID_ICGeneralNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPName3(pName3, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName4,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralName, RGM_SAME_DOMAIN,
                EIID_ICGeneralNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPName4(pName4, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName1,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralName, RGM_SAME_DOMAIN,
                EIID_ICGeneralNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTagPName1(tag, pName1, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName** __IGeneralName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tag, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralName = (Org::Apache::Harmony::Security::X509::IGeneralName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralName);
        if (*__IGeneralName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tag, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tag, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tag, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IOtherName * pName,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName** __IGeneralName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralName = (Org::Apache::Harmony::Security::X509::IGeneralName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralName);
        if (*__IGeneralName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IOtherName * pName,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IOtherName * pName,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IOtherName * pName,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IORAddress * pName1,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName** __IGeneralName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName1, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralName = (Org::Apache::Harmony::Security::X509::IGeneralName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralName);
        if (*__IGeneralName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IORAddress * pName1,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName1, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IORAddress * pName1,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName1, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IORAddress * pName1,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName1, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pName2,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName** __IGeneralName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralName = (Org::Apache::Harmony::Security::X509::IGeneralName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralName);
        if (*__IGeneralName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pName2,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pName2,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pName2,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName2, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IEDIPartyName * pName3,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName** __IGeneralName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName3, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralName = (Org::Apache::Harmony::Security::X509::IGeneralName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralName);
        if (*__IGeneralName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IEDIPartyName * pName3,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName3, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IEDIPartyName * pName3,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName3, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IEDIPartyName * pName3,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName3, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName4,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName** __IGeneralName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName4, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralName = (Org::Apache::Harmony::Security::X509::IGeneralName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralName);
        if (*__IGeneralName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName4,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName4, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName4,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName4, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName4,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pName4, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName1,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralName** __IGeneralName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tag, pName1, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralName = (Org::Apache::Harmony::Security::X509::IGeneralName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralName);
        if (*__IGeneralName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName1,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tag, pName1, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName1,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tag, pName1, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 tag,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pName1,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(tag, pName1, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CGeneralNameHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralNameHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNameHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IGeneralNameHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNameHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNameHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNameHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CGeneralNames
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * pGeneralNames,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNamesClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralNames, RGM_SAME_DOMAIN,
                EIID_ICGeneralNamesClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPGeneralNames(pGeneralNames, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * generalNames,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralNamesClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralNames, RGM_SAME_DOMAIN,
                EIID_ICGeneralNamesClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithGeneralNamesEncoding(generalNames, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralNames** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNames, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IGeneralNames, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNames, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNames, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNames, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pGeneralNames,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralNames** __IGeneralNames)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pGeneralNames, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralNames = (Org::Apache::Harmony::Security::X509::IGeneralNames*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralNames);
        if (*__IGeneralNames) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pGeneralNames,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pGeneralNames, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pGeneralNames,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pGeneralNames, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pGeneralNames,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pGeneralNames, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * generalNames,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralNames** __IGeneralNames)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(generalNames, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralNames = (Org::Apache::Harmony::Security::X509::IGeneralNames*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralNames);
        if (*__IGeneralNames) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * generalNames,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(generalNames, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * generalNames,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(generalNames, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * generalNames,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(generalNames, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CGeneralNamesHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralNamesHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNamesHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IGeneralNamesHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNamesHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNamesHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralNamesHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CGeneralSubtree
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pBase,
        /* [in] */ _ELASTOS Int32 minimum,
        /* [in] */ _ELASTOS Int32 maximum,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralSubtreeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralSubtree, RGM_SAME_DOMAIN,
                EIID_ICGeneralSubtreeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPBaseMinimumMaximum(pBase, minimum, maximum, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pBase,
        /* [in] */ _ELASTOS Int32 minimum,
        /* [in] */ _ELASTOS Int32 maximum,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralSubtree** __IGeneralSubtree)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pBase, minimum, maximum, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralSubtree = (Org::Apache::Harmony::Security::X509::IGeneralSubtree*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralSubtree);
        if (*__IGeneralSubtree) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pBase,
        /* [in] */ _ELASTOS Int32 minimum,
        /* [in] */ _ELASTOS Int32 maximum,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pBase, minimum, maximum, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pBase,
        /* [in] */ _ELASTOS Int32 minimum,
        /* [in] */ _ELASTOS Int32 maximum,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pBase, minimum, maximum, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralName * pBase,
        /* [in] */ _ELASTOS Int32 minimum,
        /* [in] */ _ELASTOS Int32 maximum,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pBase, minimum, maximum, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CGeneralSubtreeHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralSubtreeHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralSubtreeHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IGeneralSubtreeHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralSubtreeHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralSubtreeHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralSubtreeHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CGeneralSubtrees
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * pGeneralSubtrees,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICGeneralSubtreesClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CGeneralSubtrees, RGM_SAME_DOMAIN,
                EIID_ICGeneralSubtreesClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPGeneralSubtrees(pGeneralSubtrees, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pGeneralSubtrees,
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees** __IGeneralSubtrees)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pGeneralSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IGeneralSubtrees = (Org::Apache::Harmony::Security::X509::IGeneralSubtrees*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IGeneralSubtrees);
        if (*__IGeneralSubtrees) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pGeneralSubtrees,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pGeneralSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pGeneralSubtrees,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pGeneralSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * pGeneralSubtrees,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pGeneralSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CGeneralSubtreesHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IGeneralSubtreesHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralSubtreesHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IGeneralSubtreesHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralSubtreesHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralSubtreesHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CGeneralSubtreesHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CInfoAccessSyntax
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * accessDescriptions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICInfoAccessSyntaxClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CInfoAccessSyntax, RGM_SAME_DOMAIN,
                EIID_ICInfoAccessSyntaxClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAccessDescriptionsEncoding(accessDescriptions, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * accessDescriptions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IInfoAccessSyntax** __IInfoAccessSyntax)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(accessDescriptions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IInfoAccessSyntax = (Org::Apache::Harmony::Security::X509::IInfoAccessSyntax*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IInfoAccessSyntax);
        if (*__IInfoAccessSyntax) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * accessDescriptions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(accessDescriptions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * accessDescriptions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(accessDescriptions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * accessDescriptions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(accessDescriptions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * accessDescriptions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(accessDescriptions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CInfoAccessSyntaxHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IInfoAccessSyntaxHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CInfoAccessSyntaxHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IInfoAccessSyntaxHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CInfoAccessSyntaxHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CInfoAccessSyntaxHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CInfoAccessSyntaxHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CInhibitAnyPolicy
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICInhibitAnyPolicyClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CInhibitAnyPolicy, RGM_SAME_DOMAIN,
                EIID_ICInhibitAnyPolicyClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IInhibitAnyPolicy** __IInhibitAnyPolicy)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IInhibitAnyPolicy = (Org::Apache::Harmony::Security::X509::IInhibitAnyPolicy*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IInhibitAnyPolicy);
        if (*__IInhibitAnyPolicy) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CInvalidityDate
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICInvalidityDateClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CInvalidityDate, RGM_SAME_DOMAIN,
                EIID_ICInvalidityDateClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICInvalidityDateClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CInvalidityDate, RGM_SAME_DOMAIN,
                EIID_ICInvalidityDateClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDate(date, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IInvalidityDate** __IInvalidityDate)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IInvalidityDate = (Org::Apache::Harmony::Security::X509::IInvalidityDate*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IInvalidityDate);
        if (*__IInvalidityDate) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ Org::Apache::Harmony::Security::X509::IInvalidityDate** __IInvalidityDate)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(date, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IInvalidityDate = (Org::Apache::Harmony::Security::X509::IInvalidityDate*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IInvalidityDate);
        if (*__IInvalidityDate) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(date, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(date, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(date, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * date,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(date, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CInvalidityDateHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IInvalidityDateHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CInvalidityDateHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IInvalidityDateHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CInvalidityDateHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CInvalidityDateHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CInvalidityDateHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CIssuingDistributionPoint
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pOnlySomeReasons,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICIssuingDistributionPointClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CIssuingDistributionPoint, RGM_SAME_DOMAIN,
                EIID_ICIssuingDistributionPointClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPDistributionPointPOnlySomeReasons(pDistributionPoint, pOnlySomeReasons, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pOnlySomeReasons,
        /* [out] */ Org::Apache::Harmony::Security::X509::IIssuingDistributionPoint** __IIssuingDistributionPoint)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pOnlySomeReasons, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IIssuingDistributionPoint = (Org::Apache::Harmony::Security::X509::IIssuingDistributionPoint*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IIssuingDistributionPoint);
        if (*__IIssuingDistributionPoint) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pOnlySomeReasons,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pOnlySomeReasons, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pOnlySomeReasons,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pOnlySomeReasons, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pOnlySomeReasons,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pOnlySomeReasons, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IDistributionPointName * pDistributionPoint,
        /* [in] */ Org::Apache::Harmony::Security::X509::IReasonFlags * pOnlySomeReasons,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pDistributionPoint, pOnlySomeReasons, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CIssuingDistributionPointHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IIssuingDistributionPointHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CIssuingDistributionPointHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IIssuingDistributionPointHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CIssuingDistributionPointHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CIssuingDistributionPointHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CIssuingDistributionPointHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CKeyUsage
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICKeyUsageClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CKeyUsage, RGM_SAME_DOMAIN,
                EIID_ICKeyUsageClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IKeyUsage** __IKeyUsage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IKeyUsage = (Org::Apache::Harmony::Security::X509::IKeyUsage*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IKeyUsage);
        if (*__IKeyUsage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CNameConstraints
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pPermittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pExcludedSubtrees,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNameConstraintsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CNameConstraints, RGM_SAME_DOMAIN,
                EIID_ICNameConstraintsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPPermittedSubtreesPExcludedSubtrees(pPermittedSubtrees, pExcludedSubtrees, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * permittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * excludedSubtrees,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNameConstraintsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CNameConstraints, RGM_SAME_DOMAIN,
                EIID_ICNameConstraintsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPermittedSubtreesExcludedSubtreesEncoding(permittedSubtrees, excludedSubtrees, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pPermittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pExcludedSubtrees,
        /* [out] */ Org::Apache::Harmony::Security::X509::INameConstraints** __INameConstraints)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pPermittedSubtrees, pExcludedSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INameConstraints = (Org::Apache::Harmony::Security::X509::INameConstraints*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_INameConstraints);
        if (*__INameConstraints) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pPermittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pExcludedSubtrees,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pPermittedSubtrees, pExcludedSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pPermittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pExcludedSubtrees,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pPermittedSubtrees, pExcludedSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pPermittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pExcludedSubtrees,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pPermittedSubtrees, pExcludedSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pPermittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * pExcludedSubtrees,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pPermittedSubtrees, pExcludedSubtrees, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * permittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * excludedSubtrees,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::INameConstraints** __INameConstraints)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(permittedSubtrees, excludedSubtrees, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INameConstraints = (Org::Apache::Harmony::Security::X509::INameConstraints*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_INameConstraints);
        if (*__INameConstraints) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * permittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * excludedSubtrees,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(permittedSubtrees, excludedSubtrees, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * permittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * excludedSubtrees,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(permittedSubtrees, excludedSubtrees, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * permittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * excludedSubtrees,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(permittedSubtrees, excludedSubtrees, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * permittedSubtrees,
        /* [in] */ Org::Apache::Harmony::Security::X509::IGeneralSubtrees * excludedSubtrees,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(permittedSubtrees, excludedSubtrees, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CNameConstraintsHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::INameConstraintsHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNameConstraintsHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_INameConstraintsHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNameConstraintsHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNameConstraintsHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CNameConstraintsHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CORAddress
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::X509::IORAddress** __object)
    {
        return _CObject_CreateInstance(ECLSID_CORAddress, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IORAddress, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CORAddress, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CORAddress, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CORAddress, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CORAddressHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IORAddressHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CORAddressHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IORAddressHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CORAddressHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CORAddressHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CORAddressHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class COtherName
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pValue,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICOtherNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_COtherName, RGM_SAME_DOMAIN,
                EIID_ICOtherNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTypeIDPValue(typeID, pValue, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * value,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICOtherNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_COtherName, RGM_SAME_DOMAIN,
                EIID_ICOtherNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTypeIDValueEncoding(typeID, value, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pValue,
        /* [out] */ Org::Apache::Harmony::Security::X509::IOtherName** __IOtherName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(typeID, pValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IOtherName = (Org::Apache::Harmony::Security::X509::IOtherName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IOtherName);
        if (*__IOtherName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pValue,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(typeID, pValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pValue,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(typeID, pValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pValue,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(typeID, pValue, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * value,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IOtherName** __IOtherName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(typeID, value, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IOtherName = (Org::Apache::Harmony::Security::X509::IOtherName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IOtherName);
        if (*__IOtherName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * value,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(typeID, value, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * value,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(typeID, value, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& typeID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * value,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(typeID, value, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class COtherNameHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IOtherNameHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_COtherNameHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IOtherNameHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_COtherNameHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_COtherNameHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_COtherNameHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CPolicyConstraints
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPolicyConstraintsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPolicyConstraints, RGM_SAME_DOMAIN,
                EIID_ICPolicyConstraintsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPRequireExplicitPolicyPInhibitPolicyMapping(pRequireExplicitPolicy, pInhibitPolicyMapping, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPolicyConstraintsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPolicyConstraints, RGM_SAME_DOMAIN,
                EIID_ICPolicyConstraintsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPolicyConstraintsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPolicyConstraints, RGM_SAME_DOMAIN,
                EIID_ICPolicyConstraintsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPRequireExplicitPolicyPInhibitPolicyMappingPEncoding(pRequireExplicitPolicy, pInhibitPolicyMapping, pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [out] */ Org::Apache::Harmony::Security::X509::IPolicyConstraints** __IPolicyConstraints)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPolicyConstraints = (Org::Apache::Harmony::Security::X509::IPolicyConstraints*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IPolicyConstraints);
        if (*__IPolicyConstraints) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IPolicyConstraints** __IPolicyConstraints)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPolicyConstraints = (Org::Apache::Harmony::Security::X509::IPolicyConstraints*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IPolicyConstraints);
        if (*__IPolicyConstraints) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IPolicyConstraints** __IPolicyConstraints)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPolicyConstraints = (Org::Apache::Harmony::Security::X509::IPolicyConstraints*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IPolicyConstraints);
        if (*__IPolicyConstraints) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Math::IBigInteger * pRequireExplicitPolicy,
        /* [in] */ Elastos::Math::IBigInteger * pInhibitPolicyMapping,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pRequireExplicitPolicy, pInhibitPolicyMapping, pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CPolicyConstraintsHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IPolicyConstraintsHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyConstraintsHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IPolicyConstraintsHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyConstraintsHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyConstraintsHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyConstraintsHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CPolicyInformation
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& policyIdentifier,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPolicyInformationClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPolicyInformation, RGM_SAME_DOMAIN,
                EIID_ICPolicyInformationClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPolicyIdentifier(policyIdentifier, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& policyIdentifier,
        /* [out] */ Org::Apache::Harmony::Security::X509::IPolicyInformation** __IPolicyInformation)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPolicyInformation = (Org::Apache::Harmony::Security::X509::IPolicyInformation*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IPolicyInformation);
        if (*__IPolicyInformation) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& policyIdentifier,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& policyIdentifier,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& policyIdentifier,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(policyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CPolicyInformationHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IPolicyInformationHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyInformationHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IPolicyInformationHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyInformationHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyInformationHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyInformationHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CPolicyQualifierInfoHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IPolicyQualifierInfoHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyQualifierInfoHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IPolicyQualifierInfoHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyQualifierInfoHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyQualifierInfoHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPolicyQualifierInfoHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CPrivateKeyUsagePeriod
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPrivateKeyUsagePeriodClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPrivateKeyUsagePeriod, RGM_SAME_DOMAIN,
                EIID_ICPrivateKeyUsagePeriodClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPNotBeforeDatePNotAfterDate(pNotBeforeDate, pNotAfterDate, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPrivateKeyUsagePeriodClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPrivateKeyUsagePeriod, RGM_SAME_DOMAIN,
                EIID_ICPrivateKeyUsagePeriodClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPNotBeforeDatePNotAfterDateEncoding(pNotBeforeDate, pNotAfterDate, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [out] */ Org::Apache::Harmony::Security::X509::IPrivateKeyUsagePeriod** __IPrivateKeyUsagePeriod)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBeforeDate, pNotAfterDate, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPrivateKeyUsagePeriod = (Org::Apache::Harmony::Security::X509::IPrivateKeyUsagePeriod*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IPrivateKeyUsagePeriod);
        if (*__IPrivateKeyUsagePeriod) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBeforeDate, pNotAfterDate, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBeforeDate, pNotAfterDate, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBeforeDate, pNotAfterDate, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IPrivateKeyUsagePeriod** __IPrivateKeyUsagePeriod)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBeforeDate, pNotAfterDate, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPrivateKeyUsagePeriod = (Org::Apache::Harmony::Security::X509::IPrivateKeyUsagePeriod*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IPrivateKeyUsagePeriod);
        if (*__IPrivateKeyUsagePeriod) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBeforeDate, pNotAfterDate, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBeforeDate, pNotAfterDate, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBeforeDate,
        /* [in] */ Elastos::Utility::IDate * pNotAfterDate,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBeforeDate, pNotAfterDate, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CPrivateKeyUsagePeriodHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IPrivateKeyUsagePeriodHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPrivateKeyUsagePeriodHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IPrivateKeyUsagePeriodHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPrivateKeyUsagePeriodHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPrivateKeyUsagePeriodHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPrivateKeyUsagePeriodHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CReasonCode
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICReasonCodeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CReasonCode, RGM_SAME_DOMAIN,
                EIID_ICReasonCodeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPEncoding(pEncoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IReasonCode** __IReasonCode)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IReasonCode = (Org::Apache::Harmony::Security::X509::IReasonCode*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IReasonCode);
        if (*__IReasonCode) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pEncoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CReasonCodeHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IReasonCodeHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CReasonCodeHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IReasonCodeHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CReasonCodeHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CReasonCodeHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CReasonCodeHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CReasonFlags
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pFlags,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICReasonFlagsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CReasonFlags, RGM_SAME_DOMAIN,
                EIID_ICReasonFlagsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPFlags(pFlags, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pFlags,
        /* [out] */ Org::Apache::Harmony::Security::X509::IReasonFlags** __IReasonFlags)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pFlags, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IReasonFlags = (Org::Apache::Harmony::Security::X509::IReasonFlags*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IReasonFlags);
        if (*__IReasonFlags) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pFlags,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pFlags, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pFlags,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pFlags, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pFlags,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pFlags, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CReasonFlagsHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IReasonFlagsHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CReasonFlagsHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IReasonFlagsHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CReasonFlagsHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CReasonFlagsHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CReasonFlagsHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CSubjectKeyIdentifier
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSubjectKeyIdentifierClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSubjectKeyIdentifier, RGM_SAME_DOMAIN,
                EIID_ICSubjectKeyIdentifierClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPKeyIdentifier(pKeyIdentifier, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [out] */ Org::Apache::Harmony::Security::X509::ISubjectKeyIdentifier** __ISubjectKeyIdentifier)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISubjectKeyIdentifier = (Org::Apache::Harmony::Security::X509::ISubjectKeyIdentifier*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ISubjectKeyIdentifier);
        if (*__ISubjectKeyIdentifier) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [out] */ Org::Apache::Harmony::Security::X509::IExtensionValue** __IExtensionValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IExtensionValue = (Org::Apache::Harmony::Security::X509::IExtensionValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IExtensionValue);
        if (*__IExtensionValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyIdentifier,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pKeyIdentifier, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CSubjectKeyIdentifierHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ISubjectKeyIdentifierHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSubjectKeyIdentifierHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ISubjectKeyIdentifierHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSubjectKeyIdentifierHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSubjectKeyIdentifierHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSubjectKeyIdentifierHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CSubjectPublicKeyInfo
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSubjectPublicKeyInfoClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSubjectPublicKeyInfo, RGM_SAME_DOMAIN,
                EIID_ICSubjectPublicKeyInfoClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPAlgIDPSubjectPublicKey(pAlgID, pSubjectPublicKey, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSubjectPublicKeyInfoClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSubjectPublicKeyInfo, RGM_SAME_DOMAIN,
                EIID_ICSubjectPublicKeyInfoClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPAlgIDPSubjectPublicKeyUnused(pAlgID, pSubjectPublicKey, unused, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSubjectPublicKeyInfoClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSubjectPublicKeyInfo, RGM_SAME_DOMAIN,
                EIID_ICSubjectPublicKeyInfoClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPAlgIDPSubjectPublicKeyUnusedEncoding(pAlgID, pSubjectPublicKey, unused, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [out] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo** __ISubjectPublicKeyInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISubjectPublicKeyInfo = (Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ISubjectPublicKeyInfo);
        if (*__ISubjectPublicKeyInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [out] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo** __ISubjectPublicKeyInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, unused, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISubjectPublicKeyInfo = (Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ISubjectPublicKeyInfo);
        if (*__ISubjectPublicKeyInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, unused, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, unused, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, unused, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo** __ISubjectPublicKeyInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, unused, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISubjectPublicKeyInfo = (Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ISubjectPublicKeyInfo);
        if (*__ISubjectPublicKeyInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, unused, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, unused, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pAlgID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pSubjectPublicKey,
        /* [in] */ _ELASTOS Int32 unused,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pAlgID, pSubjectPublicKey, unused, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CSubjectPublicKeyInfoHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfoHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSubjectPublicKeyInfoHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ISubjectPublicKeyInfoHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSubjectPublicKeyInfoHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSubjectPublicKeyInfoHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSubjectPublicKeyInfoHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CTBSCertList
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * issuer,
        /* [in] */ Elastos::Utility::IDate * thisUpdate,
        /* [in] */ Elastos::Utility::IDate * nextUpdate,
        /* [in] */ Elastos::Utility::IList * revokedCertificates,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * crlExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICTBSCertListClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CTBSCertList, RGM_SAME_DOMAIN,
                EIID_ICTBSCertListClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVSignatureIssuerThisUpdateNextUpdateRevokedCertificatesCrlExtensionsEncoding(v, signature, issuer, thisUpdate, nextUpdate, revokedCertificates, crlExtensions, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * issuer,
        /* [in] */ Elastos::Utility::IDate * thisUpdate,
        /* [in] */ Elastos::Utility::IDate * nextUpdate,
        /* [in] */ Elastos::Utility::IList * revokedCertificates,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * crlExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ITBSCertList** __ITBSCertList)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, signature, issuer, thisUpdate, nextUpdate, revokedCertificates, crlExtensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ITBSCertList = (Org::Apache::Harmony::Security::X509::ITBSCertList*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ITBSCertList);
        if (*__ITBSCertList) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * issuer,
        /* [in] */ Elastos::Utility::IDate * thisUpdate,
        /* [in] */ Elastos::Utility::IDate * nextUpdate,
        /* [in] */ Elastos::Utility::IList * revokedCertificates,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * crlExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, signature, issuer, thisUpdate, nextUpdate, revokedCertificates, crlExtensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * issuer,
        /* [in] */ Elastos::Utility::IDate * thisUpdate,
        /* [in] */ Elastos::Utility::IDate * nextUpdate,
        /* [in] */ Elastos::Utility::IList * revokedCertificates,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * crlExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, signature, issuer, thisUpdate, nextUpdate, revokedCertificates, crlExtensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 v,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * signature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * issuer,
        /* [in] */ Elastos::Utility::IDate * thisUpdate,
        /* [in] */ Elastos::Utility::IDate * nextUpdate,
        /* [in] */ Elastos::Utility::IList * revokedCertificates,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * crlExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(v, signature, issuer, thisUpdate, nextUpdate, revokedCertificates, crlExtensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CTBSCertListHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ITBSCertListHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTBSCertListHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ITBSCertListHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTBSCertListHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTBSCertListHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTBSCertListHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CTBSCertificate
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICTBSCertificateClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CTBSCertificate, RGM_SAME_DOMAIN,
                EIID_ICTBSCertificateClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVerPSerialNumberPSignaturePIssuerPValidityPSubjectPSubjectPublicKeyInfoPIssuerUniqueIDPSubjectUniqueIDPExtensions(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICTBSCertificateClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CTBSCertificate, RGM_SAME_DOMAIN,
                EIID_ICTBSCertificateClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVerPSerialNumberPSignaturePIssuerPValidityPSubjectPSubjectPublicKeyInfoPIssuerUniqueIDPSubjectUniqueIDPExtensionsEncoding(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ Org::Apache::Harmony::Security::X509::ITBSCertificate** __ITBSCertificate)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ITBSCertificate = (Org::Apache::Harmony::Security::X509::ITBSCertificate*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ITBSCertificate);
        if (*__ITBSCertificate) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X509::ITBSCertificate** __ITBSCertificate)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ITBSCertificate = (Org::Apache::Harmony::Security::X509::ITBSCertificate*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_ITBSCertificate);
        if (*__ITBSCertificate) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 ver,
        /* [in] */ Elastos::Math::IBigInteger * pSerialNumber,
        /* [in] */ Org::Apache::Harmony::Security::X509::IAlgorithmIdentifier * pSignature,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pIssuer,
        /* [in] */ Org::Apache::Harmony::Security::X509::IValidity * pValidity,
        /* [in] */ Org::Apache::Harmony::Security::X501::IName * pSubject,
        /* [in] */ Org::Apache::Harmony::Security::X509::ISubjectPublicKeyInfo * pSubjectPublicKeyInfo,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pIssuerUniqueID,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Boolean> * pSubjectUniqueID,
        /* [in] */ Org::Apache::Harmony::Security::X509::IExtensions * pExtensions,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, pSerialNumber, pSignature, pIssuer, pValidity, pSubject, pSubjectPublicKeyInfo, pIssuerUniqueID, pSubjectUniqueID, pExtensions, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CTBSCertificateHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::ITBSCertificateHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTBSCertificateHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_ITBSCertificateHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTBSCertificateHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTBSCertificateHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CTBSCertificateHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CValidity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IDate * pNotBefore,
        /* [in] */ Elastos::Utility::IDate * pNotAfter,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICValidityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CValidity, RGM_SAME_DOMAIN,
                EIID_ICValidityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithPNotBeforePNotAfter(pNotBefore, pNotAfter, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBefore,
        /* [in] */ Elastos::Utility::IDate * pNotAfter,
        /* [out] */ Org::Apache::Harmony::Security::X509::IValidity** __IValidity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBefore, pNotAfter, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IValidity = (Org::Apache::Harmony::Security::X509::IValidity*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IValidity);
        if (*__IValidity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBefore,
        /* [in] */ Elastos::Utility::IDate * pNotAfter,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBefore, pNotAfter, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBefore,
        /* [in] */ Elastos::Utility::IDate * pNotAfter,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBefore, pNotAfter, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IDate * pNotBefore,
        /* [in] */ Elastos::Utility::IDate * pNotAfter,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(pNotBefore, pNotAfter, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CValidityHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Harmony::Security::X509::IValidityHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CValidityHelper, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::X509::EIID_IValidityHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CValidityHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CValidityHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CValidityHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X509 {
class CX509PublicKey
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICX509PublicKeyClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CX509PublicKey, RGM_SAME_DOMAIN,
                EIID_ICX509PublicKeyClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAlgorithmPEncodedPKeyBytes(algorithm, pEncoded, pKeyBytes, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ Org::Apache::Harmony::Security::X509::IX509PublicKey** __IX509PublicKey)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pEncoded, pKeyBytes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IX509PublicKey = (Org::Apache::Harmony::Security::X509::IX509PublicKey*)__pNewObj->Probe(Org::Apache::Harmony::Security::X509::EIID_IX509PublicKey);
        if (*__IX509PublicKey) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ Elastos::Security::IPublicKey** __IPublicKey)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pEncoded, pKeyBytes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPublicKey = (Elastos::Security::IPublicKey*)__pNewObj->Probe(Elastos::Security::EIID_IPublicKey);
        if (*__IPublicKey) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ Elastos::Security::IKey** __IKey)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pEncoded, pKeyBytes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IKey = (Elastos::Security::IKey*)__pNewObj->Probe(Elastos::Security::EIID_IKey);
        if (*__IKey) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ Elastos::IO::ISerializable** __ISerializable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pEncoded, pKeyBytes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISerializable = (Elastos::IO::ISerializable*)__pNewObj->Probe(Elastos::IO::EIID_ISerializable);
        if (*__ISerializable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pEncoded, pKeyBytes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pEncoded, pKeyBytes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pEncoded,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * pKeyBytes,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, pEncoded, pKeyBytes, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
class CName
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CName, RGM_SAME_DOMAIN,
                EIID_ICNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithEncoding(encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CName, RGM_SAME_DOMAIN,
                EIID_ICNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithName(name, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * rdn,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNameClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CName, RGM_SAME_DOMAIN,
                EIID_ICNameClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithRdn(rdn, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Org::Apache::Harmony::Security::X501::IName** __IName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IName = (Org::Apache::Harmony::Security::X501::IName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X501::EIID_IName);
        if (*__IName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Harmony::Security::X501::IName** __IName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IName = (Org::Apache::Harmony::Security::X501::IName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X501::EIID_IName);
        if (*__IName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * rdn,
        /* [out] */ Org::Apache::Harmony::Security::X501::IName** __IName)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(rdn, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IName = (Org::Apache::Harmony::Security::X501::IName*)__pNewObj->Probe(Org::Apache::Harmony::Security::X501::EIID_IName);
        if (*__IName) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * rdn,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(rdn, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * rdn,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(rdn, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * rdn,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(rdn, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
class CAttributeTypeAndValue
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oidValue,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAttributeTypeAndValueClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAttributeTypeAndValue, RGM_SAME_DOMAIN,
                EIID_ICAttributeTypeAndValueClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithOidValueValue(oidValue, value, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAttributeTypeAndValueClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAttributeTypeAndValue, RGM_SAME_DOMAIN,
                EIID_ICAttributeTypeAndValueClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithOidValue(oid, value, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oidValue,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ Org::Apache::Harmony::Security::X501::IAttributeTypeAndValue** __IAttributeTypeAndValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oidValue, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAttributeTypeAndValue = (Org::Apache::Harmony::Security::X501::IAttributeTypeAndValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X501::EIID_IAttributeTypeAndValue);
        if (*__IAttributeTypeAndValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oidValue,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oidValue, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oidValue,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oidValue, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oidValue,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oidValue, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ Org::Apache::Harmony::Security::X501::IAttributeTypeAndValue** __IAttributeTypeAndValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAttributeTypeAndValue = (Org::Apache::Harmony::Security::X501::IAttributeTypeAndValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X501::EIID_IAttributeTypeAndValue);
        if (*__IAttributeTypeAndValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Int32> * oid,
        /* [in] */ Org::Apache::Harmony::Security::X501::IAttributeValue * value,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(oid, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
class CAttributeTypeAndValueComparator
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::IComparator** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAttributeTypeAndValueComparator, RGM_SAME_DOMAIN, Elastos::Core::EIID_IComparator, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::IO::ISerializable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAttributeTypeAndValueComparator, RGM_SAME_DOMAIN, Elastos::IO::EIID_ISerializable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAttributeTypeAndValueComparator, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAttributeTypeAndValueComparator, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAttributeTypeAndValueComparator, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace X501 {
class CAttributeValue
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& parsedString,
        /* [in] */ _ELASTOS Boolean hasQorE,
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oid,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAttributeValueClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAttributeValue, RGM_SAME_DOMAIN,
                EIID_ICAttributeValueClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParsedStringHasQorEOid(parsedString, hasQorE, oid, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& hexString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAttributeValueClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAttributeValue, RGM_SAME_DOMAIN,
                EIID_ICAttributeValueClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHexStringEncoded(hexString, encoded, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& rawString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 tag,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAttributeValueClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAttributeValue, RGM_SAME_DOMAIN,
                EIID_ICAttributeValueClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithRawStringEncodedTag(rawString, encoded, tag, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& parsedString,
        /* [in] */ _ELASTOS Boolean hasQorE,
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oid,
        /* [out] */ Org::Apache::Harmony::Security::X501::IAttributeValue** __IAttributeValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parsedString, hasQorE, oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAttributeValue = (Org::Apache::Harmony::Security::X501::IAttributeValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X501::EIID_IAttributeValue);
        if (*__IAttributeValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& parsedString,
        /* [in] */ _ELASTOS Boolean hasQorE,
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oid,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parsedString, hasQorE, oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& parsedString,
        /* [in] */ _ELASTOS Boolean hasQorE,
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oid,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parsedString, hasQorE, oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& parsedString,
        /* [in] */ _ELASTOS Boolean hasQorE,
        /* [in] */ Org::Apache::Harmony::Security::Utils::IObjectIdentifier * oid,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parsedString, hasQorE, oid, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hexString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ Org::Apache::Harmony::Security::X501::IAttributeValue** __IAttributeValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hexString, encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAttributeValue = (Org::Apache::Harmony::Security::X501::IAttributeValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X501::EIID_IAttributeValue);
        if (*__IAttributeValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hexString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hexString, encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hexString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hexString, encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hexString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hexString, encoded, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& rawString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 tag,
        /* [out] */ Org::Apache::Harmony::Security::X501::IAttributeValue** __IAttributeValue)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(rawString, encoded, tag, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAttributeValue = (Org::Apache::Harmony::Security::X501::IAttributeValue*)__pNewObj->Probe(Org::Apache::Harmony::Security::X501::EIID_IAttributeValue);
        if (*__IAttributeValue) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& rawString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 tag,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(rawString, encoded, tag, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& rawString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 tag,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(rawString, encoded, tag, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& rawString,
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * encoded,
        /* [in] */ _ELASTOS Int32 tag,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(rawString, encoded, tag, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
class CPrivateKeyImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPrivateKeyImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPrivateKeyImpl, RGM_SAME_DOMAIN,
                EIID_ICPrivateKeyImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAlgorithm(algorithm, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Org::Apache::Harmony::Security::IPrivateKeyImpl** __IPrivateKeyImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPrivateKeyImpl = (Org::Apache::Harmony::Security::IPrivateKeyImpl*)__pNewObj->Probe(Org::Apache::Harmony::Security::EIID_IPrivateKeyImpl);
        if (*__IPrivateKeyImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Elastos::Security::IPrivateKey** __IPrivateKey)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPrivateKey = (Elastos::Security::IPrivateKey*)__pNewObj->Probe(Elastos::Security::EIID_IPrivateKey);
        if (*__IPrivateKey) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
class CPublicKeyImpl
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPublicKeyImplClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPublicKeyImpl, RGM_SAME_DOMAIN,
                EIID_ICPublicKeyImplClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAlgorithm(algorithm, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Org::Apache::Harmony::Security::IPublicKeyImpl** __IPublicKeyImpl)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPublicKeyImpl = (Org::Apache::Harmony::Security::IPublicKeyImpl*)__pNewObj->Probe(Org::Apache::Harmony::Security::EIID_IPublicKeyImpl);
        if (*__IPublicKeyImpl) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Elastos::Security::IPublicKey** __IPublicKey)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPublicKey = (Elastos::Security::IPublicKey*)__pNewObj->Probe(Elastos::Security::EIID_IPublicKey);
        if (*__IPublicKey) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
class CSystemScope
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSystemScopeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSystemScope, RGM_SAME_DOMAIN,
                EIID_ICSystemScopeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithName(name, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Elastos::Security::IIdentityScope * pScope,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSystemScopeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSystemScope, RGM_SAME_DOMAIN,
                EIID_ICSystemScopeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithNamePScope(name, pScope, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::ISystemScope** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSystemScope, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::EIID_ISystemScope, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Security::IIdentityScope** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSystemScope, RGM_SAME_DOMAIN, Elastos::Security::EIID_IIdentityScope, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSystemScope, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSystemScope, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSystemScope, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Harmony::Security::ISystemScope** __ISystemScope)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISystemScope = (Org::Apache::Harmony::Security::ISystemScope*)__pNewObj->Probe(Org::Apache::Harmony::Security::EIID_ISystemScope);
        if (*__ISystemScope) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Security::IIdentityScope** __IIdentityScope)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IIdentityScope = (Elastos::Security::IIdentityScope*)__pNewObj->Probe(Elastos::Security::EIID_IIdentityScope);
        if (*__IIdentityScope) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Elastos::Security::IIdentityScope * pScope,
        /* [out] */ Org::Apache::Harmony::Security::ISystemScope** __ISystemScope)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, pScope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISystemScope = (Org::Apache::Harmony::Security::ISystemScope*)__pNewObj->Probe(Org::Apache::Harmony::Security::EIID_ISystemScope);
        if (*__ISystemScope) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Elastos::Security::IIdentityScope * pScope,
        /* [out] */ Elastos::Security::IIdentityScope** __IIdentityScope)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, pScope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IIdentityScope = (Elastos::Security::IIdentityScope*)__pNewObj->Probe(Elastos::Security::EIID_IIdentityScope);
        if (*__IIdentityScope) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Elastos::Security::IIdentityScope * pScope,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, pScope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Elastos::Security::IIdentityScope * pScope,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, pScope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Elastos::Security::IIdentityScope * pScope,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, pScope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Provider {
namespace Crypto {
class CCryptoProvider
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Elastos::Security::IProvider** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, Elastos::Security::EIID_IProvider, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Utility::IProperties** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, Elastos::Utility::EIID_IProperties, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Utility::IHashTable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, Elastos::Utility::EIID_IHashTable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Utility::IDictionary** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, Elastos::Utility::EIID_IDictionary, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Utility::IMap** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, Elastos::Utility::EIID_IMap, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::IO::ISerializable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, Elastos::IO::EIID_ISerializable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCryptoProvider, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Harmony {
namespace Security {
namespace Provider {
namespace Crypto {
class CSHA1PRNG_SecureRandomImpl
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Harmony::Security::Provider::Crypto::ISHA1PRNG_SecureRandomImpl** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSHA1PRNG_SecureRandomImpl, RGM_SAME_DOMAIN, Org::Apache::Harmony::Security::Provider::Crypto::EIID_ISHA1PRNG_SecureRandomImpl, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Security::ISecureRandomSpi** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSHA1PRNG_SecureRandomImpl, RGM_SAME_DOMAIN, Elastos::Security::EIID_ISecureRandomSpi, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::IO::ISerializable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSHA1PRNG_SecureRandomImpl, RGM_SAME_DOMAIN, Elastos::IO::EIID_ISerializable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSHA1PRNG_SecureRandomImpl, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSHA1PRNG_SecureRandomImpl, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSHA1PRNG_SecureRandomImpl, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
class CHttpHost
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpHostClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpHost, RGM_SAME_DOMAIN,
                EIID_ICHttpHostClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHostNamePortScheme(hostName, port, scheme, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpHostClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpHost, RGM_SAME_DOMAIN,
                EIID_ICHttpHostClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHostNamePort(hostName, port, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpHostClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpHost, RGM_SAME_DOMAIN,
                EIID_ICHttpHostClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHostName(hostName, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpHost * httpHost,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpHostClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpHost, RGM_SAME_DOMAIN,
                EIID_ICHttpHostClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHttpHost(httpHost, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ Org::Apache::Http::IHttpHost** __IHttpHost)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpHost = (Org::Apache::Http::IHttpHost*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpHost);
        if (*__IHttpHost) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ Org::Apache::Http::IHttpHost** __IHttpHost)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpHost = (Org::Apache::Http::IHttpHost*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpHost);
        if (*__IHttpHost) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [out] */ Org::Apache::Http::IHttpHost** __IHttpHost)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpHost = (Org::Apache::Http::IHttpHost*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpHost);
        if (*__IHttpHost) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& hostName,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(hostName, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * httpHost,
        /* [out] */ Org::Apache::Http::IHttpHost** __IHttpHost)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(httpHost, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpHost = (Org::Apache::Http::IHttpHost*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpHost);
        if (*__IHttpHost) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * httpHost,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(httpHost, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * httpHost,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(httpHost, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * httpHost,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(httpHost, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * httpHost,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(httpHost, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
class CProtocolVersion
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& protocol,
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICProtocolVersionClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CProtocolVersion, RGM_SAME_DOMAIN,
                EIID_ICProtocolVersionClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithProtocolMajorMinor(protocol, major, minor, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IProtocolVersion** __object)
    {
        return _CObject_CreateInstance(ECLSID_CProtocolVersion, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IProtocolVersion, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CProtocolVersion, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CProtocolVersion, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CProtocolVersion, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CProtocolVersion, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& protocol,
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Org::Apache::Http::IProtocolVersion** __IProtocolVersion)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(protocol, major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IProtocolVersion = (Org::Apache::Http::IProtocolVersion*)__pNewObj->Probe(Org::Apache::Http::EIID_IProtocolVersion);
        if (*__IProtocolVersion) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& protocol,
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(protocol, major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& protocol,
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(protocol, major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& protocol,
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(protocol, major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& protocol,
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(protocol, major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
class CHttpVersion
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpVersionClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpVersion, RGM_SAME_DOMAIN,
                EIID_ICHttpVersionClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithMajorMinor(major, minor, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IProtocolVersion** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersion, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IProtocolVersion, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpVersion** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersion, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpVersion, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersion, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersion, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersion, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersion, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Org::Apache::Http::IProtocolVersion** __IProtocolVersion)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IProtocolVersion = (Org::Apache::Http::IProtocolVersion*)__pNewObj->Probe(Org::Apache::Http::EIID_IProtocolVersion);
        if (*__IProtocolVersion) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Org::Apache::Http::IHttpVersion** __IHttpVersion)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpVersion = (Org::Apache::Http::IHttpVersion*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpVersion);
        if (*__IHttpVersion) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 major,
        /* [in] */ _ELASTOS Int32 minor,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(major, minor, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
class CHttpVersionHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::IHttpVersionHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersionHelper, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpVersionHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersionHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersionHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpVersionHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
class CAuthSchemeRegistry
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Auth::IAuthSchemeRegistry** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthSchemeRegistry, RGM_SAME_DOMAIN, Org::Apache::Http::Auth::EIID_IAuthSchemeRegistry, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthSchemeRegistry, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthSchemeRegistry, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthSchemeRegistry, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
class CAuthScope
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAuthScopeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAuthScope, RGM_SAME_DOMAIN,
                EIID_ICAuthScopeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHostPortRealmScheme(host, port, realm, scheme, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAuthScopeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAuthScope, RGM_SAME_DOMAIN,
                EIID_ICAuthScopeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHostPortRealm(host, port, realm, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAuthScopeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAuthScope, RGM_SAME_DOMAIN,
                EIID_ICAuthScopeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHostPort(host, port, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authscope,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAuthScopeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAuthScope, RGM_SAME_DOMAIN,
                EIID_ICAuthScopeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAuthscope(authscope, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ Org::Apache::Http::Auth::IAuthScope** __IAuthScope)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, realm, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAuthScope = (Org::Apache::Http::Auth::IAuthScope*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_IAuthScope);
        if (*__IAuthScope) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, realm, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, realm, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [in] */ const _ELASTOS String& scheme,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, realm, scheme, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [out] */ Org::Apache::Http::Auth::IAuthScope** __IAuthScope)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, realm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAuthScope = (Org::Apache::Http::Auth::IAuthScope*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_IAuthScope);
        if (*__IAuthScope) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, realm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, realm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& realm,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, realm, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ Org::Apache::Http::Auth::IAuthScope** __IAuthScope)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAuthScope = (Org::Apache::Http::Auth::IAuthScope*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_IAuthScope);
        if (*__IAuthScope) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authscope,
        /* [out] */ Org::Apache::Http::Auth::IAuthScope** __IAuthScope)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(authscope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAuthScope = (Org::Apache::Http::Auth::IAuthScope*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_IAuthScope);
        if (*__IAuthScope) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authscope,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(authscope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authscope,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(authscope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Auth::IAuthScope * authscope,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(authscope, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
class CAuthScopeHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Auth::IAuthScopeHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthScopeHelper, RGM_SAME_DOMAIN, Org::Apache::Http::Auth::EIID_IAuthScopeHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthScopeHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthScopeHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthScopeHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
class CAuthState
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Auth::IAuthState** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthState, RGM_SAME_DOMAIN, Org::Apache::Http::Auth::EIID_IAuthState, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthState, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthState, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthState, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
class CBasicUserPrincipal
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicUserPrincipalClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicUserPrincipal, RGM_SAME_DOMAIN,
                EIID_ICBasicUserPrincipalClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUsername(username, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ Org::Apache::Http::Auth::IBasicUserPrincipal** __IBasicUserPrincipal)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicUserPrincipal = (Org::Apache::Http::Auth::IBasicUserPrincipal*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_IBasicUserPrincipal);
        if (*__IBasicUserPrincipal) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ Elastos::Security::IPrincipal** __IPrincipal)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPrincipal = (Elastos::Security::IPrincipal*)__pNewObj->Probe(Elastos::Security::EIID_IPrincipal);
        if (*__IPrincipal) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
class CNTCredentials
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNTCredentialsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CNTCredentials, RGM_SAME_DOMAIN,
                EIID_ICNTCredentialsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUsernamePassword(usernamePassword, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [in] */ const _ELASTOS String& workstation,
        /* [in] */ const _ELASTOS String& dom,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNTCredentialsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CNTCredentials, RGM_SAME_DOMAIN,
                EIID_ICNTCredentialsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUserNamePasswordWorkstationDom(userName, password, workstation, dom, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ Org::Apache::Http::Auth::INTCredentials** __INTCredentials)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INTCredentials = (Org::Apache::Http::Auth::INTCredentials*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_INTCredentials);
        if (*__INTCredentials) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ Org::Apache::Http::Auth::ICredentials** __ICredentials)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICredentials = (Org::Apache::Http::Auth::ICredentials*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_ICredentials);
        if (*__ICredentials) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [in] */ const _ELASTOS String& workstation,
        /* [in] */ const _ELASTOS String& dom,
        /* [out] */ Org::Apache::Http::Auth::INTCredentials** __INTCredentials)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, workstation, dom, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INTCredentials = (Org::Apache::Http::Auth::INTCredentials*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_INTCredentials);
        if (*__INTCredentials) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [in] */ const _ELASTOS String& workstation,
        /* [in] */ const _ELASTOS String& dom,
        /* [out] */ Org::Apache::Http::Auth::ICredentials** __ICredentials)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, workstation, dom, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICredentials = (Org::Apache::Http::Auth::ICredentials*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_ICredentials);
        if (*__ICredentials) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [in] */ const _ELASTOS String& workstation,
        /* [in] */ const _ELASTOS String& dom,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, workstation, dom, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [in] */ const _ELASTOS String& workstation,
        /* [in] */ const _ELASTOS String& dom,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, workstation, dom, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [in] */ const _ELASTOS String& workstation,
        /* [in] */ const _ELASTOS String& dom,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, workstation, dom, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
class CNTUserPrincipal
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICNTUserPrincipalClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CNTUserPrincipal, RGM_SAME_DOMAIN,
                EIID_ICNTUserPrincipalClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDomUsername(dom, username, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ Org::Apache::Http::Auth::INTUserPrincipal** __INTUserPrincipal)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dom, username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INTUserPrincipal = (Org::Apache::Http::Auth::INTUserPrincipal*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_INTUserPrincipal);
        if (*__INTUserPrincipal) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ Elastos::Security::IPrincipal** __IPrincipal)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dom, username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPrincipal = (Elastos::Security::IPrincipal*)__pNewObj->Probe(Elastos::Security::EIID_IPrincipal);
        if (*__IPrincipal) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dom, username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dom, username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& dom,
        /* [in] */ const _ELASTOS String& username,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(dom, username, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
class CUsernamePasswordCredentials
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICUsernamePasswordCredentialsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CUsernamePasswordCredentials, RGM_SAME_DOMAIN,
                EIID_ICUsernamePasswordCredentialsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUsernamePassword(usernamePassword, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICUsernamePasswordCredentialsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CUsernamePasswordCredentials, RGM_SAME_DOMAIN,
                EIID_ICUsernamePasswordCredentialsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUserNamePassword(userName, password, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ Org::Apache::Http::Auth::IUsernamePasswordCredentials** __IUsernamePasswordCredentials)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IUsernamePasswordCredentials = (Org::Apache::Http::Auth::IUsernamePasswordCredentials*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_IUsernamePasswordCredentials);
        if (*__IUsernamePasswordCredentials) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ Org::Apache::Http::Auth::ICredentials** __ICredentials)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICredentials = (Org::Apache::Http::Auth::ICredentials*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_ICredentials);
        if (*__ICredentials) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& usernamePassword,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(usernamePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [out] */ Org::Apache::Http::Auth::IUsernamePasswordCredentials** __IUsernamePasswordCredentials)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IUsernamePasswordCredentials = (Org::Apache::Http::Auth::IUsernamePasswordCredentials*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_IUsernamePasswordCredentials);
        if (*__IUsernamePasswordCredentials) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [out] */ Org::Apache::Http::Auth::ICredentials** __ICredentials)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICredentials = (Org::Apache::Http::Auth::ICredentials*)__pNewObj->Probe(Org::Apache::Http::Auth::EIID_ICredentials);
        if (*__ICredentials) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& userName,
        /* [in] */ const _ELASTOS String& password,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(userName, password, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
namespace Params {
class CAuthParamBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICAuthParamBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CAuthParamBean, RGM_SAME_DOMAIN,
                EIID_ICAuthParamBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParams(params, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Auth::Params::IAuthParamBean** __IAuthParamBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAuthParamBean = (Org::Apache::Http::Auth::Params::IAuthParamBean*)__pNewObj->Probe(Org::Apache::Http::Auth::Params::EIID_IAuthParamBean);
        if (*__IAuthParamBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Auth {
namespace Params {
class CAuthParams
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Auth::Params::IAuthParams** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthParams, RGM_SAME_DOMAIN, Org::Apache::Http::Auth::Params::EIID_IAuthParams, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthParams, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthParams, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAuthParams, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Entity {
class CUrlEncodedFormEntity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [in] */ const _ELASTOS String& encoding,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICUrlEncodedFormEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CUrlEncodedFormEntity, RGM_SAME_DOMAIN,
                EIID_ICUrlEncodedFormEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParametersEncoding(parameters, encoding, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICUrlEncodedFormEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CUrlEncodedFormEntity, RGM_SAME_DOMAIN,
                EIID_ICUrlEncodedFormEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParameters(parameters, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUrlEncodedFormEntity, RGM_SAME_DOMAIN, Org::Apache::Http::Entity::EIID_IAbstractHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUrlEncodedFormEntity, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUrlEncodedFormEntity, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUrlEncodedFormEntity, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUrlEncodedFormEntity, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUrlEncodedFormEntity, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [in] */ const _ELASTOS String& encoding,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [in] */ const _ELASTOS String& encoding,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [in] */ const _ELASTOS String& encoding,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [in] */ const _ELASTOS String& encoding,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [in] */ const _ELASTOS String& encoding,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [in] */ const _ELASTOS String& encoding,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, encoding, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * parameters,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
class CHttpDelete
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpDeleteClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpDelete, RGM_SAME_DOMAIN,
                EIID_ICHttpDeleteClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWith_uri(_uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpDeleteClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpDelete, RGM_SAME_DOMAIN,
                EIID_ICHttpDeleteClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUri(uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpDelete** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpDelete, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDelete, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpDelete** __IHttpDelete)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpDelete = (Org::Apache::Http::Client::Methods::IHttpDelete*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpDelete);
        if (*__IHttpDelete) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpDelete** __IHttpDelete)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpDelete = (Org::Apache::Http::Client::Methods::IHttpDelete*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpDelete);
        if (*__IHttpDelete) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
class CHttpGet
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpGetClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpGet, RGM_SAME_DOMAIN,
                EIID_ICHttpGetClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWith_uri(_uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpGetClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpGet, RGM_SAME_DOMAIN,
                EIID_ICHttpGetClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUri(uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpGet** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpGet, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpGet, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpGet** __IHttpGet)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpGet = (Org::Apache::Http::Client::Methods::IHttpGet*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpGet);
        if (*__IHttpGet) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpGet** __IHttpGet)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpGet = (Org::Apache::Http::Client::Methods::IHttpGet*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpGet);
        if (*__IHttpGet) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
class CHttpHead
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpHeadClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpHead, RGM_SAME_DOMAIN,
                EIID_ICHttpHeadClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWith_uri(_uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpHeadClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpHead, RGM_SAME_DOMAIN,
                EIID_ICHttpHeadClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUri(uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpHead** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpHead, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpHead, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpHead** __IHttpHead)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpHead = (Org::Apache::Http::Client::Methods::IHttpHead*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpHead);
        if (*__IHttpHead) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpHead** __IHttpHead)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpHead = (Org::Apache::Http::Client::Methods::IHttpHead*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpHead);
        if (*__IHttpHead) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
class CHttpOptions
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpOptionsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpOptions, RGM_SAME_DOMAIN,
                EIID_ICHttpOptionsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWith_uri(_uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpOptionsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpOptions, RGM_SAME_DOMAIN,
                EIID_ICHttpOptionsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUri(uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpOptions** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpOptions, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpOptions, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpOptions** __IHttpOptions)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpOptions = (Org::Apache::Http::Client::Methods::IHttpOptions*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpOptions);
        if (*__IHttpOptions) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpOptions** __IHttpOptions)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpOptions = (Org::Apache::Http::Client::Methods::IHttpOptions*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpOptions);
        if (*__IHttpOptions) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
class CHttpPost
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpPostClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpPost, RGM_SAME_DOMAIN,
                EIID_ICHttpPostClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWith_uri(_uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpPostClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpPost, RGM_SAME_DOMAIN,
                EIID_ICHttpPostClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUri(uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpPost** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpPost, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpEntityEnclosingRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPost, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpPost** __IHttpPost)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpPost = (Org::Apache::Http::Client::Methods::IHttpPost*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpPost);
        if (*__IHttpPost) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __IHttpEntityEnclosingRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntityEnclosingRequest = (Org::Apache::Http::IHttpEntityEnclosingRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntityEnclosingRequest);
        if (*__IHttpEntityEnclosingRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpPost** __IHttpPost)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpPost = (Org::Apache::Http::Client::Methods::IHttpPost*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpPost);
        if (*__IHttpPost) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __IHttpEntityEnclosingRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntityEnclosingRequest = (Org::Apache::Http::IHttpEntityEnclosingRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntityEnclosingRequest);
        if (*__IHttpEntityEnclosingRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
class CHttpPut
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpPutClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpPut, RGM_SAME_DOMAIN,
                EIID_ICHttpPutClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWith_uri(_uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpPutClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpPut, RGM_SAME_DOMAIN,
                EIID_ICHttpPutClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUri(uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpPut** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpPut, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpEntityEnclosingRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpPut, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpPut** __IHttpPut)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpPut = (Org::Apache::Http::Client::Methods::IHttpPut*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpPut);
        if (*__IHttpPut) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __IHttpEntityEnclosingRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntityEnclosingRequest = (Org::Apache::Http::IHttpEntityEnclosingRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntityEnclosingRequest);
        if (*__IHttpEntityEnclosingRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpPut** __IHttpPut)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpPut = (Org::Apache::Http::Client::Methods::IHttpPut*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpPut);
        if (*__IHttpPut) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __IHttpEntityEnclosingRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntityEnclosingRequest = (Org::Apache::Http::IHttpEntityEnclosingRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntityEnclosingRequest);
        if (*__IHttpEntityEnclosingRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Methods {
class CHttpTrace
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpTraceClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpTrace, RGM_SAME_DOMAIN,
                EIID_ICHttpTraceClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWith_uri(_uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpTraceClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpTrace, RGM_SAME_DOMAIN,
                EIID_ICHttpTraceClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithUri(uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpTrace** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpTrace, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpTrace, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpTrace** __IHttpTrace)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpTrace = (Org::Apache::Http::Client::Methods::IHttpTrace*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpTrace);
        if (*__IHttpTrace) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Net::IURI * _uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(_uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpTrace** __IHttpTrace)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpTrace = (Org::Apache::Http::Client::Methods::IHttpTrace*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpTrace);
        if (*__IHttpTrace) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IHttpUriRequest** __IHttpUriRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpUriRequest = (Org::Apache::Http::Client::Methods::IHttpUriRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IHttpUriRequest);
        if (*__IHttpUriRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::Client::Methods::IAbortableHttpRequest** __IAbortableHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbortableHttpRequest = (Org::Apache::Http::Client::Methods::IAbortableHttpRequest*)__pNewObj->Probe(Org::Apache::Http::Client::Methods::EIID_IAbortableHttpRequest);
        if (*__IAbortableHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
class CClientParamBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICClientParamBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CClientParamBean, RGM_SAME_DOMAIN,
                EIID_ICClientParamBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParams(params, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Client::Params::IClientParamBean** __IClientParamBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IClientParamBean = (Org::Apache::Http::Client::Params::IClientParamBean*)__pNewObj->Probe(Org::Apache::Http::Client::Params::EIID_IClientParamBean);
        if (*__IClientParamBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Params {
class CHttpClientParams
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Client::Params::IHttpClientParams** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpClientParams, RGM_SAME_DOMAIN, Org::Apache::Http::Client::Params::EIID_IHttpClientParams, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpClientParams, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpClientParams, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpClientParams, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
class CClientContextConfigurer
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICClientContextConfigurerClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CClientContextConfigurer, RGM_SAME_DOMAIN,
                EIID_ICClientContextConfigurerClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithContext(context, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::Client::Protocol::IClientContextConfigurer** __IClientContextConfigurer)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(context, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IClientContextConfigurer = (Org::Apache::Http::Client::Protocol::IClientContextConfigurer*)__pNewObj->Probe(Org::Apache::Http::Client::Protocol::EIID_IClientContextConfigurer);
        if (*__IClientContextConfigurer) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Org::Apache::Http::Client::Protocol::IClientContext** __IClientContext)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(context, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IClientContext = (Org::Apache::Http::Client::Protocol::IClientContext*)__pNewObj->Probe(Org::Apache::Http::Client::Protocol::EIID_IClientContext);
        if (*__IClientContext) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(context, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(context, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * context,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(context, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
class CRequestAddCookies
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestAddCookies, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestAddCookies, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestAddCookies, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestAddCookies, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
class CRequestDefaultHeaders
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestDefaultHeaders, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestDefaultHeaders, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestDefaultHeaders, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestDefaultHeaders, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
class CRequestProxyAuthentication
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestProxyAuthentication, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestProxyAuthentication, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestProxyAuthentication, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestProxyAuthentication, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
class CRequestTargetAuthentication
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestTargetAuthentication, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestTargetAuthentication, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestTargetAuthentication, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestTargetAuthentication, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Client {
namespace Protocol {
class CResponseProcessCookies
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpResponseInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseProcessCookies, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpResponseInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseProcessCookies, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseProcessCookies, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseProcessCookies, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
class CBasicEofSensorWatcher
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicEofSensorWatcherClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicEofSensorWatcher, RGM_SAME_DOMAIN,
                EIID_ICBasicEofSensorWatcherClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithConnReuse(conn, reuse, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ Org::Apache::Http::Conn::IEofSensorWatcher** __IEofSensorWatcher)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IEofSensorWatcher = (Org::Apache::Http::Conn::IEofSensorWatcher*)__pNewObj->Probe(Org::Apache::Http::Conn::EIID_IEofSensorWatcher);
        if (*__IEofSensorWatcher) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
class CBasicManagedEntity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicManagedEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicManagedEntity, RGM_SAME_DOMAIN,
                EIID_ICBasicManagedEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithEntityConnReuse(entity, conn, reuse, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ Org::Apache::Http::Conn::IConnectionReleaseTrigger** __IConnectionReleaseTrigger)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IConnectionReleaseTrigger = (Org::Apache::Http::Conn::IConnectionReleaseTrigger*)__pNewObj->Probe(Org::Apache::Http::Conn::EIID_IConnectionReleaseTrigger);
        if (*__IConnectionReleaseTrigger) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ Org::Apache::Http::Conn::IEofSensorWatcher** __IEofSensorWatcher)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IEofSensorWatcher = (Org::Apache::Http::Conn::IEofSensorWatcher*)__pNewObj->Probe(Org::Apache::Http::Conn::EIID_IEofSensorWatcher);
        if (*__IEofSensorWatcher) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [in] */ Org::Apache::Http::Conn::IManagedClientConnection * conn,
        /* [in] */ _ELASTOS Boolean reuse,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, conn, reuse, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
class CEofSensorInputStream
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICEofSensorInputStreamClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CEofSensorInputStream, RGM_SAME_DOMAIN,
                EIID_ICEofSensorInputStreamClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithIsWatcher(is, watcher, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ Org::Apache::Http::Conn::IEofSensorInputStream** __IEofSensorInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, watcher, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IEofSensorInputStream = (Org::Apache::Http::Conn::IEofSensorInputStream*)__pNewObj->Probe(Org::Apache::Http::Conn::EIID_IEofSensorInputStream);
        if (*__IEofSensorInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ Elastos::IO::IInputStream** __IInputStream)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, watcher, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IInputStream = (Elastos::IO::IInputStream*)__pNewObj->Probe(Elastos::IO::EIID_IInputStream);
        if (*__IInputStream) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ Elastos::IO::ICloseable** __ICloseable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, watcher, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloseable = (Elastos::IO::ICloseable*)__pNewObj->Probe(Elastos::IO::EIID_ICloseable);
        if (*__ICloseable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ Org::Apache::Http::Conn::IConnectionReleaseTrigger** __IConnectionReleaseTrigger)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, watcher, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IConnectionReleaseTrigger = (Org::Apache::Http::Conn::IConnectionReleaseTrigger*)__pNewObj->Probe(Org::Apache::Http::Conn::EIID_IConnectionReleaseTrigger);
        if (*__IConnectionReleaseTrigger) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, watcher, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, watcher, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * is,
        /* [in] */ Org::Apache::Http::Conn::IEofSensorWatcher * watcher,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(is, watcher, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
class CMultihomePlainSocketFactoryHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Conn::IMultihomePlainSocketFactoryHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CMultihomePlainSocketFactoryHelper, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::EIID_IMultihomePlainSocketFactoryHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CMultihomePlainSocketFactoryHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CMultihomePlainSocketFactoryHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CMultihomePlainSocketFactoryHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
class CConnConnectionParamBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICConnConnectionParamBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CConnConnectionParamBean, RGM_SAME_DOMAIN,
                EIID_ICConnConnectionParamBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParams(params, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Conn::Params::IConnConnectionParamBean** __IConnConnectionParamBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IConnConnectionParamBean = (Org::Apache::Http::Conn::Params::IConnConnectionParamBean*)__pNewObj->Probe(Org::Apache::Http::Conn::Params::EIID_IConnConnectionParamBean);
        if (*__IConnConnectionParamBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
class CConnManagerParamBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICConnManagerParamBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CConnManagerParamBean, RGM_SAME_DOMAIN,
                EIID_ICConnManagerParamBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParams(params, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Conn::Params::IConnManagerParamBean** __IConnManagerParamBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IConnManagerParamBean = (Org::Apache::Http::Conn::Params::IConnManagerParamBean*)__pNewObj->Probe(Org::Apache::Http::Conn::Params::EIID_IConnManagerParamBean);
        if (*__IConnManagerParamBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
class CConnManagerParams
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Conn::Params::IConnManagerParams** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnManagerParams, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Params::EIID_IConnManagerParams, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Conn::Params::IConnManagerPNames** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnManagerParams, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Params::EIID_IConnManagerPNames, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnManagerParams, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnManagerParams, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnManagerParams, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
class CConnPerRouteBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 defaultMax,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICConnPerRouteBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CConnPerRouteBean, RGM_SAME_DOMAIN,
                EIID_ICConnPerRouteBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithDefaultMax(defaultMax, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Params::IConnPerRouteBean** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnPerRouteBean, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Params::EIID_IConnPerRouteBean, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Params::IConnPerRoute** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnPerRouteBean, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Params::EIID_IConnPerRoute, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnPerRouteBean, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnPerRouteBean, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnPerRouteBean, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 defaultMax,
        /* [out] */ Org::Apache::Http::Conn::Params::IConnPerRouteBean** __IConnPerRouteBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(defaultMax, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IConnPerRouteBean = (Org::Apache::Http::Conn::Params::IConnPerRouteBean*)__pNewObj->Probe(Org::Apache::Http::Conn::Params::EIID_IConnPerRouteBean);
        if (*__IConnPerRouteBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 defaultMax,
        /* [out] */ Org::Apache::Http::Conn::Params::IConnPerRoute** __IConnPerRoute)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(defaultMax, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IConnPerRoute = (Org::Apache::Http::Conn::Params::IConnPerRoute*)__pNewObj->Probe(Org::Apache::Http::Conn::Params::EIID_IConnPerRoute);
        if (*__IConnPerRoute) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 defaultMax,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(defaultMax, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 defaultMax,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(defaultMax, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 defaultMax,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(defaultMax, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
class CConnRouteParamBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICConnRouteParamBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CConnRouteParamBean, RGM_SAME_DOMAIN,
                EIID_ICConnRouteParamBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParams(params, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Conn::Params::IConnRouteParamBean** __IConnRouteParamBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IConnRouteParamBean = (Org::Apache::Http::Conn::Params::IConnRouteParamBean*)__pNewObj->Probe(Org::Apache::Http::Conn::Params::EIID_IConnRouteParamBean);
        if (*__IConnRouteParamBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Params {
class CConnRouteParams
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Conn::Params::IConnRouteParams** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnRouteParams, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Params::EIID_IConnRouteParams, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Conn::Params::IConnRoutePNames** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnRouteParams, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Params::EIID_IConnRoutePNames, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnRouteParams, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnRouteParams, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CConnRouteParams, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
class CBasicRouteDirector
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Routing::IBasicRouteDirector** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRouteDirector, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Routing::EIID_IBasicRouteDirector, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRouteDirector** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRouteDirector, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Routing::EIID_IHttpRouteDirector, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRouteDirector, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRouteDirector, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRouteDirector, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
class CHttpRoute
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHttpHost *> * proxies,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpRouteClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpRoute, RGM_SAME_DOMAIN,
                EIID_ICHttpRouteClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTargetLProxiesSecureTunnelledLayered(target, l, proxies, secure, tunnelled, layered, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpRouteClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpRoute, RGM_SAME_DOMAIN,
                EIID_ICHttpRouteClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTargetLProxySecureTunnelledLayered(target, l, proxy, secure, tunnelled, layered, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpRouteClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpRoute, RGM_SAME_DOMAIN,
                EIID_ICHttpRouteClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTargetLSecure(target, l, secure, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpRouteClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpRoute, RGM_SAME_DOMAIN,
                EIID_ICHttpRouteClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTarget(target, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpRouteClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpRoute, RGM_SAME_DOMAIN,
                EIID_ICHttpRouteClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTargetLProxySecure(target, l, proxy, secure, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHttpHost *> * proxies,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute** __IHttpRoute)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxies, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRoute = (Org::Apache::Http::Conn::Routing::IHttpRoute*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IHttpRoute);
        if (*__IHttpRoute) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHttpHost *> * proxies,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteInfo** __IRouteInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxies, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteInfo = (Org::Apache::Http::Conn::Routing::IRouteInfo*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteInfo);
        if (*__IRouteInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHttpHost *> * proxies,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxies, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHttpHost *> * proxies,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxies, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHttpHost *> * proxies,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxies, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHttpHost *> * proxies,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxies, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute** __IHttpRoute)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRoute = (Org::Apache::Http::Conn::Routing::IHttpRoute*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IHttpRoute);
        if (*__IHttpRoute) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteInfo** __IRouteInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteInfo = (Org::Apache::Http::Conn::Routing::IRouteInfo*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteInfo);
        if (*__IRouteInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [in] */ Org::Apache::Http::Conn::Routing::TunnelType tunnelled,
        /* [in] */ Org::Apache::Http::Conn::Routing::LayerType layered,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, tunnelled, layered, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute** __IHttpRoute)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRoute = (Org::Apache::Http::Conn::Routing::IHttpRoute*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IHttpRoute);
        if (*__IHttpRoute) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteInfo** __IRouteInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteInfo = (Org::Apache::Http::Conn::Routing::IRouteInfo*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteInfo);
        if (*__IRouteInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute** __IHttpRoute)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRoute = (Org::Apache::Http::Conn::Routing::IHttpRoute*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IHttpRoute);
        if (*__IHttpRoute) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteInfo** __IRouteInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteInfo = (Org::Apache::Http::Conn::Routing::IRouteInfo*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteInfo);
        if (*__IRouteInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Org::Apache::Http::Conn::Routing::IHttpRoute** __IHttpRoute)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRoute = (Org::Apache::Http::Conn::Routing::IHttpRoute*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IHttpRoute);
        if (*__IHttpRoute) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteInfo** __IRouteInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteInfo = (Org::Apache::Http::Conn::Routing::IRouteInfo*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteInfo);
        if (*__IRouteInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [in] */ Org::Apache::Http::IHttpHost * proxy,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, proxy, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Routing {
class CRouteTracker
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICRouteTrackerClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CRouteTracker, RGM_SAME_DOMAIN,
                EIID_ICRouteTrackerClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTargetL(target, l, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICRouteTrackerClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CRouteTracker, RGM_SAME_DOMAIN,
                EIID_ICRouteTrackerClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithRoute(route, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteTracker** __IRouteTracker)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteTracker = (Org::Apache::Http::Conn::Routing::IRouteTracker*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteTracker);
        if (*__IRouteTracker) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteInfo** __IRouteInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteInfo = (Org::Apache::Http::Conn::Routing::IRouteInfo*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteInfo);
        if (*__IRouteInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpHost * target,
        /* [in] */ Elastos::Net::IInetAddress * l,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(target, l, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteTracker** __IRouteTracker)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(route, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteTracker = (Org::Apache::Http::Conn::Routing::IRouteTracker*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteTracker);
        if (*__IRouteTracker) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ Org::Apache::Http::Conn::Routing::IRouteInfo** __IRouteInfo)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(route, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRouteInfo = (Org::Apache::Http::Conn::Routing::IRouteInfo*)__pNewObj->Probe(Org::Apache::Http::Conn::Routing::EIID_IRouteInfo);
        if (*__IRouteInfo) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(route, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(route, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(route, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Routing::IHttpRoute * route,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(route, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
class CPlainSocketFactory
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICPlainSocketFactoryClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CPlainSocketFactory, RGM_SAME_DOMAIN,
                EIID_ICPlainSocketFactoryClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithNameResolver(nameResolver, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Scheme::IPlainSocketFactory** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactory, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Scheme::EIID_IPlainSocketFactory, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactory, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Scheme::EIID_ISocketFactory, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactory, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactory, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactory, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ Org::Apache::Http::Conn::Scheme::IPlainSocketFactory** __IPlainSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IPlainSocketFactory = (Org::Apache::Http::Conn::Scheme::IPlainSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_IPlainSocketFactory);
        if (*__IPlainSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory** __ISocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISocketFactory = (Org::Apache::Http::Conn::Scheme::ISocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ISocketFactory);
        if (*__ISocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
class CPlainSocketFactoryHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Conn::Scheme::IPlainSocketFactoryHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactoryHelper, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Scheme::EIID_IPlainSocketFactoryHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactoryHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactoryHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CPlainSocketFactoryHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
class CScheme
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Conn::Scheme::ISocketFactory * factory,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSchemeClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CScheme, RGM_SAME_DOMAIN,
                EIID_ICSchemeClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithNameFactoryPort(name, factory, port, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Conn::Scheme::ISocketFactory * factory,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ Org::Apache::Http::Conn::Scheme::IScheme** __IScheme)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, factory, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IScheme = (Org::Apache::Http::Conn::Scheme::IScheme*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_IScheme);
        if (*__IScheme) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Conn::Scheme::ISocketFactory * factory,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, factory, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Conn::Scheme::ISocketFactory * factory,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, factory, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ Org::Apache::Http::Conn::Scheme::ISocketFactory * factory,
        /* [in] */ _ELASTOS Int32 port,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, factory, port, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace Scheme {
class CSchemeRegistry
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISchemeRegistry** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSchemeRegistry, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Scheme::EIID_ISchemeRegistry, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSchemeRegistry, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSchemeRegistry, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSchemeRegistry, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
class CAllowAllHostnameVerifier
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::SSL::IAbstractVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAllowAllHostnameVerifier, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::SSL::EIID_IAbstractVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::SSL::IX509HostnameVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAllowAllHostnameVerifier, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::SSL::EIID_IX509HostnameVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastosx::Net::Ssl::IHostnameVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAllowAllHostnameVerifier, RGM_SAME_DOMAIN, Elastosx::Net::Ssl::EIID_IHostnameVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAllowAllHostnameVerifier, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAllowAllHostnameVerifier, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CAllowAllHostnameVerifier, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
class CBrowserCompatHostnameVerifier
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::SSL::IAbstractVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBrowserCompatHostnameVerifier, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::SSL::EIID_IAbstractVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::SSL::IX509HostnameVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBrowserCompatHostnameVerifier, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::SSL::EIID_IX509HostnameVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastosx::Net::Ssl::IHostnameVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBrowserCompatHostnameVerifier, RGM_SAME_DOMAIN, Elastosx::Net::Ssl::EIID_IHostnameVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBrowserCompatHostnameVerifier, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBrowserCompatHostnameVerifier, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBrowserCompatHostnameVerifier, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
class CStrictHostnameVerifier
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::SSL::IAbstractVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStrictHostnameVerifier, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::SSL::EIID_IAbstractVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::SSL::IX509HostnameVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStrictHostnameVerifier, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::SSL::EIID_IX509HostnameVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastosx::Net::Ssl::IHostnameVerifier** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStrictHostnameVerifier, RGM_SAME_DOMAIN, Elastosx::Net::Ssl::EIID_IHostnameVerifier, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStrictHostnameVerifier, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStrictHostnameVerifier, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStrictHostnameVerifier, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
class CSSLSocketFactory
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [in] */ Elastos::Security::ISecureRandom * random,
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSSLSocketFactoryClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN,
                EIID_ICSSLSocketFactoryClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithAlgorithmKeystoreKeystorePasswordTruststoreRandomNameResolver(algorithm, keystore, keystorePassword, truststore, random, nameResolver, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSSLSocketFactoryClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN,
                EIID_ICSSLSocketFactoryClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithKeystoreKeystorePasswordTruststore(keystore, keystorePassword, truststore, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSSLSocketFactoryClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN,
                EIID_ICSSLSocketFactoryClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithKeystoreKeystorePassword(keystore, keystorePassword, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSSLSocketFactoryClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN,
                EIID_ICSSLSocketFactoryClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithTruststore(truststore, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Elastosx::Net::Ssl::ISSLSocketFactory * socketfactory,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSSLSocketFactoryClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN,
                EIID_ICSSLSocketFactoryClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithSocketfactory(socketfactory, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::SSL::ISSLSocketFactory** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::SSL::EIID_ISSLSocketFactory, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Scheme::EIID_ILayeredSocketFactory, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::Scheme::EIID_ISocketFactory, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactory, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [in] */ Elastos::Security::ISecureRandom * random,
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ Org::Apache::Http::Conn::SSL::ISSLSocketFactory** __ISSLSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, keystore, keystorePassword, truststore, random, nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISSLSocketFactory = (Org::Apache::Http::Conn::SSL::ISSLSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::SSL::EIID_ISSLSocketFactory);
        if (*__ISSLSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [in] */ Elastos::Security::ISecureRandom * random,
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory** __ILayeredSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, keystore, keystorePassword, truststore, random, nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILayeredSocketFactory = (Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ILayeredSocketFactory);
        if (*__ILayeredSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [in] */ Elastos::Security::ISecureRandom * random,
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory** __ISocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, keystore, keystorePassword, truststore, random, nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISocketFactory = (Org::Apache::Http::Conn::Scheme::ISocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ISocketFactory);
        if (*__ISocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [in] */ Elastos::Security::ISecureRandom * random,
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, keystore, keystorePassword, truststore, random, nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [in] */ Elastos::Security::ISecureRandom * random,
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, keystore, keystorePassword, truststore, random, nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& algorithm,
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [in] */ Elastos::Security::ISecureRandom * random,
        /* [in] */ Org::Apache::Http::Conn::Scheme::IHostNameResolver * nameResolver,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(algorithm, keystore, keystorePassword, truststore, random, nameResolver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ Org::Apache::Http::Conn::SSL::ISSLSocketFactory** __ISSLSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISSLSocketFactory = (Org::Apache::Http::Conn::SSL::ISSLSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::SSL::EIID_ISSLSocketFactory);
        if (*__ISSLSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory** __ILayeredSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILayeredSocketFactory = (Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ILayeredSocketFactory);
        if (*__ILayeredSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory** __ISocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISocketFactory = (Org::Apache::Http::Conn::Scheme::ISocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ISocketFactory);
        if (*__ISocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [out] */ Org::Apache::Http::Conn::SSL::ISSLSocketFactory** __ISSLSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISSLSocketFactory = (Org::Apache::Http::Conn::SSL::ISSLSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::SSL::EIID_ISSLSocketFactory);
        if (*__ISSLSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory** __ILayeredSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILayeredSocketFactory = (Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ILayeredSocketFactory);
        if (*__ILayeredSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory** __ISocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISocketFactory = (Org::Apache::Http::Conn::Scheme::ISocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ISocketFactory);
        if (*__ISocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * keystore,
        /* [in] */ const _ELASTOS String& keystorePassword,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(keystore, keystorePassword, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ Org::Apache::Http::Conn::SSL::ISSLSocketFactory** __ISSLSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISSLSocketFactory = (Org::Apache::Http::Conn::SSL::ISSLSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::SSL::EIID_ISSLSocketFactory);
        if (*__ISSLSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory** __ILayeredSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILayeredSocketFactory = (Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ILayeredSocketFactory);
        if (*__ILayeredSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory** __ISocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISocketFactory = (Org::Apache::Http::Conn::Scheme::ISocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ISocketFactory);
        if (*__ISocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Security::IKeyStore * truststore,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(truststore, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastosx::Net::Ssl::ISSLSocketFactory * socketfactory,
        /* [out] */ Org::Apache::Http::Conn::SSL::ISSLSocketFactory** __ISSLSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(socketfactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISSLSocketFactory = (Org::Apache::Http::Conn::SSL::ISSLSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::SSL::EIID_ISSLSocketFactory);
        if (*__ISSLSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastosx::Net::Ssl::ISSLSocketFactory * socketfactory,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory** __ILayeredSocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(socketfactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILayeredSocketFactory = (Org::Apache::Http::Conn::Scheme::ILayeredSocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ILayeredSocketFactory);
        if (*__ILayeredSocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastosx::Net::Ssl::ISSLSocketFactory * socketfactory,
        /* [out] */ Org::Apache::Http::Conn::Scheme::ISocketFactory** __ISocketFactory)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(socketfactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISocketFactory = (Org::Apache::Http::Conn::Scheme::ISocketFactory*)__pNewObj->Probe(Org::Apache::Http::Conn::Scheme::EIID_ISocketFactory);
        if (*__ISocketFactory) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastosx::Net::Ssl::ISSLSocketFactory * socketfactory,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(socketfactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastosx::Net::Ssl::ISSLSocketFactory * socketfactory,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(socketfactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastosx::Net::Ssl::ISSLSocketFactory * socketfactory,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(socketfactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Conn {
namespace SSL {
class CSSLSocketFactoryHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Conn::SSL::ISSLSocketFactoryHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactoryHelper, RGM_SAME_DOMAIN, Org::Apache::Http::Conn::SSL::EIID_ISSLSocketFactoryHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactoryHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactoryHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CSSLSocketFactoryHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
namespace Params {
class CCookieSpecParamBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCookieSpecParamBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCookieSpecParamBean, RGM_SAME_DOMAIN,
                EIID_ICCookieSpecParamBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParams(params, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Cookie::Params::ICookieSpecParamBean** __ICookieSpecParamBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICookieSpecParamBean = (Org::Apache::Http::Cookie::Params::ICookieSpecParamBean*)__pNewObj->Probe(Org::Apache::Http::Cookie::Params::EIID_ICookieSpecParamBean);
        if (*__ICookieSpecParamBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
class CCookieIdentityComparator
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::IComparator** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieIdentityComparator, RGM_SAME_DOMAIN, Elastos::Core::EIID_IComparator, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::IO::ISerializable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieIdentityComparator, RGM_SAME_DOMAIN, Elastos::IO::EIID_ISerializable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieIdentityComparator, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieIdentityComparator, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieIdentityComparator, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
class CCookieOrigin
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& path,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCookieOriginClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCookieOrigin, RGM_SAME_DOMAIN,
                EIID_ICCookieOriginClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHostPortPathSecure(host, port, path, secure, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& path,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Org::Apache::Http::Cookie::ICookieOrigin** __ICookieOrigin)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, path, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICookieOrigin = (Org::Apache::Http::Cookie::ICookieOrigin*)__pNewObj->Probe(Org::Apache::Http::Cookie::EIID_ICookieOrigin);
        if (*__ICookieOrigin) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& path,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, path, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& path,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, path, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& host,
        /* [in] */ _ELASTOS Int32 port,
        /* [in] */ const _ELASTOS String& path,
        /* [in] */ _ELASTOS Boolean secure,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(host, port, path, secure, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
class CCookiePathComparator
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::IComparator** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookiePathComparator, RGM_SAME_DOMAIN, Elastos::Core::EIID_IComparator, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::IO::ISerializable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookiePathComparator, RGM_SAME_DOMAIN, Elastos::IO::EIID_ISerializable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookiePathComparator, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookiePathComparator, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookiePathComparator, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Cookie {
class CCookieSpecRegistry
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Cookie::ICookieSpecRegistry** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieSpecRegistry, RGM_SAME_DOMAIN, Org::Apache::Http::Cookie::EIID_ICookieSpecRegistry, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieSpecRegistry, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieSpecRegistry, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CCookieSpecRegistry, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
class CBasicHttpEntity
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Entity::IBasicHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntity, RGM_SAME_DOMAIN, Org::Apache::Http::Entity::EIID_IBasicHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntity, RGM_SAME_DOMAIN, Org::Apache::Http::Entity::EIID_IAbstractHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntity, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntity, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntity, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntity, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
class CBufferedHttpEntity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBufferedHttpEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBufferedHttpEntity, RGM_SAME_DOMAIN,
                EIID_ICBufferedHttpEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithEntity(entity, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHttpEntity * entity,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(entity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
class CByteArrayEntity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICByteArrayEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CByteArrayEntity, RGM_SAME_DOMAIN,
                EIID_ICByteArrayEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithB(b, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(b, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(b, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(b, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(b, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(b, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<_ELASTOS Byte> * b,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(b, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
class CEntityTemplate
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Entity::IContentProducer * contentproducer,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICEntityTemplateClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CEntityTemplate, RGM_SAME_DOMAIN,
                EIID_ICEntityTemplateClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithContentproducer(contentproducer, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Entity::IContentProducer * contentproducer,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(contentproducer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Entity::IContentProducer * contentproducer,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(contentproducer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Entity::IContentProducer * contentproducer,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(contentproducer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Entity::IContentProducer * contentproducer,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(contentproducer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Entity::IContentProducer * contentproducer,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(contentproducer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
class CFileEntity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::IO::IFile * file,
        /* [in] */ const _ELASTOS String& contentType,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICFileEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CFileEntity, RGM_SAME_DOMAIN,
                EIID_ICFileEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithFileContentType(file, contentType, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CFileEntity, RGM_SAME_DOMAIN, Org::Apache::Http::Entity::EIID_IAbstractHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CFileEntity, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CFileEntity, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CFileEntity, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CFileEntity, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CFileEntity, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IFile * file,
        /* [in] */ const _ELASTOS String& contentType,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(file, contentType, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IFile * file,
        /* [in] */ const _ELASTOS String& contentType,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(file, contentType, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IFile * file,
        /* [in] */ const _ELASTOS String& contentType,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(file, contentType, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IFile * file,
        /* [in] */ const _ELASTOS String& contentType,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(file, contentType, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IFile * file,
        /* [in] */ const _ELASTOS String& contentType,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(file, contentType, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IFile * file,
        /* [in] */ const _ELASTOS String& contentType,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(file, contentType, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
class CInputStreamEntity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::IO::IInputStream * instream,
        /* [in] */ _ELASTOS Int64 length,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICInputStreamEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CInputStreamEntity, RGM_SAME_DOMAIN,
                EIID_ICInputStreamEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithInstreamLength(instream, length, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * instream,
        /* [in] */ _ELASTOS Int64 length,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(instream, length, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * instream,
        /* [in] */ _ELASTOS Int64 length,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(instream, length, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * instream,
        /* [in] */ _ELASTOS Int64 length,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(instream, length, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * instream,
        /* [in] */ _ELASTOS Int64 length,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(instream, length, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::IInputStream * instream,
        /* [in] */ _ELASTOS Int64 length,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(instream, length, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
class CSerializableEntity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::IO::ISerializable * ser,
        /* [in] */ _ELASTOS Boolean bufferize,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICSerializableEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CSerializableEntity, RGM_SAME_DOMAIN,
                EIID_ICSerializableEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithSerBufferize(ser, bufferize, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::ISerializable * ser,
        /* [in] */ _ELASTOS Boolean bufferize,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ser, bufferize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::ISerializable * ser,
        /* [in] */ _ELASTOS Boolean bufferize,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ser, bufferize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::ISerializable * ser,
        /* [in] */ _ELASTOS Boolean bufferize,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ser, bufferize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::ISerializable * ser,
        /* [in] */ _ELASTOS Boolean bufferize,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ser, bufferize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::IO::ISerializable * ser,
        /* [in] */ _ELASTOS Boolean bufferize,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ser, bufferize, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Entity {
class CStringEntity
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& s,
        /* [in] */ const _ELASTOS String& charset,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICStringEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CStringEntity, RGM_SAME_DOMAIN,
                EIID_ICStringEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithSCharset(s, charset, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICStringEntityClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CStringEntity, RGM_SAME_DOMAIN,
                EIID_ICStringEntityClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithS(s, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStringEntity, RGM_SAME_DOMAIN, Org::Apache::Http::Entity::EIID_IAbstractHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpEntity** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStringEntity, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpEntity, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStringEntity, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStringEntity, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStringEntity, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CStringEntity, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [in] */ const _ELASTOS String& charset,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, charset, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [in] */ const _ELASTOS String& charset,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, charset, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [in] */ const _ELASTOS String& charset,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, charset, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [in] */ const _ELASTOS String& charset,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, charset, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [in] */ const _ELASTOS String& charset,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, charset, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [in] */ const _ELASTOS String& charset,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, charset, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ Org::Apache::Http::Entity::IAbstractHttpEntity** __IAbstractHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IAbstractHttpEntity = (Org::Apache::Http::Entity::IAbstractHttpEntity*)__pNewObj->Probe(Org::Apache::Http::Entity::EIID_IAbstractHttpEntity);
        if (*__IAbstractHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ Org::Apache::Http::IHttpEntity** __IHttpEntity)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntity = (Org::Apache::Http::IHttpEntity*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntity);
        if (*__IHttpEntity) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& s,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(s, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicLineParser
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * proto,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicLineParserClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicLineParser, RGM_SAME_DOMAIN,
                EIID_ICBasicLineParserClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithProto(proto, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IBasicLineParser** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineParser, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IBasicLineParser, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::ILineParser** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineParser, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_ILineParser, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineParser, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineParser, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineParser, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * proto,
        /* [out] */ Org::Apache::Http::Message::IBasicLineParser** __IBasicLineParser)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(proto, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicLineParser = (Org::Apache::Http::Message::IBasicLineParser*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IBasicLineParser);
        if (*__IBasicLineParser) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * proto,
        /* [out] */ Org::Apache::Http::Message::ILineParser** __ILineParser)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(proto, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ILineParser = (Org::Apache::Http::Message::ILineParser*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_ILineParser);
        if (*__ILineParser) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * proto,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(proto, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * proto,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(proto, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * proto,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(proto, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicTokenIterator
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicTokenIteratorClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicTokenIterator, RGM_SAME_DOMAIN,
                EIID_ICBasicTokenIteratorClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHeaderIterator(headerIterator, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ Org::Apache::Http::Message::IBasicTokenIterator** __IBasicTokenIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicTokenIterator = (Org::Apache::Http::Message::IBasicTokenIterator*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IBasicTokenIterator);
        if (*__IBasicTokenIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ Org::Apache::Http::ITokenIterator** __ITokenIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ITokenIterator = (Org::Apache::Http::ITokenIterator*)__pNewObj->Probe(Org::Apache::Http::EIID_ITokenIterator);
        if (*__ITokenIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ Elastos::Utility::IIterator** __IIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IIterator = (Elastos::Utility::IIterator*)__pNewObj->Probe(Elastos::Utility::EIID_IIterator);
        if (*__IIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHeaderValueFormatter
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IBasicHeaderValueFormatter** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueFormatter, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IBasicHeaderValueFormatter, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IHeaderValueFormatter** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueFormatter, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IHeaderValueFormatter, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueFormatter, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueFormatter, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueFormatter, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHeaderValueParser
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IBasicHeaderValueParser** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueParser, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IBasicHeaderValueParser, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IHeaderValueParser** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueParser, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IHeaderValueParser, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueParser, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueParser, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderValueParser, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicLineFormatter
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IBasicLineFormatter** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineFormatter, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IBasicLineFormatter, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::ILineFormatter** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineFormatter, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_ILineFormatter, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineFormatter, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineFormatter, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicLineFormatter, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHeaderElement
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ Elastos::Core::IArrayOf * parameters,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHeaderElementClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHeaderElement, RGM_SAME_DOMAIN,
                EIID_ICBasicHeaderElementClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithNameValueParameters(name, value, parameters, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHeaderElementClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHeaderElement, RGM_SAME_DOMAIN,
                EIID_ICBasicHeaderElementClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithNameValue(name, value, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHeaderElement** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderElement, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHeaderElement, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderElement, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderElement, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderElement, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeaderElement, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ Elastos::Core::IArrayOf * parameters,
        /* [out] */ Org::Apache::Http::IHeaderElement** __IHeaderElement)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHeaderElement = (Org::Apache::Http::IHeaderElement*)__pNewObj->Probe(Org::Apache::Http::EIID_IHeaderElement);
        if (*__IHeaderElement) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ Elastos::Core::IArrayOf * parameters,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ Elastos::Core::IArrayOf * parameters,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ Elastos::Core::IArrayOf * parameters,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [in] */ Elastos::Core::IArrayOf * parameters,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, parameters, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Org::Apache::Http::IHeaderElement** __IHeaderElement)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHeaderElement = (Org::Apache::Http::IHeaderElement*)__pNewObj->Probe(Org::Apache::Http::EIID_IHeaderElement);
        if (*__IHeaderElement) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CHeaderGroup
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IHeaderGroup** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHeaderGroup, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IHeaderGroup, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHeaderGroup, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHeaderGroup, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHeaderGroup, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHeaderGroup, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHttpResponse
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpResponseClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpResponseClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithStatuslineCatalogLocale(statusline, catalog, locale, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpResponseClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpResponseClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithStatusline(statusline, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpResponseClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpResponseClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVerCodeReason(ver, code, reason, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IBasicHttpResponse** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IBasicHttpResponse, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpResponse** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpResponse, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpResponse, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ Org::Apache::Http::Message::IBasicHttpResponse** __IBasicHttpResponse)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, catalog, locale, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicHttpResponse = (Org::Apache::Http::Message::IBasicHttpResponse*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IBasicHttpResponse);
        if (*__IBasicHttpResponse) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ Org::Apache::Http::IHttpResponse** __IHttpResponse)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, catalog, locale, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpResponse = (Org::Apache::Http::IHttpResponse*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpResponse);
        if (*__IHttpResponse) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, catalog, locale, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, catalog, locale, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, catalog, locale, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, catalog, locale, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [in] */ Org::Apache::Http::IReasonPhraseCatalog * catalog,
        /* [in] */ Elastos::Utility::ILocale * locale,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, catalog, locale, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ Org::Apache::Http::Message::IBasicHttpResponse** __IBasicHttpResponse)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicHttpResponse = (Org::Apache::Http::Message::IBasicHttpResponse*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IBasicHttpResponse);
        if (*__IBasicHttpResponse) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ Org::Apache::Http::IHttpResponse** __IHttpResponse)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpResponse = (Org::Apache::Http::IHttpResponse*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpResponse);
        if (*__IHttpResponse) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IStatusLine * statusline,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(statusline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ Org::Apache::Http::Message::IBasicHttpResponse** __IBasicHttpResponse)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, code, reason, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicHttpResponse = (Org::Apache::Http::Message::IBasicHttpResponse*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IBasicHttpResponse);
        if (*__IBasicHttpResponse) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ Org::Apache::Http::IHttpResponse** __IHttpResponse)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, code, reason, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpResponse = (Org::Apache::Http::IHttpResponse*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpResponse);
        if (*__IHttpResponse) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, code, reason, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, code, reason, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, code, reason, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, code, reason, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 code,
        /* [in] */ const _ELASTOS String& reason,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, code, reason, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHttpRequest
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpRequestClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpRequestClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithMethodUri(method, uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpRequestClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpRequestClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithMethodUriVer(method, uri, ver, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpRequestClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpRequestClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithRequestline(requestline, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpRequest, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicNameValuePair
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicNameValuePairClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicNameValuePair, RGM_SAME_DOMAIN,
                EIID_ICBasicNameValuePairClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithNameValue(name, value, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Message::IBasicNameValuePair** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicNameValuePair, RGM_SAME_DOMAIN, Org::Apache::Http::Message::EIID_IBasicNameValuePair, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::INameValuePair** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicNameValuePair, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_INameValuePair, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicNameValuePair, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicNameValuePair, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicNameValuePair, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicNameValuePair, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Org::Apache::Http::Message::IBasicNameValuePair** __IBasicNameValuePair)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicNameValuePair = (Org::Apache::Http::Message::IBasicNameValuePair*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IBasicNameValuePair);
        if (*__IBasicNameValuePair) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Org::Apache::Http::INameValuePair** __INameValuePair)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__INameValuePair = (Org::Apache::Http::INameValuePair*)__pNewObj->Probe(Org::Apache::Http::EIID_INameValuePair);
        if (*__INameValuePair) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicListHeaderIterator
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Elastos::Utility::IList * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicListHeaderIteratorClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicListHeaderIterator, RGM_SAME_DOMAIN,
                EIID_ICBasicListHeaderIteratorClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHeadersName(headers, name, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::Message::IBasicListHeaderIterator** __IBasicListHeaderIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicListHeaderIterator = (Org::Apache::Http::Message::IBasicListHeaderIterator*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IBasicListHeaderIterator);
        if (*__IBasicListHeaderIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeaderIterator** __IHeaderIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHeaderIterator = (Org::Apache::Http::IHeaderIterator*)__pNewObj->Probe(Org::Apache::Http::EIID_IHeaderIterator);
        if (*__IHeaderIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Utility::IIterator** __IIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IIterator = (Elastos::Utility::IIterator*)__pNewObj->Probe(Elastos::Utility::EIID_IIterator);
        if (*__IIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Elastos::Utility::IList * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHeaderElementIterator
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [in] */ Org::Apache::Http::Message::IHeaderValueParser * parser,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHeaderElementIteratorClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHeaderElementIterator, RGM_SAME_DOMAIN,
                EIID_ICBasicHeaderElementIteratorClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHeaderIteratorParser(headerIterator, parser, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHeaderElementIteratorClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHeaderElementIterator, RGM_SAME_DOMAIN,
                EIID_ICBasicHeaderElementIteratorClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHeaderIterator(headerIterator, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [in] */ Org::Apache::Http::Message::IHeaderValueParser * parser,
        /* [out] */ Org::Apache::Http::IHeaderElementIterator** __IHeaderElementIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, parser, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHeaderElementIterator = (Org::Apache::Http::IHeaderElementIterator*)__pNewObj->Probe(Org::Apache::Http::EIID_IHeaderElementIterator);
        if (*__IHeaderElementIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [in] */ Org::Apache::Http::Message::IHeaderValueParser * parser,
        /* [out] */ Elastos::Utility::IIterator** __IIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, parser, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IIterator = (Elastos::Utility::IIterator*)__pNewObj->Probe(Elastos::Utility::EIID_IIterator);
        if (*__IIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [in] */ Org::Apache::Http::Message::IHeaderValueParser * parser,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, parser, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [in] */ Org::Apache::Http::Message::IHeaderValueParser * parser,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, parser, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [in] */ Org::Apache::Http::Message::IHeaderValueParser * parser,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, parser, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ Org::Apache::Http::IHeaderElementIterator** __IHeaderElementIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHeaderElementIterator = (Org::Apache::Http::IHeaderElementIterator*)__pNewObj->Probe(Org::Apache::Http::EIID_IHeaderElementIterator);
        if (*__IHeaderElementIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ Elastos::Utility::IIterator** __IIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IIterator = (Elastos::Utility::IIterator*)__pNewObj->Probe(Elastos::Utility::EIID_IIterator);
        if (*__IIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IHeaderIterator * headerIterator,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headerIterator, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHeaderIterator
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHeaderIteratorClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHeaderIterator, RGM_SAME_DOMAIN,
                EIID_ICBasicHeaderIteratorClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithHeadersName(headers, name, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::Message::IBasicHeaderIterator** __IBasicHeaderIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IBasicHeaderIterator = (Org::Apache::Http::Message::IBasicHeaderIterator*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IBasicHeaderIterator);
        if (*__IBasicHeaderIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Org::Apache::Http::IHeaderIterator** __IHeaderIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHeaderIterator = (Org::Apache::Http::IHeaderIterator*)__pNewObj->Probe(Org::Apache::Http::EIID_IHeaderIterator);
        if (*__IHeaderIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Utility::IIterator** __IIterator)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IIterator = (Elastos::Utility::IIterator*)__pNewObj->Probe(Elastos::Utility::EIID_IIterator);
        if (*__IIterator) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS ArrayOf<Org::Apache::Http::IHeader *> * headers,
        /* [in] */ const _ELASTOS String& name,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(headers, name, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHeader
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHeaderClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHeader, RGM_SAME_DOMAIN,
                EIID_ICBasicHeaderClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithNameValue(name, value, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHeader** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeader, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHeader, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeader, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeader, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeader, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHeader, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Org::Apache::Http::IHeader** __IHeader)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHeader = (Org::Apache::Http::IHeader*)__pNewObj->Probe(Org::Apache::Http::EIID_IHeader);
        if (*__IHeader) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& name,
        /* [in] */ const _ELASTOS String& value,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(name, value, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBufferedHeader
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBufferedHeaderClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBufferedHeader, RGM_SAME_DOMAIN,
                EIID_ICBufferedHeaderClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithBuffer(buffer, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IFormattedHeader** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBufferedHeader, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IFormattedHeader, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHeader** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBufferedHeader, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHeader, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBufferedHeader, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBufferedHeader, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBufferedHeader, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBufferedHeader, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ Org::Apache::Http::IFormattedHeader** __IFormattedHeader)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(buffer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IFormattedHeader = (Org::Apache::Http::IFormattedHeader*)__pNewObj->Probe(Org::Apache::Http::EIID_IFormattedHeader);
        if (*__IFormattedHeader) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ Org::Apache::Http::IHeader** __IHeader)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(buffer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHeader = (Org::Apache::Http::IHeader*)__pNewObj->Probe(Org::Apache::Http::EIID_IHeader);
        if (*__IHeader) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(buffer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(buffer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(buffer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Utility::ICharArrayBuffer * buffer,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(buffer, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicStatusLine
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 statusCode,
        /* [in] */ const _ELASTOS String& reasonPhrase,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicStatusLineClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicStatusLine, RGM_SAME_DOMAIN,
                EIID_ICBasicStatusLineClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithVerStatusCodeReasonPhrase(ver, statusCode, reasonPhrase, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IStatusLine** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicStatusLine, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IStatusLine, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicStatusLine, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicStatusLine, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicStatusLine, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicStatusLine, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 statusCode,
        /* [in] */ const _ELASTOS String& reasonPhrase,
        /* [out] */ Org::Apache::Http::IStatusLine** __IStatusLine)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, statusCode, reasonPhrase, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IStatusLine = (Org::Apache::Http::IStatusLine*)__pNewObj->Probe(Org::Apache::Http::EIID_IStatusLine);
        if (*__IStatusLine) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 statusCode,
        /* [in] */ const _ELASTOS String& reasonPhrase,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, statusCode, reasonPhrase, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 statusCode,
        /* [in] */ const _ELASTOS String& reasonPhrase,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, statusCode, reasonPhrase, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 statusCode,
        /* [in] */ const _ELASTOS String& reasonPhrase,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, statusCode, reasonPhrase, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [in] */ _ELASTOS Int32 statusCode,
        /* [in] */ const _ELASTOS String& reasonPhrase,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(ver, statusCode, reasonPhrase, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CParserCursor
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 lowerBound,
        /* [in] */ _ELASTOS Int32 upperBound,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICParserCursorClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CParserCursor, RGM_SAME_DOMAIN,
                EIID_ICParserCursorClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithLowerBoundUpperBound(lowerBound, upperBound, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 lowerBound,
        /* [in] */ _ELASTOS Int32 upperBound,
        /* [out] */ Org::Apache::Http::Message::IParserCursor** __IParserCursor)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(lowerBound, upperBound, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IParserCursor = (Org::Apache::Http::Message::IParserCursor*)__pNewObj->Probe(Org::Apache::Http::Message::EIID_IParserCursor);
        if (*__IParserCursor) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 lowerBound,
        /* [in] */ _ELASTOS Int32 upperBound,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(lowerBound, upperBound, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 lowerBound,
        /* [in] */ _ELASTOS Int32 upperBound,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(lowerBound, upperBound, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 lowerBound,
        /* [in] */ _ELASTOS Int32 upperBound,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(lowerBound, upperBound, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicRequestLine
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicRequestLineClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicRequestLine, RGM_SAME_DOMAIN,
                EIID_ICBasicRequestLineClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithMethodUriVer(method, uri, ver, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IRequestLine** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRequestLine, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IRequestLine, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRequestLine, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRequestLine, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRequestLine, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicRequestLine, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Org::Apache::Http::IRequestLine** __IRequestLine)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IRequestLine = (Org::Apache::Http::IRequestLine*)__pNewObj->Probe(Org::Apache::Http::EIID_IRequestLine);
        if (*__IRequestLine) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Message {
class CBasicHttpEntityEnclosingRequest
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpEntityEnclosingRequestClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpEntityEnclosingRequestClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithMethodUri(method, uri, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpEntityEnclosingRequestClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpEntityEnclosingRequestClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithMethodUriVer(method, uri, ver, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpEntityEnclosingRequestClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpEntityEnclosingRequestClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithRequestline(requestline, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpEntityEnclosingRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequest** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequest, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpMessage** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpMessage, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpEntityEnclosingRequest, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __IHttpEntityEnclosingRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntityEnclosingRequest = (Org::Apache::Http::IHttpEntityEnclosingRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntityEnclosingRequest);
        if (*__IHttpEntityEnclosingRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __IHttpEntityEnclosingRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntityEnclosingRequest = (Org::Apache::Http::IHttpEntityEnclosingRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntityEnclosingRequest);
        if (*__IHttpEntityEnclosingRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ const _ELASTOS String& method,
        /* [in] */ const _ELASTOS String& uri,
        /* [in] */ Org::Apache::Http::IProtocolVersion * ver,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(method, uri, ver, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Org::Apache::Http::IHttpEntityEnclosingRequest** __IHttpEntityEnclosingRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpEntityEnclosingRequest = (Org::Apache::Http::IHttpEntityEnclosingRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpEntityEnclosingRequest);
        if (*__IHttpEntityEnclosingRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Org::Apache::Http::IHttpRequest** __IHttpRequest)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpRequest = (Org::Apache::Http::IHttpRequest*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpRequest);
        if (*__IHttpRequest) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Org::Apache::Http::IHttpMessage** __IHttpMessage)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpMessage = (Org::Apache::Http::IHttpMessage*)__pNewObj->Probe(Org::Apache::Http::EIID_IHttpMessage);
        if (*__IHttpMessage) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Elastos::Core::ICloneable** __ICloneable)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICloneable = (Elastos::Core::ICloneable*)__pNewObj->Probe(Elastos::Core::EIID_ICloneable);
        if (*__ICloneable) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::IRequestLine * requestline,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(requestline, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
class CHttpProtocolParams
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Params::IHttpProtocolParams** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpProtocolParams, RGM_SAME_DOMAIN, Org::Apache::Http::Params::EIID_IHttpProtocolParams, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Params::ICoreProtocolPNames** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpProtocolParams, RGM_SAME_DOMAIN, Org::Apache::Http::Params::EIID_ICoreProtocolPNames, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpProtocolParams, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpProtocolParams, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpProtocolParams, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
class CHttpConnectionParams
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Params::IHttpConnectionParams** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpConnectionParams, RGM_SAME_DOMAIN, Org::Apache::Http::Params::EIID_IHttpConnectionParams, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Params::ICoreConnectionPNames** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpConnectionParams, RGM_SAME_DOMAIN, Org::Apache::Http::Params::EIID_ICoreConnectionPNames, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpConnectionParams, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpConnectionParams, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpConnectionParams, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
class CBasicHttpParams
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Params::IBasicHttpParams** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpParams, RGM_SAME_DOMAIN, Org::Apache::Http::Params::EIID_IBasicHttpParams, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Params::IHttpParams** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpParams, RGM_SAME_DOMAIN, Org::Apache::Http::Params::EIID_IHttpParams, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpParams, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpParams, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpParams, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpParams, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
class CDefaultedHttpParams
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * l,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * defaults,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDefaultedHttpParamsClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDefaultedHttpParams, RGM_SAME_DOMAIN,
                EIID_ICDefaultedHttpParamsClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithLDefaults(l, defaults, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * l,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * defaults,
        /* [out] */ Org::Apache::Http::Params::IDefaultedHttpParams** __IDefaultedHttpParams)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDefaultedHttpParams = (Org::Apache::Http::Params::IDefaultedHttpParams*)__pNewObj->Probe(Org::Apache::Http::Params::EIID_IDefaultedHttpParams);
        if (*__IDefaultedHttpParams) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * l,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * defaults,
        /* [out] */ Org::Apache::Http::Params::IHttpParams** __IHttpParams)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpParams = (Org::Apache::Http::Params::IHttpParams*)__pNewObj->Probe(Org::Apache::Http::Params::EIID_IHttpParams);
        if (*__IHttpParams) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * l,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * defaults,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * l,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * defaults,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * l,
        /* [in] */ Org::Apache::Http::Params::IHttpParams * defaults,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
class CHttpConnectionParamBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpConnectionParamBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpConnectionParamBean, RGM_SAME_DOMAIN,
                EIID_ICHttpConnectionParamBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParams(params, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Params::IHttpConnectionParamBean** __IHttpConnectionParamBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpConnectionParamBean = (Org::Apache::Http::Params::IHttpConnectionParamBean*)__pNewObj->Probe(Org::Apache::Http::Params::EIID_IHttpConnectionParamBean);
        if (*__IHttpConnectionParamBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Params {
class CHttpProtocolParamBean
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpProtocolParamBeanClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpProtocolParamBean, RGM_SAME_DOMAIN,
                EIID_ICHttpProtocolParamBeanClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParams(params, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Org::Apache::Http::Params::IHttpProtocolParamBean** __IHttpProtocolParamBean)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpProtocolParamBean = (Org::Apache::Http::Params::IHttpProtocolParamBean*)__pNewObj->Probe(Org::Apache::Http::Params::EIID_IHttpProtocolParamBean);
        if (*__IHttpProtocolParamBean) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Params::IHttpParams * params,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(params, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CHttpRequestExecutor
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IHttpRequestExecutor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestExecutor, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IHttpRequestExecutor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestExecutor, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestExecutor, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestExecutor, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CBasicHttpProcessor
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IBasicHttpProcessor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IBasicHttpProcessor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpResponseInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpResponseInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IHttpRequestInterceptorList** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IHttpRequestInterceptorList, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IHttpResponseInterceptorList** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IHttpResponseInterceptorList, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ICloneable** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, Elastos::Core::EIID_ICloneable, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpProcessor, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CHttpService
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor,
        /* [in] */ Org::Apache::Http::IConnectionReuseStrategy * connStrategy,
        /* [in] */ Org::Apache::Http::IHttpResponseFactory * responseFactory,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICHttpServiceClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CHttpService, RGM_SAME_DOMAIN,
                EIID_ICHttpServiceClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithProcessorConnStrategyResponseFactory(processor, connStrategy, responseFactory, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor,
        /* [in] */ Org::Apache::Http::IConnectionReuseStrategy * connStrategy,
        /* [in] */ Org::Apache::Http::IHttpResponseFactory * responseFactory,
        /* [out] */ Org::Apache::Http::Protocol::IHttpService** __IHttpService)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(processor, connStrategy, responseFactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpService = (Org::Apache::Http::Protocol::IHttpService*)__pNewObj->Probe(Org::Apache::Http::Protocol::EIID_IHttpService);
        if (*__IHttpService) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor,
        /* [in] */ Org::Apache::Http::IConnectionReuseStrategy * connStrategy,
        /* [in] */ Org::Apache::Http::IHttpResponseFactory * responseFactory,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(processor, connStrategy, responseFactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor,
        /* [in] */ Org::Apache::Http::IConnectionReuseStrategy * connStrategy,
        /* [in] */ Org::Apache::Http::IHttpResponseFactory * responseFactory,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(processor, connStrategy, responseFactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpProcessor * processor,
        /* [in] */ Org::Apache::Http::IConnectionReuseStrategy * connStrategy,
        /* [in] */ Org::Apache::Http::IHttpResponseFactory * responseFactory,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(processor, connStrategy, responseFactory, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CUriPatternMatcher
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IUriPatternMatcher** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUriPatternMatcher, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IUriPatternMatcher, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUriPatternMatcher, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUriPatternMatcher, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CUriPatternMatcher, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CResponseConnControl
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpResponseInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseConnControl, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpResponseInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseConnControl, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseConnControl, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseConnControl, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CRequestContent
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestContent, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestContent, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestContent, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestContent, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CResponseContent
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpResponseInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseContent, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpResponseInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseContent, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseContent, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseContent, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CRequestTargetHost
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestTargetHost, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestTargetHost, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestTargetHost, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestTargetHost, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CRequestExpectContinue
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestExpectContinue, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestExpectContinue, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestExpectContinue, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestExpectContinue, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CBasicHttpContext
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * parentContext,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICBasicHttpContextClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CBasicHttpContext, RGM_SAME_DOMAIN,
                EIID_ICBasicHttpContextClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithParentContext(parentContext, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IHttpContext** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpContext, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IHttpContext, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpContext, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpContext, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CBasicHttpContext, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * parentContext,
        /* [out] */ Org::Apache::Http::Protocol::IHttpContext** __IHttpContext)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parentContext, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpContext = (Org::Apache::Http::Protocol::IHttpContext*)__pNewObj->Probe(Org::Apache::Http::Protocol::EIID_IHttpContext);
        if (*__IHttpContext) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * parentContext,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parentContext, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * parentContext,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parentContext, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * parentContext,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(parentContext, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CHttpRequestHandlerRegistry
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IHttpRequestHandlerRegistry** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestHandlerRegistry, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IHttpRequestHandlerRegistry, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IHttpRequestHandlerResolver** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestHandlerRegistry, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IHttpRequestHandlerResolver, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestHandlerRegistry, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestHandlerRegistry, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpRequestHandlerRegistry, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CDefaultedHttpContext
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * l,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * defaults,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICDefaultedHttpContextClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CDefaultedHttpContext, RGM_SAME_DOMAIN,
                EIID_ICDefaultedHttpContextClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithLDefaults(l, defaults, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * l,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * defaults,
        /* [out] */ Org::Apache::Http::Protocol::IDefaultedHttpContext** __IDefaultedHttpContext)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IDefaultedHttpContext = (Org::Apache::Http::Protocol::IDefaultedHttpContext*)__pNewObj->Probe(Org::Apache::Http::Protocol::EIID_IDefaultedHttpContext);
        if (*__IDefaultedHttpContext) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * l,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * defaults,
        /* [out] */ Org::Apache::Http::Protocol::IHttpContext** __IHttpContext)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IHttpContext = (Org::Apache::Http::Protocol::IHttpContext*)__pNewObj->Probe(Org::Apache::Http::Protocol::EIID_IHttpContext);
        if (*__IHttpContext) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * l,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * defaults,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * l,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * defaults,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * l,
        /* [in] */ Org::Apache::Http::Protocol::IHttpContext * defaults,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(l, defaults, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CHttpDateGenerator
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::Protocol::IHttpDateGenerator** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDateGenerator, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IHttpDateGenerator, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDateGenerator, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDateGenerator, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDateGenerator, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CHttpDateGeneratorHelper
{
public:
    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Org::Apache::Http::Protocol::IHttpDateGeneratorHelper** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDateGeneratorHelper, RGM_SAME_DOMAIN, Org::Apache::Http::Protocol::EIID_IHttpDateGeneratorHelper, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDateGeneratorHelper, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDateGeneratorHelper, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode AcquireSingleton(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CHttpDateGeneratorHelper, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CResponseDate
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpResponseInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseDate, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpResponseInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseDate, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseDate, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseDate, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CRequestDate
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestDate, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestDate, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestDate, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestDate, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CResponseServer
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpResponseInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseServer, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpResponseInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseServer, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseServer, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CResponseServer, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CRequestUserAgent
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestUserAgent, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestUserAgent, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestUserAgent, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestUserAgent, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Protocol {
class CRequestConnControl
{
public:
    static _ELASTOS ECode New(
        /* [out] */ Org::Apache::Http::IHttpRequestInterceptor** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestConnControl, RGM_SAME_DOMAIN, Org::Apache::Http::EIID_IHttpRequestInterceptor, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IObject** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestConnControl, RGM_SAME_DOMAIN, EIID_IObject, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ Elastos::Core::ISynchronize** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestConnControl, RGM_SAME_DOMAIN, Elastos::Core::EIID_ISynchronize, (PInterface*)__object);
    }

    static _ELASTOS ECode New(
        /* [out] */ IWeakReferenceSource** __object)
    {
        return _CObject_CreateInstance(ECLSID_CRequestConnControl, RGM_SAME_DOMAIN, EIID_IWeakReferenceSource, (PInterface*)__object);
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Utility {
class CCharArrayBuffer
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICCharArrayBufferClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CCharArrayBuffer, RGM_SAME_DOMAIN,
                EIID_ICCharArrayBufferClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithCapacity(capacity, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ Org::Apache::Http::Utility::ICharArrayBuffer** __ICharArrayBuffer)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(capacity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ICharArrayBuffer = (Org::Apache::Http::Utility::ICharArrayBuffer*)__pNewObj->Probe(Org::Apache::Http::Utility::EIID_ICharArrayBuffer);
        if (*__ICharArrayBuffer) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(capacity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(capacity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(capacity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}
namespace Org {
namespace Apache {
namespace Http {
namespace Utility {
class CByteArrayBuffer
{
public:
    static _ELASTOS ECode _New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ IInterface** __object)
    {
        _ELASTOS ECode ec;
        ICByteArrayBufferClassObject* pClassObject;
        PInterface pObject = NULL;

        ec = _CObject_AcquireClassFactory(ECLSID_CByteArrayBuffer, RGM_SAME_DOMAIN,
                EIID_ICByteArrayBufferClassObject, (IInterface**)&pClassObject);
        if (FAILED(ec)) return ec;

        ec = pClassObject->CreateObjectWithCapacity(capacity, &pObject);

        *__object = pObject;

        pClassObject->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ Org::Apache::Http::Utility::IByteArrayBuffer** __IByteArrayBuffer)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(capacity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IByteArrayBuffer = (Org::Apache::Http::Utility::IByteArrayBuffer*)__pNewObj->Probe(Org::Apache::Http::Utility::EIID_IByteArrayBuffer);
        if (*__IByteArrayBuffer) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ IObject** __IObject)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(capacity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IObject = (IObject*)__pNewObj->Probe(EIID_IObject);
        if (*__IObject) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ Elastos::Core::ISynchronize** __ISynchronize)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(capacity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__ISynchronize = (Elastos::Core::ISynchronize*)__pNewObj->Probe(Elastos::Core::EIID_ISynchronize);
        if (*__ISynchronize) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

    static _ELASTOS ECode New(
        /* [in] */ _ELASTOS Int32 capacity,
        /* [out] */ IWeakReferenceSource** __IWeakReferenceSource)
    {
        IInterface* __pNewObj = NULL;

        _ELASTOS ECode ec = _New(capacity, &__pNewObj);
        if (FAILED(ec)) return ec;

        *__IWeakReferenceSource = (IWeakReferenceSource*)__pNewObj->Probe(EIID_IWeakReferenceSource);
        if (*__IWeakReferenceSource) __pNewObj->AddRef();
        else ec = E_NO_INTERFACE;
        __pNewObj->Release();

        return ec;
    }

};
}
}
}
}

#endif // __Elastos_CoreLibrary_Apache_h__
