//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Elastos.Security.IPublicKey;
    using interface Elastos.Security.IPrivateKey;
    using interface Elastosx.Crypto.ISecretKey;

    namespace Org {
    namespace Conscrypt {

    interface IOpenSSLKey {
        /**
         * Returns the raw pointer to the EVP_PKEY context for use in JNI calls. The
         * life cycle of this native pointer is managed by the {@code OpenSSLKey}
         * instance and must not be destroyed or freed by users of this API.
         */
        GetPkeyContext(
            [out] Int64* result);

        GetEngine(
            [out] IOpenSSLEngine** result);

        IsEngineBased(
            [out] Boolean* result);

        GetAlias(
            [out] String* result);

        GetPublicKey(
            [out] IPublicKey** result);

        GetPrivateKey(
            [out] IPrivateKey** result);

        GetSecretKey(
            [in] String algorithm,
            [out] ISecretKey** result);
    }

    interface IOpenSSLKeyHelper {
        FromPrivateKey(
            [in] IPrivateKey* key,
            [out] IOpenSSLKey** result);

        FromPublicKey(
            [in] IPublicKey* key,
            [out] IOpenSSLKey** result);
    }

    } // namespace Conscrypt
    } // namespace Org
}
