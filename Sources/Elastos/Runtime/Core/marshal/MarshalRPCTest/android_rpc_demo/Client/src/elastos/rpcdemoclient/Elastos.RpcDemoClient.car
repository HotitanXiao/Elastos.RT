//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    importlib("Elastos.CoreLibrary");

    namespace Elastos {
    namespace RpcDemoClient {

    enum ElaConnectionStatus {
        ElaConnectionStatus_Connected,
        ElaConnectionStatus_Disconnected,
    }

    interface ICarrierNodeListener {
        OnConnectionStatus(
            [in] ElaConnectionStatus status);

        OnReady();

        OnFriendConnection(
            [in] String friendid,
            [in] ElaConnectionStatus status);

        OnFriendRequest(
            [in] String userid,
            [in] String hello);

        OnFreindAdded(
            [in] String userid);

        OnFriendMessage(
            [in] String from,
            [in] String msg);
    }

    interface IRpcDemoClient {
        Connect(
            [in] String ip,
            [in] Boolean isServer,
            [out] Boolean* succeed);

        GetAddress(
            [in] Boolean isSelf,
            [out] String* address);

        AddFriend(
            [in] String address,
            [in] String hello);

        SendMsg(
            [in] String msg);

        SendMsg(
            [in] String userid,
            [in] String msg);

        GetUserId(
            [out] String* userid);

        SetCarrierNodeListener(
            [in] ICarrierNodeListener* listener);
    }

    class CRpcDemoClient {
        constructor();

        interface IRpcDemoClient;
    }

    } // RpcDemoClient
    } // Elastos
}
