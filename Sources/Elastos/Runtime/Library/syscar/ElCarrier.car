//=========================================================================
// Copyright (C) 2018 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

/** @addtogroup CarrierAPI
  *   @{
  */

library
{
    //  const FAMILY_CORE = 0x10        // Carrier's error code.
    //  #define FRAMEWORK_ERROR(c)      MAKE_ECODE(SEVERITY_ERROR, FAMILY_FRAMEWORK, c)
    const E_CARRIER_NOT_READY                         = 0x81010000;

    interface IFriend {
        GetUid(
            [out] String* uid);

        GetName(
            [out] String* name);

        SetLabel(
            [in] String label);

        GetLabel(
            [out] String* label);

        IsOnline(
            [out] Boolean* online);
    }

    interface ICarrierListener {
        OnConnectionChanged(
            [in] Boolean online);

        OnReady();

        OnFriendRequest(
            [in] String uid,
            [in] String hello);

        OnFriendConnetionChanged(
            [in] String uid,
            [in] Boolean online);
    }

    interface ICarrier {
        Start(
            [in] String carrierDataPath);

        Stop();

        RegenerateAddress();

        GetAddress(
            [out] String* myAddress);

        AccpetFriendRequest(
            [in] String uid);

        AddFriend(
            [in] String friendAddress,
            [in] String hello);

        RemoveFriend(
            [in] IFriend* _friend);

        IsOnline(
            [out] Boolean* online);

        /**
        * 
        * Description of the method.
        *
        * @param
        *      uid     [in] Description of the in param.
        *
        * @return
        *      _friend [out] Description of the out param. 
        */
        GetFriend(
            [in] String uid,
            [out] IFriend** _friend);

        GetFriends(
            [out, callee] ArrayOf<IFriend*>* friends);

        AddCarrierNodeListener(
            [in] ICarrierListener* listener);

        RemoveCarrierNodeListener(
            [in] ICarrierListener* listener);

        Import(
            [in] String dataPath);

        Export(
            [out] String* dataPath);
    }
}

/** @} */