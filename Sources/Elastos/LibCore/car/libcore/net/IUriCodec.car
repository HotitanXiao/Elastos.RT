//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Core.IStringBuilder;
    interface Elastos.IO.Charset.ICharset;

    namespace Libcore {
    namespace Net {

    /**
     * Encodes and decodes {@code application/x-www-form-urlencoded} content.
     * Subclasses define exactly which characters are legal.
     *
     * <p>By default, UTF-8 is used to encode escaped characters. A single input
     * character like "\u0080" may be encoded to multiple octets like %C2%80.
     */
    interface IUriCodec {
        /**
         * Throws if {@code s} is invalid according to this encoder.
         */
        Validate(
            [in] String uri,
            [in] Int32 start,
            [in] Int32 end,
            [in] String name,
            [out] String* result);

        Encode(
            [in] String s,
            [in] ICharset* charset,
            [out] String* result);

        AppendEncoded(
            [in] IStringBuilder* builder,
            [in] String s);

        AppendPartiallyEncoded(
            [in] IStringBuilder* builder,
            [in] String s);
    }

    [deprecated]
    interface IUriCodecHelper {

        ValidateSimple(
            [in] String s,
            [in] String legal);

        Decode(
            [in]  String s,
            [out] String* result);

        Decode(
            [in] String s,
            [in] Boolean convertPlus,
            [in] ICharset* charset,
            [in] Boolean throwOnFailure,
            [out] String* result);
    }

    } // namespace Net
    } // namespace Libcore

}
