//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace System {

    /**
     * Information returned/taken by fcntl(2) F_GETFL and F_SETFL. Corresponds to C's
     * {@code struct flock} from
     * <a href="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/fcntl.h.html">&lt;fcntl.h&gt;</a>
     */
    interface IStructFlock {
        /** The operation type, one of F_RDLCK, F_WRLCK, or F_UNLCK. */
        GetType(
            [out] Int16* type);

        SetType(
            [in] Int16 type);

        /** How to interpret l_start, one of SEEK_CUR, SEEK_END, SEEK_SET. */
        GetWhence(
            [out] Int16* whence);

        SetWhence(
            [in] Int16 whence);

        /** Start offset. */
        GetStart(
            [out] Int64* start);

        SetStart(
            [in] Int64 start);

        /** Byte count to operate on. */
        GetLen(
            [out] Int64* len);

        SetLen(
            [in] Int64 len);

        /** Process blocking our lock (filled in by F_GETLK, otherwise unused). */
        GetPid(
            [out] Int32* pid);

        SetPid(
            [in] Int32 pid);
    }

    } // namespace System
    } // namespace Droid
    } // namespace Elastos
}