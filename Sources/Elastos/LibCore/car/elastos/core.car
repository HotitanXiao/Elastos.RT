//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    merge("core/Errors.car");
    merge("core/Exceptions.car");
    merge("core/ICharSequence.car");
    merge("core/IAppendable.car");
    merge("core/ICloneable.car");
    merge("core/IComparable.car");
    merge("core/IComparator.car");
    merge("core/IStringBuilder.car");
    merge("core/IStringBuffer.car");
    merge("core/IArrayOf.car");
    merge("core/INumber.car");
    merge("core/IBoolean.car");
    merge("core/IByte.car");
    merge("core/IChar32.car");
    merge("core/IInteger16.car");
    merge("core/IInteger32.car");
    merge("core/IInteger64.car");
    merge("core/IFloat.car");
    merge("core/IDouble.car");
    merge("core/IString.car");
    merge("core/IRunnable.car");
    merge("core/ISynchronize.car");
    merge("core/IThread.car");
    merge("core/IThreadGroup.car");
    merge("core/IClassLoader.car");
    merge("core/IThrowable.car");
    merge("core/IStackTraceElement.car");
    merge("core/IBlockGuard.car");
    merge("core/ICloseGuard.car");
    merge("core/IEnum.car");
//    merge("core/ISystem.car");
    merge("core/IThreadLocal.car");

    merge("core/reflect/IInvocationHandler.car");
    merge("core/reflect/IProxyFactory.car");

    merge("io/ISerializable.car");

    interface Elastos.Core.IRunnable;
    interface Elastos.Core.ICharSequence;
    interface Elastos.IO.ISerializable;

    namespace Elastos {
    namespace Core {

    class CString {
        constructor(
            [in] String str);

        interface ICharSequence;
        interface IString;
        interface IComparable;
    }

    class CBoolean {
        constructor(
           [in] Boolean value);

       interface IBoolean;
       interface ISerializable;
       interface IComparable;
    }

    class CByte {
        constructor(
            [in] Byte value);

        interface IByte;
        interface INumber;
        interface ISerializable;
        interface IComparable;
    }

    class CChar32 {
        constructor(
            [in] Char32 value);

        interface IChar32;
        interface INumber;
        interface ISerializable;
    }

    class CInteger16 {
        constructor(
            [in] Int16 value);

        interface IInteger16;
        interface INumber;
        interface ISerializable;
        interface IComparable;
    }

    class CInteger32 {
        constructor(
            [in] Int32 value);

        interface IInteger32;
        interface INumber;
        interface ISerializable;
        interface IComparable;
    }

    class CInteger64 {
        constructor(
            [in] Int64 value);

        interface IInteger64;
        interface INumber;
        interface ISerializable;
        interface IComparable;
    }

    class CFloat {
        constructor(
            [in] Float value);

        interface IFloat;
        interface INumber;
        interface ISerializable;
        interface IComparable;
    }

    class CDouble {
        constructor(
            [in] Double value);

        interface IDouble;
        interface INumber;
        interface ISerializable;
        interface IComparable;
    }

    class CArrayOf {
        constructor(
            [in] InterfaceID riid,
            [in] Int32 size);

        interface IArrayOf;
    }

    class CThrowable {
        constructor();

        constructor(
            [in] String detailMessage);

        constructor(
            [in] String detailMessage,
            [in] IThrowable * cause);

        constructor(
            [in] IThrowable * cause);

        interface IThrowable;
    }

/*
    singleton class CBlockGuard {
         interface IBlockGuard;
    }

    class CCloseGuard {
        interface ICloseGuard;
    }

    singleton class CCloseGuardHelper {
        interface ICloseGuardHelper;
    }
*/
    class CObject {
        constructor();

        interface IObject;
        interface ISynchronize;
        interface IWeakReferenceSource;
    }
/*
    singleton class CSystem {
         constructor();

         interface ISystem;
    }

    namespace Reflect {

    singleton class CProxyFactory {
        interface IProxyFactory;
    }

    } // namespace Reflect
*/
    } // namespace Core
    } // namepsace Elastos
}
