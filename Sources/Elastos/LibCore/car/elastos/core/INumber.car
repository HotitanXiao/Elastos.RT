//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Core {

    /**
     * @Involve
     * interface IComparable;
     */
    interface INumber {
        /**
         * Returns this object's value as a byte. Might involve rounding and/or
         * truncating the value, so it fits into a byte.
         *
         * @return the primitive byte value of this object.
         */
        ByteValue(
            [out] Byte* result);

        /**
         * Returns this object's value as a short. Might involve rounding and/or
         * truncating the value, so it fits into a short.
         *
         * @return the primitive short value of this object.
         */
        Int16Value(
            [out] Int16* result);

        /**
         * Returns this object's value as an int. Might involve rounding and/or
         * truncating the value, so it fits into an int.
         *
         * @return the primitive int value of this object.
         */
        Int32Value(
            [out] Int32* result);

        /**
         * Returns this object's value as a long. Might involve rounding and/or
         * truncating the value, so it fits into a long.
         *
         * @return the primitive long value of this object.
         */
        Int64Value(
            [out] Int64* result);

        /**
         * Returns this object's value as a float. Might involve rounding.
         *
         * @return the primitive float value of this object.
         */
        FloatValue(
            [out] Float* result);

        /**
         * Returns this object's value as a double. Might involve rounding.
         *
         * @return the primitive double value of this object.
         */
        DoubleValue(
            [out] Double* result);
    }

    } // namespace Core
    } // namespace Elastos
}
