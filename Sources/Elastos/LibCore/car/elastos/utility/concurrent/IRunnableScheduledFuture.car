//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Utility {
    namespace Concurrent {
    /**
     * A {@link ScheduledFuture} that is {@link Runnable}. Successful
     * execution of the <tt>run</tt> method causes completion of the
     * <tt>Future</tt> and allows access to its results.
     * @see FutureTask
     * @see Executor
     * @since 1.6
     * @author Doug Lea
     * @param <V> The result type returned by this Future's <tt>get</tt> method
     */

    /**
     * @Involve
     * interface IFuture;
     * interface IRunnableFuture;
     */
    interface IRunnableScheduledFuture {
        /**
         * Returns true if this is a periodic task. A periodic task may
         * re-run according to some schedule. A non-periodic task can be
         * run only once.
         *
         * @return true if this task is periodic
         */
        IsPeriodic(
            [out] Boolean* value);

        GetDelay(
            [in] ITimeUnit* unit,
            [out] Int64* value);

        CompareTo(
            [in] IInterface* another,
            [out] Int32* result);
    }

    } // namespace Concurrent
    } // namespace Utility
    } // namespace Elastos
}
