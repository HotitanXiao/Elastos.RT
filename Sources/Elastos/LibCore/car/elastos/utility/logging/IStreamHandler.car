//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.IO.IOutputStream;

    namespace Elastos {
    namespace Utility {
    namespace Logging {
    /**
     * A {@code StreamHandler} object writes log messages to an output stream, that
     * is, objects of the class {@link java.io.OutputStream}.
     * <p>
     * A {@code StreamHandler} object reads the following properties from the log
     * manager to initialize itself. A default value will be used if a property is
     * not found or has an invalid value.
     * <ul>
     * <li>java.util.logging.StreamHandler.encoding specifies the encoding this
     * handler will use to encode log messages. Default is the encoding used by the
     * current platform.
     * <li>java.util.logging.StreamHandler.filter specifies the name of the filter
     * class to be associated with this handler. No <code>Filter</code> is used by
     * default.
     * <li>java.util.logging.StreamHandler.formatter specifies the name of the
     * formatter class to be associated with this handler. Default is
     * {@code java.util.logging.SimpleFormatter}.
     * <li>java.util.logging.StreamHandler.level specifies the logging level.
     * Defaults is {@code Level.INFO}.
     * </ul>
     * <p>
     * This class is not thread-safe.
     */

    /**
     * @Involve
     * interface ILogHandler;
     */
    interface IStreamHandler {
        /**
         * Sets the output stream this handler writes to. Note it does nothing else.
         *
         * @param newOs
         *            the new output stream
         */
        InternalSetOutputStream(
            [in] IOutputStream* newOs);

        /**
         * Closes this handler, but the underlying output stream is only closed if
         * {@code closeStream} is {@code true}. Security is not checked.
         *
         * @param closeStream
         *            whether to close the underlying output stream.
         */
        Close(
            [in] Boolean closeStream);
    }

    } // namespace Logging
    } // namespace Utility
    } // namespace Elastos
}
