//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Utility {

    /**
     * @Involve
     * interface IRunnable;
     */
    interface ITimerTask {
        /*
         * Method called from the Timer for synchronized getting of when field.
         */
        GetWhen(
            [out] Int64* when);

        SetWhen(
            [in] Int64 when);

        /*
         * Method called from the Timer object when scheduling an event @param time
         */
        SetScheduledTime(
            [in] Int64 time);

        /*
         * Is TimerTask scheduled into any timer?
         *
         * @return {@code true} if the timer task is scheduled, {@code false}
         * otherwise.
         */
        IsScheduled(
            [out] Boolean* scheduled);

        Cancel(
            [out] Boolean* value);

        ScheduledExecutionTime(
            [out] Int64* value);

        IsCancelled(
            [out] Boolean* cancelled);

        GetPeriod(
            [out] Int64* period);

        SetPeriod(
            [in] Int64 period);

        IsFixedRate(
            [out] Boolean* fixed);

        SetFixedRate(
            [in] Boolean fixed);

        Lock();

        Unlock();
    }

    } // namespace Utility
    } // namespace Elastos
}