//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Utility {
    /**
     * An array-backed list that exposes its array.
     *
     * @hide
     */

    /**
     * @Involve
     * interface IIterable;
     * interface ICollection;
     * interface IList;
     */
    [deprecated]
    interface IUnsafeArrayList {
        GetArrays(
            [out, callee] ArrayOf<IInterface*> * array);


        /**
         * interfaces from IList
         *
         */
        Add(
            [in] Int32 location,
            [in] IInterface* object);

        Add(
            [in] IInterface* object,
            [out] Boolean* modified);

        Add(
            [in] IInterface* object);

        AddAll(
            [in] Int32 location,
            [in] ICollection* collection,
            [out] Boolean* modified);

        AddAll(
            [in] Int32 location,
            [in] ICollection* collection);

        Get(
            [in] Int32 location,
            [out] IInterface** object);

        IndexOf(
            [in] IInterface* object,
            [out] Int32* index);

        LastIndexOf(
            [in] IInterface* object,
            [out] Int32* index);

        GetListIterator(
            [out] IListIterator** it);

        GetListIterator(
            [in] Int32 location,
            [out] IListIterator** it);

        Remove(
            [in] Int32 location,
            [out] IInterface** object);

        Remove(
            [in] Int32 location);

        Set(
            [in] Int32 location,
            [in] IInterface* object,
            [out] IInterface** prevObject);

        Set(
            [in] Int32 location,
            [in] IInterface* object);

        GetSubList(
            [in] Int32 start,
            [in] Int32 end,
            [out] IList** subList);


        /**
         * interfaces from ICollection
         *
         */
        GetIterator(
            [out] IIterator** it);

        AddAll(
            [in] ICollection* collection,
            [out] Boolean* modified);

        AddAll(
            [in] ICollection* collection);

        Clear();

        Contains(
            [in] IInterface* object,
            [out] Boolean* result);

        ContainsAll(
            [in] ICollection* collection,
            [out] Boolean* result);

        Equals(
            [in] IInterface* object,
            [out] Boolean* result);

        GetHashCode(
            [out] Int32* hashCode);

        IsEmpty(
            [out] Boolean* result);

        Remove(
            [in] IInterface* object,
            [out] Boolean* modified);

        Remove(
            [in] IInterface* object);

        RemoveAll(
            [in] ICollection* collection,
            [out] Boolean* modified);

        RemoveAll(
            [in] ICollection* collection);

        RetainAll(
            [in] ICollection* collection,
            [out] Boolean* modified);

        RetainAll(
            [in] ICollection* collection);

        GetSize(
            [out] Int32* size);

        ToArray(
            [out, callee] ArrayOf<IInterface *> * array);

        ToArray(
            [in] ArrayOf<IInterface* > * inArray,
            [out, callee] ArrayOf<IInterface *> * outArray);
    }

    } // namespace Utility
    } // namespace Elastos
}