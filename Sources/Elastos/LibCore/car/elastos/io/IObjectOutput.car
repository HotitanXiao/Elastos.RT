//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace IO {

    /*
     * Defines an interface for classes that allow writing serialized objects.
     *
     * @implement Elastos.IO.IDataOutput
     * @sa IObjectOutputStream
     * @sa IObjectInput
     *
     */

     /**
     * @Involve
     * interface IDataOutput;
     */
    interface IObjectOutput {
        /**
         * Closes the target stream. Implementations of this method should free any
         * resources used by the stream.
         *
         * @return ECode = NOERROR(0) if success, else as follows:
         * Value | Meaning |
         * :-|:------------|
         * IOException | if an error occurs while closing the target stream.
         */
        Close();

        /**
         * Flushes the target stream. Implementations of this method should ensure
         * that any pending writes are written out to the target stream.
         *
         * @return ECode = NOERROR(0) if success, else as follows:
         * Value | Meaning |
         * :-|:------------|
         * IOException | if an error occurs while flushing the target stream.
         */
        Flush();

        /**
         * Writes the specified object {obj} to the target stream.
         *
         * @param obj
         *            the object to write.
         * @return ECode = NOERROR(0) if success, else as follows:
         * Value | Meaning |
         * :-|:------------|
         * IOException | if an error occurs while writing to the target stream.
         */
        WriteObject(
            [in] IInterface* obj);
    }

    } // namespace IO
    } // namespace Elastos
}