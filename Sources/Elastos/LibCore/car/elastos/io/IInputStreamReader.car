//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace IO {
    /**
     *A class for turning a byte stream into a character stream. Data read from the source input stream is
     *converted into characters by either a default or a provided character converter. The default encoding
     *is taken from the "file.encoding" system property. InputStreamReader contains a buffer of bytes read
     *from the source stream and converts these into characters as needed. The buffer size is 8K.
     *
     * @implement Elastos.IO.IReader
     * @sa OutputStreamWriter
     */
     /**
     * @Involve
     * interface IReadable;
     * interface IReader;
     */
    interface IInputStreamReader {
        /**
         * Returns the historical name of the encoding used by this writer to convert characters to
         * bytes, or null if this writer has been closed. Most callers should probably keep
         * track of the String or Charset they passed in; this method may not return the same
         * name.
         */
        GetEncoding(
            [out] String* encoding);
    }

    } // namespace IO
    } // namespace Elastos
}
