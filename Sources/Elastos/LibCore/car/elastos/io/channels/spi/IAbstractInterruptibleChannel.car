//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    namespace Elastos {
    namespace IO {
    namespace Channels {
    namespace Spi {

    /**
     * {@code AbstractInterruptibleChannel} is the root class for interruptible
     * channels.
     * <p>
     * The basic usage pattern for an interruptible channel is to invoke
     * {@code begin()} before any I/O operation that potentially blocks
     * indefinitely, then {@code end(boolean)} after completing the operation. The
     * argument to the {@code end} method should indicate if the I/O operation has
     * actually completed so that any change may be visible to the invoker.
    */
    /**
     * @Involve
     * interface Elastos.IO.Channels.IInterruptibleChannel;
     */
    interface IAbstractInterruptibleChannel {
    } // end interface

    } // namespace Spi
    } // namespace Channels
    } // namespace IO
    } // namespace Elastos
}
