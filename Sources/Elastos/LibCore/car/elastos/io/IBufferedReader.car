//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace IO {
    /**
    * Wraps an existing Reader and buffers the input. Expensive interaction with the
    * underlying reader is minimized, since most (smaller) requests can be satisfied by
    * accessing the buffer alone. The drawback is that some extra space is required to
    * hold the buffer and that copying takes place when filling that buffer, but this
    * is usually outweighed by the performance benefits.
    * <p>
    * A typical application pattern for the class looks like this:
    * <p>
    * BufferedReader buf = new BufferedReader(new FileReader("file.java"));
    * @sa BufferedWriter
    *@implement Elastos.IO.IReader
    */

    /**
     * @Involve
     * interface IReadable;
     * interface IReader;
     * interface ICloseable;
     */
    interface IBufferedReader {
        /**
         * Returns the next line of text available from this reader. A line is
         * represented by zero or more characters followed by {'\n'},
         * {'\r'}, {"\r\n"} or the end of the reader. The string does
         * not include the newline sequence.
         *
         * @return the contents of the line or {null} if no characters were
         *         read before the end of the reader has been reached.
         * @return ECode = NOERROR(0) if success, else as follows:
         * Value | Meaning |
         * :-|:------------|
         * IOException | if this reader is closed or some other I/O error occurs.
         */
        ReadLine(
            [out] String* contents);
    }

    } // namespace IO
    } // namespace Elastos
}