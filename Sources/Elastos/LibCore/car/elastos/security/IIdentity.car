//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Security.ICertificate;
    interface Elastos.Security.IIdentityScope;
    interface Elastos.Security.IPublicKey;

    namespace Elastos {
    namespace Security {

    interface IIdentity {
        /**
         * Adds a {@code Certificate} to this {@code Identity}.
         *
         * @param certificate
         *            the {@code Certificate} to be added to this {@code Identity}.
         * @throws KeyManagementException
         *             if the certificate is not valid.
         */
        AddCertificate(
            [in] ICertificate* certificate);

        /**
         * Removes the specified {@code Certificate} from this {@code Identity}.
         *
         * @param certificate
         *            the {@code Certificate} to be removed.
         * @throws KeyManagementException
         *             if the certificate is not found.
         */
        RemoveCertificate(
            [in] ICertificate* certificate);

        /**
         * Returns the certificates for this {@code Identity}. External
         * modifications of the returned array has no impact on this {@code
         * Identity}.
         *
         * @return the {@code Certificates} for this {@code Identity}
         */
        Certificates(
            [out, callee] ArrayOf<ICertificate*>* certs);

        /**
         * Returns a string containing a concise, human-readable description of the
         * this {@code Identity}.
         *
         * @param detailed
         *            whether or not this method should return detailed information.
         * @return a printable representation for this {@code Permission}.
         */
        ToString(
            [in] Boolean detailed,
            [out] String* str);

        /**
         * Returns the {@code IdentityScope} of this {@code Identity}.
         *
         * @return the {@code IdentityScope} of this {@code Identity}.
         */
        GetScope(
            [out] IIdentityScope** scope);

        /**
         * Sets the specified {@code PublicKey} to this {@code Identity}.
         *
         * @param key
         *            the {@code PublicKey} to be set.
         * @throws KeyManagementException
         *             if another {@code Identity} in the same scope as this {@code
         *             Identity} already has the same {@code PublicKey}.
         */
        SetPublicKey(
            [in] IPublicKey* key);

        /**
         * Returns the {@code PublicKey} associated with this {@code Identity}.
         *
         * @return the {@code PublicKey} associated with this {@code Identity}.
         */
        GetPublicKey(
            [out] IPublicKey** pubKey);

        /**
         * Sets an information string for this {@code Identity}.
         * @param info
         *            the information to be set.
         */
        SetInfo(
            [in] String info);

        /**
         * Returns the information string of this {@code Identity}.
         *
         * @return the information string of this {@code Identity}.
         */
        GetInfo(
            [out] String* str);
    }

    } // namespace Security
    } // namespace Elastos
}
