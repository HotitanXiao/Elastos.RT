//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastosx {
    namespace Security {
    namespace Auth {
    namespace Callback {

    /**
     * @Involve
     * interface Elastosx.Security.Auth.ICallback;
     */
    [deprecated]
    interface IPasswordCallback {
        /**
         * Returns the prompt that was specified when creating this {@code
         * PasswordCallback}
         *
         * @return the prompt
         */
        GetPrompt(
            [out] String* prompt);

        /**
         * Queries whether this {@code PasswordCallback} expects user input to be
         * echoed, which is specified during the creation of the object.
         *
         * @return {@code true} if (and only if) user input should be echoed
         */
        IsEchoOn(
            [out] Boolean* echoOn);

        /**
         * Sets the password. The {@link CallbackHandler} that performs the actual
         * provisioning or input of the password needs to call this method to hand
         * back the password to the security service that requested it.
         *
         * @param password
         *            the password. A copy of this is stored, so subsequent changes
         *            to the input array do not affect the {@code PasswordCallback}.
         */
        SetPassword(
            [in] ArrayOf<Char32>* password);

        /**
         * Returns the password. The security service that needs the password
         * usually calls this method once the {@link CallbackHandler} has finished
         * its work.
         *
         * @return the password. A copy of the internal password is created and
         *         returned, so subsequent changes to the internal password do not
         *         affect the result.
         */
         GetPassword(
            [out, callee] ArrayOf<Char32>* password);

        /**
         * Clears the password stored in this {@code PasswordCallback}.
         */
        ClearPassword();
    }

    } // namespace Callback
    } // namespace Auth
    } // namespace Security
    } // namespace Elastosx
}
