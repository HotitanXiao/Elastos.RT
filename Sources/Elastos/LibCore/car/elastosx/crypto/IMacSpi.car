//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Security.IKey;
    interface Elastos.Security.Spec.IAlgorithmParameterSpec;

    namespace Elastosx {
    namespace Crypto {

        /**
         * The <i>Service-Provider Interface</i> (<b>SPI</b>) definition for the {@code
         * Mac} class.
         *
         * @see Mac
         */
        [deprecated]
        interface IMacSpi {

        /**
         * Returns the length of this MAC (in bytes).
         *
         * @return the length of this MAC (in bytes).
         */
        EngineGetMacLength(
            [out] Int32 * result);

        /**
         * Initializes this {@code MacSpi} instance with the specified key and
         * algorithm parameters.
         *
         * @param key
         *            the key to initialize this algorithm.
         * @param params
         *            the parameters for this algorithm.
         * @throws InvalidKeyException
         *             if the specified key cannot be used to initialize this
         *             algorithm, or it is {@code null}.
         * @throws InvalidAlgorithmParameterException
         *             if the specified parameters cannot be used to initialize this
         *             algorithm.
         */
        EngineInit(
            [in] IKey * key,
            [in] IAlgorithmParameterSpec * params);

        /**
         * Updates this {@code MacSpi} instance with the specified byte.
         *
         * @param input
         *            the byte.
         */
        EngineUpdate(
            [in] Byte input);

        /**
         * Updates this {@code MacSpi} instance with the data from the specified
         * buffer {@code input} from the specified {@code offset} and length {@code
         * len}.
         *
         * @param input
         *            the buffer.
         * @param offset
         *            the offset in the buffer.
         * @param len
         *            the length of the data in the buffer.
         */
        EngineUpdate(
            [in] ArrayOf<Byte> * input,
            [in] Int32 offset,
            [in] Int32 len);

        /**
         * Computes the digest of this MAC based on the data previously specified in
         * {@link #engineUpdate} calls.
         * <p>
         * This {@code MacSpi} instance is reverted to its initial state and
         * can be used to start the next MAC computation with the same parameters or
         * initialized with different parameters.
         *
         * @return the generated digest.
         */
        EngineDoFinal(
            [out, callee] ArrayOf<Byte> * input);

        /**
         * Resets this {@code MacSpi} instance to its initial state.
         * <p>
         * This {@code MacSpi} instance is reverted to its initial state and can be
         * used to start the next MAC computation with the same parameters or
         * initialized with different parameters.
         */
        EngineReset();
    }


    } // namespace Crypto
    } // namespace Elastosx
}
