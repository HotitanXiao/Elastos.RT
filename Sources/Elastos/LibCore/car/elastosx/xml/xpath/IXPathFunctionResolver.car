//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastosx.Xml.Namespace.IQName;

    namespace Elastosx {
    namespace Xml {
    namespace XPath {

    interface IXPathFunctionResolver {
    /**
    * <p>Find a function in the set of available functions.</p>
    *
    * <p>If <code>functionName</code> or <code>arity</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>
    *
    * @param functionName The function name.
    * @param arity The number of arguments that the returned function must accept.
    *
    * @return The function or <code>null</code> if no function named <code>functionName</code> with <code>arity</code> arguments exists.
    *
    * @throws NullPointerException If <code>functionName</code> or <code>arity</code> is <code>null</code>.
    */
        ResolveFunction(
            [in] IQName* functionName,
            [in] Int32 arity,
            [out] IXPathFunction** func);
    }

    } // namespace XPath
    } // namespace Xml
    } // namespace Elastosx
}

