//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastosx.Xml.Namespace.IQName;

    interface Elastos.Utility.IDate;
    interface Elastos.Utility.ICalendar;
    interface Elastos.Core.INumber;
    interface Elastos.Math.IBigDecimal;

    namespace Elastosx {
    namespace Xml {
    namespace Datatype {

    interface IDuration {

        GetXMLSchemaType(
            [out] IQName** type);

        GetSign(
            [out] Int32* sign);

        GetYears(
            [out] Int32* years);

        GetMonths(
            [out] Int32* months);

        GetDays(
            [out] Int32* days);

        GetHours(
            [out] Int32* hours);

        GetMinutes(
            [out] Int32* minutes);

        GetSeconds(
            [out] Int32* seconds);

        GetTimeInMillis(
            [in] ICalendar* startInstant,
            [out] Int64* time);

        GetTimeInMillis(
            [in] IDate* startInstant,
            [out] Int64* time);

        GetField(
            [in] IDatatypeConstantsField* filed,
            [out] INumber** rst);

        IsSet(
            [in] IDatatypeConstantsField* field,
            [out] Boolean* time);

        Add(
            [in] IDuration* rhs,
            [out] IDuration** duration);

        AddTo(
            [in] ICalendar* calendar);

        AddTo(
            [in] IDate* date);

        Subtract(
            [in] IDuration* rhs,
            [out] IDuration** duration);

        Multiply(
            [in] Int32 factor,
            [out] IDuration** duration);

        Multiply(
            [in] IBigDecimal* factor,
            [out] IDuration** duration);

        Negate(
            [out] IDuration** duration);

        NormalizeWith(
            [in] ICalendar* startTimeInstant,
            [out] IDuration** duration);

        Compare(
            [in] IDuration* duration,
            [out] Int32* rst);

        IsLongerThan(
            [in] IDuration* rhs,
            [out] Boolean* rst);

        IsShorterThan(
            [in] IDuration* rhs,
            [out] Boolean* rst);
    }

    } // namespace Datatype
    } // namespace Xml
    } // namespace Elastosx
}

