//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    interface Elastos.Utility.IList;

    namespace Elastosx {
    namespace Net {
    namespace Ssl {

    /**
     * A distinguished name (DN) parser. This parser only supports extracting a
     * string value from a DN. It doesn't support values in the hex-string style.
     *
     * @hide
     */
    interface IDistinguishedNameParser {
        /**
         * Parses the DN and returns the most significant attribute value
         * for an attribute type, or null if none found.
         *
         * @param attributeType attribute type to look for (e.g. "ca")
         */
        FindMostSpecific(
            [in] String attributeType,
            [out] String* specific);

        /**
         * Parses the DN and returns all values for an attribute type, in
         * the order of decreasing significance (most significant first).
         *
         * @param attributeType attribute type to look for (e.g. "ca")
         */
        GetAllMostSpecificFirst(
            [in] String attributeType,
            [out] IList** frist);
    }

    } // namespace Ssl
    } // namespace Net
    } // namespace Elastosx
}