//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    interface Org.Apache.Http.IHeaderElement;
    interface Org.Apache.Http.INameValuePair;
    interface Org.Apache.Http.Message.IParserCursor;
    interface Org.Apache.Http.Utility.ICharArrayBuffer;

    namespace Org {
    namespace Apache {
    namespace Http {
    namespace Message {

    /**
     * Interface for formatting elements of the HEAD section of an HTTP message.
     * This is the complement to {@link LineParser}.
     * There are individual methods for formatting a request line, a
     * status line, or a header line. The formatting does <i>not</i> include the
     * trailing line break sequence CR-LF.
     * The formatted lines are returned in memory, the formatter does not depend
     * on any specific IO mechanism.
     * Instances of this interface are expected to be stateless and thread-safe.
     *
     * @author <a href="mailto:remm@apache.org">Remy Maucherat</a>
     * @author <a href="mailto:mbowler@GargoyleSoftware.com">Mike Bowler</a>
     * @author <a href="mailto:jsdever@apache.org">Jeff Dever</a>
     * @author <a href="mailto:oleg at ural.ru">Oleg Kalnichevski</a>
     * @author and others
     *
     *
     * <!-- empty lines above to avoid 'svn diff' context problems -->
     * @version $Revision: 574185 $
     *
     * @since 4.0
     */
    /**
     * @Involve
     * interface IHttpResponse;
     */
    interface IBasicHttpResponse {

        /**
         * Looks up a reason phrase.
         * This method evaluates the currently set catalog and locale.
         * It also handles a missing catalog.
         *
         * @param code      the status code for which to look up the reason
         *
         * @return  the reason phrase, or <code>null</code> if there is none
         */
        GetReason(
            [in] Int32 code,
            [out] String* reason);

    }

    } // namespace Message
    } // namespace Http
    } // namespace Apache
    } // namespace Org

}
