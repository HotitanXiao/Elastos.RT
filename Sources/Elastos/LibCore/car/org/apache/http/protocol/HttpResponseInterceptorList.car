//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{

    using interface Elastos.Utility.IList;

    interface Org.Apache.Http.IHttpResponseInterceptor;

    namespace Org {
    namespace Apache {
    namespace Http {
    namespace Protocol {

    /**
     * Provides access to an ordered list of response interceptors.
     * Lists are expected to be built upfront and used read-only afterwards
     * for {@link HttpProcessor processing}.
     *
     * @author <a href="mailto:rolandw at apache.org">Roland Weber</a>
     *
     * @version $Revision: 554903 $
     *
     * @since 4.0
     */
    interface IHttpResponseInterceptorList {

        /**
         * Appends a Response interceptor to this list.
         *
         * @param itcp      the Response interceptor to add
         */
        AddResponseInterceptor(
            [in] IHttpResponseInterceptor* itcp);

        /**
         * Inserts a Response interceptor at the specified index.
         *
         * @param itcp      the Response interceptor to add
         * @param index     the index to insert the interceptor at
         */
        AddResponseInterceptor(
            [in] IHttpResponseInterceptor* itcp,
            [in] Int32 index);

        /**
         * Obtains the current size of this list.
         *
         * @return  the number of Response interceptors in this list
         */
        GetResponseInterceptorCount(
            [out] Int32* count);

        /**
         * Obtains a Response interceptor from this list.
         *
         * @param index     the index of the interceptor to obtain,
         *                  0 for first
         *
         * @return  the interceptor at the given index, or
         *          <code>null</code> if the index is out of range
         */
        GetResponseInterceptor(
            [in] Int32 index,
            [out] IHttpResponseInterceptor** interceptor);

        /**
         * Removes all Response interceptors from this list.
         */
        ClearResponseInterceptors();

        /**
         * Removes all Response interceptor of the specified class
         *
         * @param clazz  the class of the instances to be removed.
         */
        RemoveResponseInterceptorByClass(
            [in] IInterface* clazz /*Class clazz*/);

        /**
         * Sets the Response interceptors in this list.
         * This list will be cleared and re-initialized to contain
         * all Response interceptors from the argument list.
         * If the argument list includes elements that are not Response
         * interceptors, the behavior is implementation dependent.
         *
         * @param itcps     the list of Response interceptors
         */
        SetInterceptors(
            [in] IList* itcps);

    }

    } // namespace Protocol
    } // namespace Http
    } // namespace Apache
    } // namespace Org

}
