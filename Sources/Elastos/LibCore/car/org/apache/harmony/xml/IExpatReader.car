//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    using interface Org.Xml.Sax.Ext.ILexicalHandler;

    namespace Org {
    namespace Apache {
    namespace Harmony {
    namespace Xml {

    /**
     * SAX wrapper around Expat. Interns strings. Does not support validation.
     * Does not support {@link DTDHandler}.
     * @Involve
     * interface IXMLReader
     */
    interface IExpatReader {
        /**
         * Returns the current lexical handler.
         *
         * @return the current lexical handler, or null if none has been registered
         * @see #setLexicalHandler
         */
        GetLexicalHandler(
            [out] ILexicalHandler** handler);

        /**
         * Registers a lexical event handler. Supports neither
         * {@link LexicalHandler#startEntity(String)} nor
         * {@link LexicalHandler#endEntity(String)}.
         *
         * <p>If the application does not register a lexical handler, all
         * lexical events reported by the SAX parser will be silently
         * ignored.</p>
         *
         * <p>Applications may register a new or different handler in the
         * middle of a parse, and the SAX parser must begin using the new
         * handler immediately.</p>
         *
         * @param lexicalHandler listens for lexical events
         * @see #getLexicalHandler()
         */
        SetLexicalHandler(
            [in] ILexicalHandler* lexicalHandler);

        /**
         * Returns true if this SAX parser processes namespaces.
         *
         * @see #setNamespaceProcessingEnabled(boolean)
         */
        IsNamespaceProcessingEnabled(
            [out] Boolean* enabled);

        /**
         * Enables or disables namespace processing. Set to true by default. If you
         * enable namespace processing, the parser will invoke
         * {@link ContentHandler#startPrefixMapping(String, String)} and
         * {@link ContentHandler#endPrefixMapping(String)}, and it will filter
         * out namespace declarations from element attributes.
         *
         * @see #isNamespaceProcessingEnabled()
         */
        SetNamespaceProcessingEnabled(
            [in] Boolean processNamespaces);
    }

    } // namespace Xml
    } // namespace Harmony
    } // namespace Apache
    } // namespace Org
}
