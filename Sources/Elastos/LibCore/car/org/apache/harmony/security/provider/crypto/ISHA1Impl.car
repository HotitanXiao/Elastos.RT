//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Org {
    namespace Apache {
    namespace Harmony {
    namespace Security {
    namespace Provider {
    namespace Crypto {

    /**
     * This class contains methods providing SHA-1 functionality to use in classes. <BR>
     * The methods support the algorithm described in "SECURE HASH STANDARD", FIPS PUB 180-2, <BR>
     * "http://csrc.nist.gov/publications/fips/fips180-2/fips180-2.pdf"      <BR>
     * <BR>
     * The class contains two package level access methods, -
     * "void updateHash(int[], byte[], int, int)" and "void computeHash(int[])", -
     * performing the following operations. <BR>
     * <BR>
     * The "updateHash(..)" method appends new bytes to existing ones
     * within limit of a frame of 64 bytes (16 words).
     * Once a length of accumulated bytes reaches the limit
     * the "computeHash(int[])" method is invoked on the frame to compute updated hash,
     * and the number of bytes in the frame is set to 0.
     * Thus, after appending all bytes, the frame contain only those bytes
     * that were not used in computing final hash value yet. <BR>
     * <BR>
     * The "computeHash(..)" method generates a 160 bit hash value using
     * a 512 bit message stored in first 16 words of int[] array argument and
     * current hash value stored in five words, beginning HASH_OFFSET, of the array argument.
     * Computation is done according to SHA-1 algorithm. <BR>
     * <BR>
     * The resulting hash value replaces the previous hash value in the array;
     * original bits of the message are not preserved.
     */
    interface ISHA1Impl extends ISHA1_Data {}

    } // namespace Crypto
    } // namespace Provider
    } // namespace Security
    } // namespace Harmony
    } // namespace Apache
    } // namespace Org
}
