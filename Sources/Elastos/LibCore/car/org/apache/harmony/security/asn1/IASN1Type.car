//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.IO.IInputStream;
    interface Org.Apache.Harmony.Security.Asn1.IBerInputStream;
    interface Org.Apache.Harmony.Security.Asn1.IBerOutputStream;

    namespace Org {
    namespace Apache {
    namespace Harmony {
    namespace Security {
    namespace Asn1 {

    /**
     * @Involve
     * interface IASN1Constants;
     */
    [deprecated]
    interface IASN1Type {
        Decode(
            [in] ArrayOf<Byte>* encoded,
            [out] IInterface** object);

        Decode(
            [in] ArrayOf<Byte>* encoded,
            [in] Int32 offset,
            [in] Int32 encodingLen,
            [out] IInterface** object);

        Decode(
            [in] IInputStream* is,
            [out] IInterface** object);

        Verify(
            [in] ArrayOf<Byte>* encoded);

        Verify(
            [in] IInputStream* is);

        Encode(
            [in] IInterface* object,
            [out, callee] ArrayOf<Byte>* encode);

        Decode(
            [in] IBerInputStream* bis,
            [out] IInterface** object);

        /**
         * Tests provided identifier.
         *
         * @param identifier identifier to be verified
         * @return true if identifier is associated with this ASN.1 type
        */
        CheckTag(
            [in] Int32 identifier,
            [out] Boolean* checkTag);

        EncodeASN(
            [in] IBerOutputStream* bos);

        EncodeContent(
            [in] IBerOutputStream* bos);

        SetEncodingContent(
            [in] IBerOutputStream* bos);

        GetEncodedLength(
            [in] IBerOutputStream* bos,
            [out] Int32* length);

        /** Integer representation of primitive identifier. */
        GetId(
            [out] Int32* id);

        /** Integer representation of constructed identifier. */
        GetConstrId(
            [out] Int32* constrId);
    }

    } // namespace Asn1
    } // namespace Security
    } // namespace Harmony
    } // namespace Apache
    } // namespace Org
}
