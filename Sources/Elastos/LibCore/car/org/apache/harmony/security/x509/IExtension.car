//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    interface Elastos.Core.IStringBuilder;
    interface Org.Apache.Harmony.Security.Asn1.IASN1Sequence;
    interface Org.Apache.Harmony.Security.X509.IBasicConstraints;
    interface Org.Apache.Harmony.Security.X509.IExtensionValue;
    interface Org.Apache.Harmony.Security.X509.IKeyUsage;

    namespace Org {
    namespace Apache {
    namespace Harmony {
    namespace Security {
    namespace X509 {

    /**
     * The class encapsulates the ASN.1 DER encoding/decoding work
     * with the Extension part of X.509 certificate
     * (as specified in RFC 3280 -
     *  Internet X.509 Public Key Infrastructure.
     *  Certificate and Certificate Revocation List (CRL) Profile.
     *  http://www.ietf.org/rfc/rfc3280.txt):
     *
     * <pre>
     *  Extension  ::=  SEQUENCE  {
     *       extnID      OBJECT IDENTIFIER,
     *       critical    BOOLEAN DEFAULT FALSE,
     *       extnValue   OCTET STRING
     *  }
     * </pre>
     *
     * @ Involve
     * interface Elastos.Security.Cert.IExtension
     */
    interface IX509Extension {
        // critical constants
        const Boolean CRITICAL = TRUE;
        const Boolean NON_CRITICAL = FALSE;

        /**
         * Returns the raw (undecoded octet string) value of extnValue
         * field of the structure.
         */
        GetRawExtnValue(
            [out, callee] ArrayOf<Byte>* rawExtnValue);

        /**
         * Returns ASN.1 encoded form of this X.509 Extension value.
         */
        GetEncoded(
            [out, callee] ArrayOf<Byte>* encode);

        GetDecodedExtensionValue(
            [out] IExtensionValue** extensionValue);

        GetKeyUsageValue(
            [out] IKeyUsage** usageValue);

        GetBasicConstraintsValue(
            [out] IBasicConstraints** basicConstrainsValue);

        DumpValue(
            [in] IStringBuilder* sb,
            [in] String prefix);
    }

    interface IExtensionHelper {
        /**
         * X.509 Extension encoder/decoder.
         */
        GetASN1(
            [out] IASN1Sequence** asn1);

        SetASN1(
            [in] IASN1Sequence* pAsn1);
    }

    } // namespace X509
    } // namespace Security
    } // namespace Harmony
    } // namespace Apache
    } // namespace Org
}
