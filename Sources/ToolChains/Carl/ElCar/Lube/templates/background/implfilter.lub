$;;=========================================================================
$;; Copyright (C) 2012 The Elastos Open Source Project
$;;
$;; Licensed under the Apache License, Version 2.0 (the "License");
$;; you may not use this file except in compliance with the License.
$;; You may obtain a copy of the License at
$;;
$;;      http://www.apache.org/licenses/LICENSE-2.0
$;;
$;; Unless required by applicable law or agreed to in writing, software
$;; distributed under the License is distributed on an "AS IS" BASIS,
$;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
$;; See the License for the specific language governing permissions and
$;; limitations under the License.
$;;=========================================================================
$
$INPUT class
$
$WITH all interfaces DO
$   IF attrib is "filter"
$       WITH all parents_and_me DO
$           WITH all methods DO

${type} _${class.name}::${name}WithPriority(Int32 cFlags$^
$           WITH all parameters DO
, ${type} ${prefixingname(parameter)}$^
$           END DO ;; all parameters
)
{
    ECode ec;

    Boolean _bFirst_ = !_Impl_CheckHelperInfoFlag(HELPER_CALLING_CALLBACK_FILTER);

    if (_bFirst_) {
        _Impl_SetHelperInfoFlag(HELPER_CALLING_CALLBACK_FILTER, TRUE);
        ec = ${name}Filter(cFlags$^
$           WITH all parameters DO
, ${prefixingname(parameter)}$^
$           END DO ;; all parameters
);
        _Impl_SetHelperInfoFlag(HELPER_CALLING_CALLBACK_FILTER, FALSE);
        return ec;
    }
    else {
        _Impl_SetHelperInfoFlag(HELPER_CHILD_CALL_PARENT, TRUE);

        ec = _m_pSuperCallbackTrigger->${name}WithPriority(cFlags$^
$           WITH all parameters DO
, ${prefixingname(parameter)}$^
$           END DO ;; all parameters
);
        _Impl_SetHelperInfoFlag(HELPER_CHILD_CALL_PARENT, FALSE);
        return ec;   
    }
}

$           END DO ;; all methods
$       END DO ;; all parents_and_me
$   END IF ;; attrib is "filter"
$END DO ;; all interfaces
