$;;=========================================================================
$;; Copyright (C) 2012 The Elastos Open Source Project
$;;
$;; Licensed under the Apache License, Version 2.0 (the "License");
$;; you may not use this file except in compliance with the License.
$;; You may obtain a copy of the License at
$;;
$;;      http://www.apache.org/licenses/LICENSE-2.0
$;;
$;; Unless required by applicable law or agreed to in writing, software
$;; distributed under the License is distributed on an "AS IS" BASIS,
$;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
$;; See the License for the specific language governing permissions and
$;; limitations under the License.
$;;=========================================================================
$
$INPUT class
$

protected:
    ObjectContainer m_currICallbackSink;

public:
$WITH all interfaces DO
$   IF attrib is "callback"
    // ${interface.name}
    ObjectContainer m_prep${interface.name};
    ObjectContainer m_curr${interface.name};

$       WITH all parents_and_me DO
$           WITH all methods DO
    CARAPI CancelPending${name}();

    CARAPI ${name}($^
$               WITH all parameters DO
${type} ${prefixingname(parameter)}$^
$                   IF parameter is not last
, $^
$                   END IF
$               END DO ;; all parameters
);

    CARAPI ${name}WithPriority(Int32 cFlags$^
$               WITH all parameters DO
, ${type} ${prefixingname(parameter)}$^
$               END DO ;; all parameters
);

    CARAPI Updating${name}($^
$               WITH all parameters DO
${type} ${prefixingname(parameter)}$^
$                   IF parameter is not last
, $^
$                   END IF
$               END DO ;; all parameters
);

    CARAPI Updating${name}WithPriority(Int32 cFlags$^
$               WITH all parameters DO
, ${type} ${prefixingname(parameter)}$^
$               END DO ;; all parameters
);

$               IF interface.attrib is "delegate"
    // for EventHandler Timeout

    CARAPI ${name}WithTimeout($^
$               WITH all parameters DO
${type} ${prefixingname(parameter)}, $^
$               END DO ;; all parameters
UInt16 timeOut);

    CARAPI ${name}WithPriorityAndTimeout(Int32 cFlags$^
$               WITH all parameters DO
, ${type} ${prefixingname(parameter)}$^
$               END DO ;; all parameters
, UInt16 timeOut);
$               END IF;; delegate

$           END DO ;; all methods
$       END DO ;; all parents_and_me
$   END IF ;; attrib is "callback"
$END DO ;; all interfaces
$
    CARAPI CancelAllPendingCallbacks();

protected:
    virtual CARAPI OnSinkConnecting(PInterface pSink) { return NOERROR; }
    virtual CARAPI OnSinkConnected(PInterface pSink) { return NOERROR; }
    virtual CARAPI OnSinkDisconnected(PInterface pSink) { return NOERROR; }
    CARAPI RemoveAllCallbacks();
    static CARAPI RemoveAllCallbacks(_${name} *pObj) {
        return pObj->RemoveAllCallbacks();
    }

    CARAPI _Connect(PInterface pSink);
    CARAPI _Disconnect(PInterface pSink);
    CARAPI _AddConnection(PInterface pSink);
    CARAPI _CancelPendingCallback(Int32 event);

    _I${name}CallbackTrigger* _m_pChildCallbackTrigger;
private:
    ICallbackConnector *_m_pCBConnector;
